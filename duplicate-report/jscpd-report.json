{
  "statistics": {
    "detectionDate": "2025-07-18T05:52:23.797Z",
    "formats": {
      "typescript": {
        "sources": {
          "supabase/functions/recommendations/index.ts": {
            "lines": 283,
            "tokens": 2199,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 43,
            "duplicatedTokens": 369,
            "percentage": 15.19,
            "percentageTokens": 16.78,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "supabase/functions/openai-proxy/index.ts": {
            "lines": 201,
            "tokens": 1538,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "supabase/functions/nutrition-search/index.ts": {
            "lines": 180,
            "tokens": 1186,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 117,
            "duplicatedTokens": 791,
            "percentage": 65,
            "percentageTokens": 66.69,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "supabase/functions/get-personalized-recipes/index.ts": {
            "lines": 190,
            "tokens": 1610,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 70,
            "duplicatedTokens": 449,
            "percentage": 36.84,
            "percentageTokens": 27.89,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "supabase/functions/elevenlabs-proxy/voices.ts": {
            "lines": 42,
            "tokens": 392,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 57,
            "duplicatedTokens": 551,
            "percentage": 135.71,
            "percentageTokens": 140.56,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "supabase/functions/elevenlabs-proxy/voice-settings.ts": {
            "lines": 62,
            "tokens": 543,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 20,
            "duplicatedTokens": 181,
            "percentage": 32.26,
            "percentageTokens": 33.33,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "supabase/functions/elevenlabs-proxy/user-info.ts": {
            "lines": 47,
            "tokens": 442,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 24,
            "duplicatedTokens": 236,
            "percentage": 51.06,
            "percentageTokens": 53.39,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "supabase/functions/elevenlabs-proxy/text-to-speech.ts": {
            "lines": 84,
            "tokens": 707,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 13,
            "duplicatedTokens": 134,
            "percentage": 15.48,
            "percentageTokens": 18.95,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "supabase/functions/elevenlabs-proxy/index.ts": {
            "lines": 74,
            "tokens": 696,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 28,
            "duplicatedTokens": 185,
            "percentage": 37.84,
            "percentageTokens": 26.58,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "supabase/functions/circadian-analyzer/index.ts": {
            "lines": 193,
            "tokens": 1638,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 58,
            "duplicatedTokens": 483,
            "percentage": 30.05,
            "percentageTokens": 29.49,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/cn.ts": {
            "lines": 5,
            "tokens": 61,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/store/useUserProfileStore.ts": {
            "lines": 337,
            "tokens": 3383,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useTheme.ts": {
            "lines": 86,
            "tokens": 696,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/api/supplementApi.ts": {
            "lines": 472,
            "tokens": 3791,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 36,
            "duplicatedTokens": 336,
            "percentage": 7.63,
            "percentageTokens": 8.86,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/api/recipeApi.ts": {
            "lines": 376,
            "tokens": 2981,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 84,
            "duplicatedTokens": 559,
            "percentage": 22.34,
            "percentageTokens": 18.75,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/api/nutritionApi.ts": {
            "lines": 340,
            "tokens": 2620,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 51,
            "duplicatedTokens": 314,
            "percentage": 15,
            "percentageTokens": 11.98,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/api/labResultsApi.ts": {
            "lines": 347,
            "tokens": 2646,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/api/fitnessApi.ts": {
            "lines": 325,
            "tokens": 3092,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 28,
            "duplicatedTokens": 234,
            "percentage": 8.62,
            "percentageTokens": 7.57,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/api/elevenlabsApi.ts": {
            "lines": 173,
            "tokens": 1522,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/chartConfig.ts": {
            "lines": 30,
            "tokens": 125,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "vitest.config.ts": {
            "lines": 23,
            "tokens": 165,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "vite.config.ts": {
            "lines": 60,
            "tokens": 444,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "openai-proxy.ts": {
            "lines": 63,
            "tokens": 562,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "index.ts": {
            "lines": 363,
            "tokens": 3359,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 61,
            "duplicatedTokens": 586,
            "percentage": 16.8,
            "percentageTokens": 17.45,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "index.test.ts": {
            "lines": 45,
            "tokens": 473,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 4401,
          "tokens": 36871,
          "sources": 25,
          "clones": 17,
          "duplicatedLines": 345,
          "duplicatedTokens": 2704,
          "percentage": 7.84,
          "percentageTokens": 7.33,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "javascript": {
        "sources": {
          "src/pages/auth/SignupPage.tsx": {
            "lines": 120,
            "tokens": 767,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/auth/LoginPage.tsx": {
            "lines": 79,
            "tokens": 511,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/card.tsx": {
            "lines": 18,
            "tokens": 199,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/Toast.tsx": {
            "lines": 40,
            "tokens": 326,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/Tabs.tsx": {
            "lines": 81,
            "tokens": 499,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/MobileNav.tsx": {
            "lines": 194,
            "tokens": 1678,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 137,
            "duplicatedTokens": 1097,
            "percentage": 70.62,
            "percentageTokens": 65.38,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/Input.tsx": {
            "lines": 5,
            "tokens": 20,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/Card.tsx": {
            "lines": 10,
            "tokens": 46,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/Button.tsx": {
            "lines": 10,
            "tokens": 46,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/supplements/SupplementRecommendations.tsx": {
            "lines": 270,
            "tokens": 2356,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/supplements/SupplementGrid.tsx": {
            "lines": 81,
            "tokens": 619,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/supplements/SupplementCard.tsx": {
            "lines": 92,
            "tokens": 711,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/supplements/StackBuilderModal.tsx": {
            "lines": 224,
            "tokens": 1976,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/settings/ThemeSettings.tsx": {
            "lines": 58,
            "tokens": 358,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/onboarding/EnhancedOnboardingForm.tsx": {
            "lines": 622,
            "tokens": 5894,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/nutrition/SavedRecipesGrid.tsx": {
            "lines": 196,
            "tokens": 1607,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/nutrition/RecipeFilters.tsx": {
            "lines": 100,
            "tokens": 892,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/nutrition/RecipeDetail.tsx": {
            "lines": 208,
            "tokens": 1943,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/nutrition/RecipeCard.tsx": {
            "lines": 18,
            "tokens": 127,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/nutrition/PersonalizedRecipes.tsx": {
            "lines": 60,
            "tokens": 529,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/nutrition/NutritionTracker.tsx": {
            "lines": 218,
            "tokens": 2075,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/nutrition/NutritionDashboard.tsx": {
            "lines": 84,
            "tokens": 916,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/layout/Navigation.tsx": {
            "lines": 269,
            "tokens": 2460,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 269,
            "duplicatedTokens": 2460,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/layout/MobileNav.tsx": {
            "lines": 200,
            "tokens": 1624,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 137,
            "duplicatedTokens": 1097,
            "percentage": 68.5,
            "percentageTokens": 67.55,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/layout/MinimalNav.tsx": {
            "lines": 370,
            "tokens": 3113,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 130,
            "duplicatedTokens": 1238,
            "percentage": 35.14,
            "percentageTokens": 39.77,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/layout/Layout.tsx": {
            "lines": 35,
            "tokens": 242,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/lab/LabResultsTrends.tsx": {
            "lines": 0,
            "tokens": 9,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/health/EvidenceBasedHealthOptimization.tsx": {
            "lines": 298,
            "tokens": 3087,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 404,
            "duplicatedTokens": 4044,
            "percentage": 135.57,
            "percentageTokens": 131,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/fitness/FitnessTracker.tsx": {
            "lines": 262,
            "tokens": 2156,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/fitness/FitnessRoutines.tsx": {
            "lines": 40,
            "tokens": 350,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/fitness/FitnessGoals.tsx": {
            "lines": 10,
            "tokens": 94,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/fitness/ActivityCalorieTracker.tsx": {
            "lines": 52,
            "tokens": 576,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/dashboard/WearableDeviceCard.tsx": {
            "lines": 52,
            "tokens": 468,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/dashboard/TrendsChart.tsx": {
            "lines": 13,
            "tokens": 144,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/dashboard/SupplementTracker.tsx": {
            "lines": 50,
            "tokens": 412,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/dashboard/StatisticsGrid.tsx": {
            "lines": 109,
            "tokens": 1180,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/dashboard/RecommendationsCard.tsx": {
            "lines": 18,
            "tokens": 177,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/dashboard/ProgressRing.tsx": {
            "lines": 43,
            "tokens": 383,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/dashboard/MetricsCard.tsx": {
            "lines": 20,
            "tokens": 226,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/dashboard/HealthScoreCard.tsx": {
            "lines": 57,
            "tokens": 553,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/dashboard/GoalsProgress.tsx": {
            "lines": 5,
            "tokens": 62,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/dashboard/DashboardCards.tsx": {
            "lines": 0,
            "tokens": 15,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/dashboard/BWScoreCard.tsx": {
            "lines": 74,
            "tokens": 615,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 30,
            "duplicatedTokens": 236,
            "percentage": 40.54,
            "percentageTokens": 38.37,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/dashboard/ActivityTimeline.tsx": {
            "lines": 19,
            "tokens": 153,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/chat/VoicePreferences.tsx": {
            "lines": 184,
            "tokens": 1369,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/chat/MyCoach.tsx": {
            "lines": 142,
            "tokens": 1275,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 7,
            "duplicatedTokens": 76,
            "percentage": 4.93,
            "percentageTokens": 5.96,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/chat/ChatMessage.tsx": {
            "lines": 50,
            "tokens": 429,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/chat/AIHealthCoach.tsx": {
            "lines": 89,
            "tokens": 743,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 7,
            "duplicatedTokens": 76,
            "percentage": 7.87,
            "percentageTokens": 10.23,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/bioclock/BioClockInsight.tsx": {
            "lines": 38,
            "tokens": 382,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SupplementsPage.tsx": {
            "lines": 269,
            "tokens": 2460,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 269,
            "duplicatedTokens": 2460,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SupplementStorePage.tsx": {
            "lines": 220,
            "tokens": 2079,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SupplementDetailPage.tsx": {
            "lines": 216,
            "tokens": 1696,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SettingsPage.tsx": {
            "lines": 122,
            "tokens": 1039,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/ResetPasswordPage.tsx": {
            "lines": 60,
            "tokens": 450,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/RecipeDetailPage.tsx": {
            "lines": 33,
            "tokens": 285,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/ProfilePage.tsx": {
            "lines": 168,
            "tokens": 1297,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/ProfileExportPage.tsx": {
            "lines": 45,
            "tokens": 340,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/PricingPage.tsx": {
            "lines": 176,
            "tokens": 1823,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 96,
            "percentage": 5.68,
            "percentageTokens": 5.27,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/MyStacksPage.tsx": {
            "lines": 101,
            "tokens": 887,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/MetabolismPage.tsx": {
            "lines": 124,
            "tokens": 1156,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/LabResultsPage.tsx": {
            "lines": 331,
            "tokens": 2884,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/LabResultDetailPage.tsx": {
            "lines": 196,
            "tokens": 1612,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/HomePage.tsx": {
            "lines": 174,
            "tokens": 1478,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 192,
            "duplicatedTokens": 1759,
            "percentage": 110.34,
            "percentageTokens": 119.01,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/ForgotPasswordPage.tsx": {
            "lines": 36,
            "tokens": 227,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/FitnessPage.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/FertilityPartnerPage.tsx": {
            "lines": 188,
            "tokens": 1832,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/DashboardPage.tsx": {
            "lines": 95,
            "tokens": 586,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/CartPage.tsx": {
            "lines": 102,
            "tokens": 990,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/BioClockPage.tsx": {
            "lines": 211,
            "tokens": 1721,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 34,
            "duplicatedTokens": 274,
            "percentage": 16.11,
            "percentageTokens": 15.92,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/AboutPage.tsx": {
            "lines": 201,
            "tokens": 1861,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 154,
            "duplicatedTokens": 1445,
            "percentage": 76.62,
            "percentageTokens": 77.65,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/App.tsx": {
            "lines": 52,
            "tokens": 878,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "tailwind.config.js": {
            "lines": 105,
            "tokens": 671,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "postcss.config.js": {
            "lines": 5,
            "tokens": 33,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "eslint.config.js": {
            "lines": 64,
            "tokens": 534,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 8581,
          "tokens": 75214,
          "sources": 74,
          "clones": 16,
          "duplicatedLines": 890,
          "duplicatedTokens": 8179,
          "percentage": 10.37,
          "percentageTokens": 10.87,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "tsx": {
        "sources": {
          "src/pages/auth/SignupPage.tsx": {
            "lines": 229,
            "tokens": 1635,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 86,
            "duplicatedTokens": 614,
            "percentage": 37.55,
            "percentageTokens": 37.55,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/auth/OnboardingPage.tsx": {
            "lines": 21,
            "tokens": 154,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/auth/LoginPage.tsx": {
            "lines": 166,
            "tokens": 1223,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 86,
            "duplicatedTokens": 614,
            "percentage": 51.81,
            "percentageTokens": 50.2,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/card.tsx": {
            "lines": 44,
            "tokens": 371,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/Toast.tsx": {
            "lines": 110,
            "tokens": 832,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/Tabs.tsx": {
            "lines": 146,
            "tokens": 945,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/MobileNav.tsx": {
            "lines": 261,
            "tokens": 2128,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 73,
            "duplicatedTokens": 536,
            "percentage": 27.97,
            "percentageTokens": 25.19,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/Input.tsx": {
            "lines": 24,
            "tokens": 151,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/Card.tsx": {
            "lines": 40,
            "tokens": 308,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/Button.tsx": {
            "lines": 64,
            "tokens": 449,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/supplements/SupplementRecommendations.tsx": {
            "lines": 377,
            "tokens": 3148,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 151,
            "percentage": 5.04,
            "percentageTokens": 4.8,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/supplements/SupplementGrid.tsx": {
            "lines": 172,
            "tokens": 1418,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 100,
            "percentage": 6.98,
            "percentageTokens": 7.05,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/supplements/SupplementCard.tsx": {
            "lines": 204,
            "tokens": 1562,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 100,
            "percentage": 5.88,
            "percentageTokens": 6.4,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/supplements/StackBuilderModal.tsx": {
            "lines": 489,
            "tokens": 4364,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 94,
            "percentage": 2.45,
            "percentageTokens": 2.15,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/settings/ThemeSettings.tsx": {
            "lines": 101,
            "tokens": 775,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/onboarding/EnhancedOnboardingForm.tsx": {
            "lines": 913,
            "tokens": 8101,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 66,
            "duplicatedTokens": 664,
            "percentage": 7.23,
            "percentageTokens": 8.2,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/nutrition/SavedRecipesGrid.tsx": {
            "lines": 350,
            "tokens": 3112,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 24,
            "duplicatedTokens": 188,
            "percentage": 6.86,
            "percentageTokens": 6.04,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/nutrition/RecipeFilters.tsx": {
            "lines": 201,
            "tokens": 1857,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/nutrition/RecipeDetail.tsx": {
            "lines": 256,
            "tokens": 2410,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 97,
            "percentage": 4.3,
            "percentageTokens": 4.02,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/nutrition/RecipeCard.tsx": {
            "lines": 110,
            "tokens": 1022,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 97,
            "percentage": 10,
            "percentageTokens": 9.49,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/nutrition/PersonalizedRecipes.tsx": {
            "lines": 204,
            "tokens": 1748,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/nutrition/NutritionTracker.tsx": {
            "lines": 374,
            "tokens": 3366,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/nutrition/NutritionDashboard.tsx": {
            "lines": 268,
            "tokens": 2592,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/layout/Navigation.tsx": {
            "lines": 424,
            "tokens": 3985,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 518,
            "duplicatedTokens": 4910,
            "percentage": 122.17,
            "percentageTokens": 123.21,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/layout/MobileNav.tsx": {
            "lines": 250,
            "tokens": 2036,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 73,
            "duplicatedTokens": 536,
            "percentage": 29.2,
            "percentageTokens": 26.33,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/layout/MinimalNav.tsx": {
            "lines": 519,
            "tokens": 4565,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 16,
            "duplicatedTokens": 110,
            "percentage": 3.08,
            "percentageTokens": 2.41,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/layout/Layout.tsx": {
            "lines": 134,
            "tokens": 1099,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 16,
            "duplicatedTokens": 110,
            "percentage": 11.94,
            "percentageTokens": 10.01,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/lab/LabResultsTrends.tsx": {
            "lines": 153,
            "tokens": 1250,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/health/EvidenceBasedHealthOptimization.tsx": {
            "lines": 354,
            "tokens": 3567,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/fitness/FitnessTracker.tsx": {
            "lines": 536,
            "tokens": 4591,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/fitness/FitnessRoutines.tsx": {
            "lines": 149,
            "tokens": 1401,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/fitness/FitnessGoals.tsx": {
            "lines": 118,
            "tokens": 923,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 7,
            "duplicatedTokens": 75,
            "percentage": 5.93,
            "percentageTokens": 8.13,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/fitness/ActivityCalorieTracker.tsx": {
            "lines": 207,
            "tokens": 1871,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/dashboard/WearableDeviceCard.tsx": {
            "lines": 112,
            "tokens": 967,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/dashboard/TrendsChart.tsx": {
            "lines": 249,
            "tokens": 2038,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/dashboard/SupplementTracker.tsx": {
            "lines": 141,
            "tokens": 1120,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 42,
            "duplicatedTokens": 273,
            "percentage": 29.79,
            "percentageTokens": 24.38,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/dashboard/StatisticsGrid.tsx": {
            "lines": 273,
            "tokens": 2579,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/dashboard/RecommendationsCard.tsx": {
            "lines": 88,
            "tokens": 682,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 21,
            "duplicatedTokens": 133,
            "percentage": 23.86,
            "percentageTokens": 19.5,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/dashboard/ProgressRing.tsx": {
            "lines": 89,
            "tokens": 729,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/dashboard/MetricsCard.tsx": {
            "lines": 69,
            "tokens": 570,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/dashboard/MacroCard.tsx": {
            "lines": 18,
            "tokens": 331,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/dashboard/HealthScoreCard.tsx": {
            "lines": 94,
            "tokens": 869,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/dashboard/GoalsProgress.tsx": {
            "lines": 93,
            "tokens": 819,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 7,
            "duplicatedTokens": 75,
            "percentage": 7.53,
            "percentageTokens": 9.16,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/dashboard/DashboardCards.tsx": {
            "lines": 140,
            "tokens": 1578,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/dashboard/BWScoreCard.tsx": {
            "lines": 185,
            "tokens": 1749,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/dashboard/ActivityTimeline.tsx": {
            "lines": 114,
            "tokens": 910,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 21,
            "duplicatedTokens": 140,
            "percentage": 18.42,
            "percentageTokens": 15.38,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/chat/VoicePreferences.tsx": {
            "lines": 371,
            "tokens": 2974,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 28,
            "duplicatedTokens": 172,
            "percentage": 7.55,
            "percentageTokens": 5.78,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/chat/MyCoach.tsx": {
            "lines": 648,
            "tokens": 5328,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 115,
            "duplicatedTokens": 945,
            "percentage": 17.75,
            "percentageTokens": 17.74,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/chat/ChatMessage.tsx": {
            "lines": 91,
            "tokens": 739,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/chat/AIHealthCoach.tsx": {
            "lines": 345,
            "tokens": 2986,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 115,
            "duplicatedTokens": 945,
            "percentage": 33.33,
            "percentageTokens": 31.65,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/bioclock/BioClockInsight.tsx": {
            "lines": 77,
            "tokens": 649,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SupplementsPage.tsx": {
            "lines": 424,
            "tokens": 3976,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 418,
            "duplicatedTokens": 3839,
            "percentage": 98.58,
            "percentageTokens": 96.55,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SupplementStorePage.tsx": {
            "lines": 487,
            "tokens": 4204,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 34,
            "duplicatedTokens": 489,
            "percentage": 6.98,
            "percentageTokens": 11.63,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SupplementRecommendationsPage.tsx": {
            "lines": 18,
            "tokens": 157,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SupplementDetailPage.tsx": {
            "lines": 509,
            "tokens": 4063,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 94,
            "percentage": 2.36,
            "percentageTokens": 2.31,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SettingsPage.tsx": {
            "lines": 288,
            "tokens": 2654,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 65,
            "duplicatedTokens": 639,
            "percentage": 22.57,
            "percentageTokens": 24.08,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SavedRecipesPage.tsx": {
            "lines": 18,
            "tokens": 151,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/ResetPasswordPage.tsx": {
            "lines": 187,
            "tokens": 1621,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 9,
            "duplicatedTokens": 92,
            "percentage": 4.81,
            "percentageTokens": 5.68,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/RecipesPage.tsx": {
            "lines": 18,
            "tokens": 159,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/RecipeDetailPage.tsx": {
            "lines": 171,
            "tokens": 1536,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 23,
            "duplicatedTokens": 188,
            "percentage": 13.45,
            "percentageTokens": 12.24,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/ProfilePage.tsx": {
            "lines": 357,
            "tokens": 2943,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 9,
            "duplicatedTokens": 96,
            "percentage": 2.52,
            "percentageTokens": 3.26,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/ProfileExportPage.tsx": {
            "lines": 330,
            "tokens": 3121,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 28,
            "duplicatedTokens": 256,
            "percentage": 8.48,
            "percentageTokens": 8.2,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/PricingPage.tsx": {
            "lines": 238,
            "tokens": 2250,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 34,
            "duplicatedTokens": 360,
            "percentage": 14.29,
            "percentageTokens": 16,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/ParticipationSelectionPage.tsx": {
            "lines": 173,
            "tokens": 1854,
            "sources": 1,
            "clones": 13,
            "duplicatedLines": 91,
            "duplicatedTokens": 1231,
            "percentage": 52.6,
            "percentageTokens": 66.4,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/NutritionPage.tsx": {
            "lines": 18,
            "tokens": 153,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/NutritionDashboardPage.tsx": {
            "lines": 18,
            "tokens": 155,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/NotFoundPage.tsx": {
            "lines": 28,
            "tokens": 223,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/MyStacksPage.tsx": {
            "lines": 228,
            "tokens": 2140,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 55,
            "duplicatedTokens": 516,
            "percentage": 24.12,
            "percentageTokens": 24.11,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/MyCoachPage.tsx": {
            "lines": 20,
            "tokens": 165,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/MetabolismPage.tsx": {
            "lines": 605,
            "tokens": 5094,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 10,
            "duplicatedTokens": 143,
            "percentage": 1.65,
            "percentageTokens": 2.81,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/LabResultsPage.tsx": {
            "lines": 548,
            "tokens": 5057,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 36,
            "duplicatedTokens": 312,
            "percentage": 6.57,
            "percentageTokens": 6.17,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/LabResultDetailPage.tsx": {
            "lines": 319,
            "tokens": 2741,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 20,
            "duplicatedTokens": 160,
            "percentage": 6.27,
            "percentageTokens": 5.84,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/HomePage.tsx": {
            "lines": 228,
            "tokens": 1850,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/ForgotPasswordPage.tsx": {
            "lines": 129,
            "tokens": 1070,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 9,
            "duplicatedTokens": 92,
            "percentage": 6.98,
            "percentageTokens": 8.6,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/FitnessPage.tsx": {
            "lines": 102,
            "tokens": 913,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 85,
            "percentage": 9.8,
            "percentageTokens": 9.31,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/FertilityPartnerPage.tsx": {
            "lines": 598,
            "tokens": 5705,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 44,
            "duplicatedTokens": 576,
            "percentage": 7.36,
            "percentageTokens": 10.1,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/DashboardPage.tsx": {
            "lines": 407,
            "tokens": 2771,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/CartPage.tsx": {
            "lines": 384,
            "tokens": 3313,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/BioClockPage.tsx": {
            "lines": 597,
            "tokens": 5484,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 8,
            "duplicatedTokens": 85,
            "percentage": 1.34,
            "percentageTokens": 1.55,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/AboutPage.tsx": {
            "lines": 280,
            "tokens": 2412,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main.tsx": {
            "lines": 13,
            "tokens": 87,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/App.tsx": {
            "lines": 190,
            "tokens": 2029,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 30,
            "duplicatedTokens": 336,
            "percentage": 15.79,
            "percentageTokens": 16.56,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 19095,
          "tokens": 166627,
          "sources": 82,
          "clones": 57,
          "duplicatedLines": 1168,
          "duplicatedTokens": 10634,
          "percentage": 6.12,
          "percentageTokens": 6.38,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "sql": {
        "sources": {
          "supabase/migrations/20250717121236_jolly_fog.sql": {
            "lines": 76,
            "tokens": 404,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "supabase/migrations/20250717120241_lively_pond.sql": {
            "lines": 145,
            "tokens": 1225,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "supabase/migrations/20250717114311_heavy_island.sql": {
            "lines": 77,
            "tokens": 580,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "supabase/migrations/20250717111900_fancy_butterfly.sql": {
            "lines": 112,
            "tokens": 1189,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "supabase/migrations/20250717110924_hidden_credit.sql": {
            "lines": 91,
            "tokens": 698,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "supabase/migrations/20250717105240_lingering_villa.sql": {
            "lines": 63,
            "tokens": 535,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "supabase/migrations/20250717104818_wandering_lagoon.sql": {
            "lines": 64,
            "tokens": 576,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "supabase/migrations/20250717103338_bronze_bird.sql": {
            "lines": 150,
            "tokens": 1337,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "supabase/migrations/20250717103254_humble_shrine.sql": {
            "lines": 64,
            "tokens": 229,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "supabase/migrations/20250717103231_flat_stream.sql": {
            "lines": 144,
            "tokens": 975,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "supabase/migrations/20250717102947_peaceful_wave.sql": {
            "lines": 159,
            "tokens": 1166,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "supabase/migrations/20250717101320_smooth_palace.sql": {
            "lines": 59,
            "tokens": 389,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "supabase/migrations/20250717101001_foggy_castle.sql": {
            "lines": 96,
            "tokens": 611,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "supabase/migrations/20250717100800_shy_block.sql": {
            "lines": 92,
            "tokens": 1005,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "supabase/migrations/20250717095950_stark_bridge.sql": {
            "lines": 170,
            "tokens": 1960,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 54,
            "duplicatedTokens": 595,
            "percentage": 31.76,
            "percentageTokens": 30.36,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "supabase/migrations/20250717095730_odd_night.sql": {
            "lines": 140,
            "tokens": 902,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 44,
            "duplicatedTokens": 402,
            "percentage": 31.43,
            "percentageTokens": 44.57,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "supabase/migrations/20250717095323_falling_shape.sql": {
            "lines": 118,
            "tokens": 889,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 127,
            "percentage": 8.47,
            "percentageTokens": 14.29,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "supabase/migrations/20250717092720_fading_lodge.sql": {
            "lines": 90,
            "tokens": 596,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "supabase/migrations/20250717092409_maroon_violet.sql": {
            "lines": 143,
            "tokens": 1257,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "supabase/migrations/20250717071214_steep_desert.sql": {
            "lines": 100,
            "tokens": 543,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 110,
            "duplicatedTokens": 766,
            "percentage": 110,
            "percentageTokens": 141.07,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "supabase/migrations/20250717035431_fancy_frog.sql": {
            "lines": 79,
            "tokens": 501,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "supabase/migrations/20250717033427_square_unit.sql": {
            "lines": 21,
            "tokens": 165,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "supabase/migrations/20250716151606_peaceful_palace.sql": {
            "lines": 63,
            "tokens": 348,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "supabase/migrations/20250716111405_mellow_jungle.sql": {
            "lines": 140,
            "tokens": 1237,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 33,
            "duplicatedTokens": 345,
            "percentage": 23.57,
            "percentageTokens": 27.89,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          ".bolt/supabase_discarded_migrations/20250717071545_broken_stream.sql": {
            "lines": 100,
            "tokens": 573,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 193,
            "duplicatedTokens": 1298,
            "percentage": 193,
            "percentageTokens": 226.53,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          ".bolt/supabase_discarded_migrations/20250717070128_frosty_disk.sql": {
            "lines": 99,
            "tokens": 556,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 109,
            "duplicatedTokens": 635,
            "percentage": 110.1,
            "percentageTokens": 114.21,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          ".bolt/supabase_discarded_migrations/20250717044539_polished_portal.sql": {
            "lines": 128,
            "tokens": 863,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 33,
            "duplicatedTokens": 345,
            "percentage": 25.78,
            "percentageTokens": 39.98,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          ".bolt/supabase_discarded_migrations/20250717042919_sunny_marsh.sql": {
            "lines": 88,
            "tokens": 509,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 30,
            "duplicatedTokens": 290,
            "percentage": 34.09,
            "percentageTokens": 56.97,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "20250715141807_royal_art.sql": {
            "lines": 86,
            "tokens": 508,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "20250708222641_sparkling_lab.sql": {
            "lines": 60,
            "tokens": 348,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "20250708215814_foggy_mud.sql": {
            "lines": 271,
            "tokens": 3866,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 266,
            "duplicatedTokens": 3977,
            "percentage": 98.15,
            "percentageTokens": 102.87,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "20250708212920_billowing_cake.sql": {
            "lines": 274,
            "tokens": 3866,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 773,
            "duplicatedTokens": 11587,
            "percentage": 282.12,
            "percentageTokens": 299.72,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "20250708205359_bright_leaf.sql": {
            "lines": 275,
            "tokens": 3866,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 258,
            "duplicatedTokens": 3863,
            "percentage": 93.82,
            "percentageTokens": 99.92,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "20250708204221_soft_king.sql": {
            "lines": 273,
            "tokens": 3866,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 258,
            "duplicatedTokens": 3863,
            "percentage": 94.51,
            "percentageTokens": 99.92,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "20250628120000_shopping_cart.sql": {
            "lines": 46,
            "tokens": 311,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "20250627000000_enhanced_user_profile.sql": {
            "lines": 84,
            "tokens": 1244,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 25,
            "duplicatedTokens": 420,
            "percentage": 29.76,
            "percentageTokens": 33.76,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "20250625090726_silver_base.sql": {
            "lines": 62,
            "tokens": 272,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "20250619090520_add_supplements_goal.sql": {
            "lines": 11,
            "tokens": 226,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "20250611130000_resolve_audio_cache.sql": {
            "lines": 127,
            "tokens": 753,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 74,
            "duplicatedTokens": 535,
            "percentage": 58.27,
            "percentageTokens": 71.05,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "20250611125453_nameless_field.sql": {
            "lines": 126,
            "tokens": 751,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 106,
            "duplicatedTokens": 702,
            "percentage": 84.13,
            "percentageTokens": 93.48,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "20250609010758_dark_pebble.sql": {
            "lines": 156,
            "tokens": 925,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 32,
            "duplicatedTokens": 119,
            "percentage": 20.51,
            "percentageTokens": 12.86,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "20250609005139_spring_palace.sql": {
            "lines": 94,
            "tokens": 497,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 46,
            "duplicatedTokens": 301,
            "percentage": 48.94,
            "percentageTokens": 60.56,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "20250519101218_ancient_spring.sql": {
            "lines": 35,
            "tokens": 187,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "20250519090347_velvet_stream.sql": {
            "lines": 13,
            "tokens": 36,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "20250519084328_ivory_reef.sql": {
            "lines": 81,
            "tokens": 486,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "20250519080710_dark_cave.sql": {
            "lines": 117,
            "tokens": 787,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "20250517054935_soft_river.sql": {
            "lines": 16,
            "tokens": 80,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "20250517053720_noisy_shrine.sql": {
            "lines": 27,
            "tokens": 131,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "20250517052337_humble_hill.sql": {
            "lines": 21,
            "tokens": 93,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "20250515064147_emerald_wood.sql": {
            "lines": 66,
            "tokens": 297,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 53,
            "duplicatedTokens": 294,
            "percentage": 80.3,
            "percentageTokens": 98.99,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "20250515063539_jolly_hill.sql": {
            "lines": 66,
            "tokens": 297,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 53,
            "duplicatedTokens": 294,
            "percentage": 80.3,
            "percentageTokens": 98.99,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "20250515054433_bold_mouse.sql": {
            "lines": 46,
            "tokens": 328,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 78,
            "duplicatedTokens": 569,
            "percentage": 169.57,
            "percentageTokens": 173.48,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "20250515035013_raspy_flame.sql": {
            "lines": 46,
            "tokens": 328,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 46,
            "duplicatedTokens": 328,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "20250515034253_humble_canyon.sql": {
            "lines": 55,
            "tokens": 272,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 32,
            "duplicatedTokens": 241,
            "percentage": 58.18,
            "percentageTokens": 88.6,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "20250504053757_mellow_pebble.sql": {
            "lines": 93,
            "tokens": 913,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 525,
            "duplicatedTokens": 5272,
            "percentage": 564.52,
            "percentageTokens": 577.44,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "20250504051757_hidden_term.sql": {
            "lines": 94,
            "tokens": 926,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 90,
            "duplicatedTokens": 894,
            "percentage": 95.74,
            "percentageTokens": 96.54,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "20250504050506_dawn_portal.sql": {
            "lines": 94,
            "tokens": 926,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 94,
            "duplicatedTokens": 926,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "20250504045606_heavy_villa.sql": {
            "lines": 110,
            "tokens": 872,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 96,
            "duplicatedTokens": 936,
            "percentage": 87.27,
            "percentageTokens": 107.34,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "20250504044000_rustic_breeze.sql": {
            "lines": 100,
            "tokens": 872,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 86,
            "duplicatedTokens": 869,
            "percentage": 86,
            "percentageTokens": 99.66,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "20250504043319_orange_river.sql": {
            "lines": 99,
            "tokens": 872,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 86,
            "duplicatedTokens": 869,
            "percentage": 86.87,
            "percentageTokens": 99.66,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "20250504042549_cool_paper.sql": {
            "lines": 106,
            "tokens": 872,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 86,
            "duplicatedTokens": 869,
            "percentage": 81.13,
            "percentageTokens": 99.66,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "20250504032059_wispy_bread.sql": {
            "lines": 85,
            "tokens": 558,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 13,
            "duplicatedTokens": 91,
            "percentage": 15.29,
            "percentageTokens": 16.31,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "20250503092542_floating_villa.sql": {
            "lines": 43,
            "tokens": 225,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "20250503092225_pink_peak.sql": {
            "lines": 56,
            "tokens": 125,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "20250503090849_muddy_surf.sql": {
            "lines": 191,
            "tokens": 1021,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "20250503090706_dawn_jungle.sql": {
            "lines": 81,
            "tokens": 156,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 62,
            "duplicatedTokens": 130,
            "percentage": 76.54,
            "percentageTokens": 83.33,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "20250503061000_ivory_cottage.sql": {
            "lines": 32,
            "tokens": 161,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "20250502071348_shrill_sun.sql": {
            "lines": 79,
            "tokens": 445,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 27,
            "duplicatedTokens": 158,
            "percentage": 34.18,
            "percentageTokens": 35.51,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "20250502070946_icy_dune.sql": {
            "lines": 74,
            "tokens": 331,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 27,
            "duplicatedTokens": 158,
            "percentage": 36.49,
            "percentageTokens": 47.73,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "20250502070113_old_firefly.sql": {
            "lines": 36,
            "tokens": 159,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "20250502054159_sunny_sound.sql": {
            "lines": 6,
            "tokens": 63,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "20250502054117_late_stream.sql": {
            "lines": 17,
            "tokens": 66,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "20250502053532_pale_rain.sql": {
            "lines": 37,
            "tokens": 184,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "20250422053012_noisy_summit.sql": {
            "lines": 97,
            "tokens": 275,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 62,
            "duplicatedTokens": 130,
            "percentage": 63.92,
            "percentageTokens": 47.27,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "20250418101638_muddy_mode.sql": {
            "lines": 213,
            "tokens": 1693,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 7148,
          "tokens": 58154,
          "sources": 75,
          "clones": 39,
          "duplicatedLines": 1985,
          "duplicatedTokens": 21599,
          "percentage": 27.77,
          "percentageTokens": 37.14,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "markup": {
        "sources": {
          "src/index.html": {
            "lines": 24,
            "tokens": 413,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 16,
            "duplicatedTokens": 245,
            "percentage": 66.67,
            "percentageTokens": 59.32,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "sitemap.xml": {
            "lines": 38,
            "tokens": 290,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "index.html": {
            "lines": 20,
            "tokens": 302,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 16,
            "duplicatedTokens": 245,
            "percentage": 80,
            "percentageTokens": 81.13,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "favicon.svg": {
            "lines": 23,
            "tokens": 261,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 105,
          "tokens": 1266,
          "sources": 4,
          "clones": 2,
          "duplicatedLines": 16,
          "duplicatedTokens": 245,
          "percentage": 15.24,
          "percentageTokens": 19.35,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "css": {
        "sources": {
          "src/index.css": {
            "lines": 327,
            "tokens": 1812,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 327,
          "tokens": 1812,
          "sources": 1,
          "clones": 0,
          "duplicatedLines": 0,
          "duplicatedTokens": 0,
          "percentage": 0,
          "percentageTokens": 0,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "json": {
        "sources": {
          "tsconfig.node.json": {
            "lines": 21,
            "tokens": 130,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "tsconfig.json": {
            "lines": 15,
            "tokens": 98,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "tsconfig.app.json": {
            "lines": 24,
            "tokens": 159,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "supplements.json": {
            "lines": 161,
            "tokens": 1040,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "package.json": {
            "lines": 109,
            "tokens": 694,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "manifest.json": {
            "lines": 59,
            "tokens": 330,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 389,
          "tokens": 2451,
          "sources": 6,
          "clones": 0,
          "duplicatedLines": 0,
          "duplicatedTokens": 0,
          "percentage": 0,
          "percentageTokens": 0,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "bash": {
        "sources": {
          "setup.sh": {
            "lines": 7,
            "tokens": 18,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 7,
          "tokens": 18,
          "sources": 1,
          "clones": 0,
          "duplicatedLines": 0,
          "duplicatedTokens": 0,
          "percentage": 0,
          "percentageTokens": 0,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "markdown": {
        "sources": {
          "customizing-supabase-auth.md": {
            "lines": 92,
            "tokens": 743,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "VOICE_CHAT_SETTINGS_TEST_SUMMARY.md": {
            "lines": 184,
            "tokens": 1999,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "README.md": {
            "lines": 304,
            "tokens": 2411,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "ENHANCED_ONBOARDING_SYSTEM.md": {
            "lines": 159,
            "tokens": 1734,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 739,
          "tokens": 6887,
          "sources": 4,
          "clones": 0,
          "duplicatedLines": 0,
          "duplicatedTokens": 0,
          "percentage": 0,
          "percentageTokens": 0,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      }
    },
    "total": {
      "lines": 40792,
      "tokens": 349300,
      "sources": 272,
      "clones": 131,
      "duplicatedLines": 4404,
      "duplicatedTokens": 43361,
      "percentage": 10.8,
      "percentageTokens": 12.41,
      "newDuplicatedLines": 0,
      "newClones": 0
    }
  },
  "duplicates": [
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "};\n    \n    return new Response(\n      JSON.stringify(response),\n      { \n        status: 200, \n        headers: { ...corsHeaders, \"Content-Type\": \"application/json\" } \n      }\n    );\n  } catch (error) {\n    console.error(\"Error processing request:\", error);\n    \n    return new Response(\n      JSON.stringify({ error: \"Failed to process request\"",
      "tokens": 0,
      "firstFile": {
        "name": "supabase/functions/nutrition-search/index.ts",
        "start": 50,
        "end": 63,
        "startLoc": {
          "line": 50,
          "column": 2,
          "position": 338
        },
        "endLoc": {
          "line": 63,
          "column": 28,
          "position": 440
        }
      },
      "secondFile": {
        "name": "supabase/functions/recommendations/index.ts",
        "start": 117,
        "end": 130,
        "startLoc": {
          "line": 117,
          "column": 5,
          "position": 851
        },
        "endLoc": {
          "line": 130,
          "column": 6,
          "position": 953
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ";\n}\n\n// Cors headers\nconst corsHeaders = {\n  \"Access-Control-Allow-Origin\": \"*\",\n  \"Access-Control-Allow-Headers\": \"authorization, x-client-info, apikey, content-type\",\n};\n\nDeno.serve(async (req) => {\n  // Handle CORS preflight requests\n  if (req.method === \"OPTIONS\") {\n    return new Response(\"ok\", { headers: corsHeaders });\n  }\n\n  try {\n    const { diet",
      "tokens": 0,
      "firstFile": {
        "name": "supabase/functions/get-personalized-recipes/index.ts",
        "start": 33,
        "end": 49,
        "startLoc": {
          "line": 33,
          "column": 7,
          "position": 205
        },
        "endLoc": {
          "line": 49,
          "column": 5,
          "position": 305
        }
      },
      "secondFile": {
        "name": "supabase/functions/nutrition-search/index.ts",
        "start": 18,
        "end": 34,
        "startLoc": {
          "line": 18,
          "column": 7,
          "position": 101
        },
        "endLoc": {
          "line": 34,
          "column": 6,
          "position": 201
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": ", {\n      headers: { \n        'Accept': 'application/json',\n        'xi-api-key': apiKey \n      }\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({ error: response.statusText }));\n      return new Response(\n        JSON.stringify({ error: errorData.detail || `ElevenLabs API error: ${response.status}` }),\n        { \n          status: response.status, \n          headers: { ...corsHeaders, \"Content-Type\": \"application/json\" } \n        }\n      );\n    }\n\n    const data = await response.json();\n    \n    // Add cache headers for better performance",
      "tokens": 0,
      "firstFile": {
        "name": "supabase/functions/elevenlabs-proxy/voice-settings.ts",
        "start": 17,
        "end": 37,
        "startLoc": {
          "line": 17,
          "column": 11,
          "position": 168
        },
        "endLoc": {
          "line": 37,
          "column": 44,
          "position": 349
        }
      },
      "secondFile": {
        "name": "supabase/functions/elevenlabs-proxy/voices.ts",
        "start": 5,
        "end": 24,
        "startLoc": {
          "line": 5,
          "column": 38,
          "position": 54
        },
        "endLoc": {
          "line": 24,
          "column": 7,
          "position": 233
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": ", {\n      headers: { \n        'Accept': 'application/json',\n        'xi-api-key': apiKey \n      }\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({ error: response.statusText }));\n      return new Response(\n        JSON.stringify({ error: errorData.detail || `ElevenLabs API error: ${response.status}` }),\n        { \n          status: response.status, \n          headers: { ...corsHeaders, \"Content-Type\": \"application/json\" } \n        }\n      );\n    }\n\n    const data = await response.json();\n    return new Response(\n      JSON.stringify(data),\n      { headers: { ...corsHeaders, \"Content-Type\": \"application/json\" } }\n    );\n  } catch (error) {\n    console.error(\"Error fetching user info:\"",
      "tokens": 0,
      "firstFile": {
        "name": "supabase/functions/elevenlabs-proxy/user-info.ts",
        "start": 5,
        "end": 29,
        "startLoc": {
          "line": 5,
          "column": 36,
          "position": 54
        },
        "endLoc": {
          "line": 29,
          "column": 28,
          "position": 290
        }
      },
      "secondFile": {
        "name": "supabase/functions/elevenlabs-proxy/voices.ts",
        "start": 5,
        "end": 29,
        "startLoc": {
          "line": 5,
          "column": 38,
          "position": 54
        },
        "endLoc": {
          "line": 29,
          "column": 25,
          "position": 290
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "});\n\n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({ error: response.statusText }));\n      return new Response(\n        JSON.stringify({ error: errorData.detail || `ElevenLabs API error: ${response.status}` }),\n        { \n          status: response.status, \n          headers: { ...corsHeaders, \"Content-Type\": \"application/json\" } \n        }\n      );\n    }\n\n    // Get audio data",
      "tokens": 0,
      "firstFile": {
        "name": "supabase/functions/elevenlabs-proxy/text-to-speech.ts",
        "start": 43,
        "end": 56,
        "startLoc": {
          "line": 43,
          "column": 5,
          "position": 359
        },
        "endLoc": {
          "line": 56,
          "column": 18,
          "position": 493
        }
      },
      "secondFile": {
        "name": "supabase/functions/elevenlabs-proxy/voices.ts",
        "start": 10,
        "end": 23,
        "startLoc": {
          "line": 10,
          "column": 5,
          "position": 83
        },
        "endLoc": {
          "line": 23,
          "column": 6,
          "position": 217
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "// Cors headers\nconst corsHeaders = {\n  \"Access-Control-Allow-Origin\": \"*\",\n  \"Access-Control-Allow-Headers\": \"authorization, x-client-info, apikey, content-type\",\n};\n\nDeno.serve(async (req) => {\n  // Handle CORS preflight requests\n  if (req.method === \"OPTIONS\") {\n    return new Response(\"ok\", { headers: corsHeaders });\n  }\n\n  try {\n    // Get ElevenLabs API key from environment",
      "tokens": 0,
      "firstFile": {
        "name": "supabase/functions/elevenlabs-proxy/index.ts",
        "start": 7,
        "end": 20,
        "startLoc": {
          "line": 7,
          "column": 1,
          "position": 66
        },
        "endLoc": {
          "line": 20,
          "column": 43,
          "position": 157
        }
      },
      "secondFile": {
        "name": "supabase/functions/nutrition-search/index.ts",
        "start": 21,
        "end": 34,
        "startLoc": {
          "line": 21,
          "column": 1,
          "position": 106
        },
        "endLoc": {
          "line": 34,
          "column": 6,
          "position": 197
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ";\n\n// Cors headers\nconst corsHeaders = {\n  \"Access-Control-Allow-Origin\": \"*\",\n  \"Access-Control-Allow-Headers\": \"authorization, x-client-info, apikey, content-type\",\n};\n\nDeno.serve(async (req) => {\n  // Handle CORS preflight requests\n  if (req.method === \"OPTIONS\") {\n    return new Response(\"ok\", { headers: corsHeaders });\n  }\n\n  try {\n    // Get Supabase credentials from environment",
      "tokens": 0,
      "firstFile": {
        "name": "supabase/functions/circadian-analyzer/index.ts",
        "start": 1,
        "end": 16,
        "startLoc": {
          "line": 1,
          "column": 30,
          "position": 11
        },
        "endLoc": {
          "line": 16,
          "column": 45,
          "position": 105
        }
      },
      "secondFile": {
        "name": "supabase/functions/elevenlabs-proxy/index.ts",
        "start": 5,
        "end": 34,
        "startLoc": {
          "line": 5,
          "column": 22,
          "position": 63
        },
        "endLoc": {
          "line": 34,
          "column": 6,
          "position": 197
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "Deno.serve(async (req) => {\n  // Handle CORS preflight requests\n  if (req.method === \"OPTIONS\") {\n    return new Response(\"ok\", { headers: corsHeaders });\n  }\n\n  try {\n    // Get Supabase credentials from environment\n    const supabaseUrl = Deno.env.get(\"SUPABASE_URL\");\n    const supabaseKey = Deno.env.get(\"SUPABASE_SERVICE_ROLE_KEY\");\n\n    if (!supabaseUrl || !supabaseKey) {\n      throw new Error(\"Supabase credentials not found\");\n    }\n\n    // Initialize Supabase client\n    const supabase = createClient(supabaseUrl, supabaseKey);\n\n    // Get the request body",
      "tokens": 0,
      "firstFile": {
        "name": "supabase/functions/circadian-analyzer/index.ts",
        "start": 9,
        "end": 27,
        "startLoc": {
          "line": 9,
          "column": 1,
          "position": 42
        },
        "endLoc": {
          "line": 27,
          "column": 24,
          "position": 193
        }
      },
      "secondFile": {
        "name": "supabase/functions/recommendations/index.ts",
        "start": 45,
        "end": 63,
        "startLoc": {
          "line": 45,
          "column": 1,
          "position": 261
        },
        "endLoc": {
          "line": 63,
          "column": 47,
          "position": 412
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "headers: { ...corsHeaders, \"Content-Type\": \"application/json\" } }\n    );\n  } catch (error) {\n    console.error(\"Error processing request:\", error);\n    \n    return new Response(\n      JSON.stringify({ error: error.message || \"An unexpected error occurred\" }),\n      { status: 500, headers: { ...corsHeaders, \"Content-Type\": \"application/json\" } }\n    );\n  }\n});\n\n// Analyze circadian event and generate insights",
      "tokens": 0,
      "firstFile": {
        "name": "supabase/functions/circadian-analyzer/index.ts",
        "start": 42,
        "end": 54,
        "startLoc": {
          "line": 42,
          "column": 2,
          "position": 343
        },
        "endLoc": {
          "line": 54,
          "column": 49,
          "position": 459
        }
      },
      "secondFile": {
        "name": "supabase/functions/recommendations/index.ts",
        "start": 123,
        "end": 139,
        "startLoc": {
          "line": 123,
          "column": 9,
          "position": 886
        },
        "endLoc": {
          "line": 139,
          "column": 54,
          "position": 1010
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": "import React, { useState } from 'react'\nimport { Link, useNavigate } from 'react-router-dom'\nimport { Eye, EyeOff } from 'lucide-react'\nimport { createClient } from '@supabase/supabase-js'\nimport { Button } from '../../components/ui/Button'\n\n// Initialize Supabase client\nconst supabaseUrl = import.meta.env.VITE_SUPABASE_URL || '';\nconst supabaseAnonKey = import.meta.env.VITE_SUPABASE_ANON_KEY || '';\nconst supabase = createClient(supabaseUrl, supabaseAnonKey);\n\nconst LoginPage",
      "tokens": 0,
      "firstFile": {
        "name": "src/pages/auth/LoginPage.tsx",
        "start": 1,
        "end": 12,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 12,
          "column": 10,
          "position": 128
        }
      },
      "secondFile": {
        "name": "src/pages/auth/SignupPage.tsx",
        "start": 1,
        "end": 12,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 12,
          "column": 11,
          "position": 128
        }
      }
    },
    {
      "format": "tsx",
      "lines": 19,
      "fragment": ")\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    })\n  }\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-md w-full space-y-8\">\n        <div>\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\n            Sign",
      "tokens": 0,
      "firstFile": {
        "name": "src/pages/auth/LoginPage.tsx",
        "start": 47,
        "end": 65,
        "startLoc": {
          "line": 47,
          "column": 52,
          "position": 452
        },
        "endLoc": {
          "line": 65,
          "column": 5,
          "position": 575
        }
      },
      "secondFile": {
        "name": "src/pages/auth/SignupPage.tsx",
        "start": 69,
        "end": 87,
        "startLoc": {
          "line": 69,
          "column": 46,
          "position": 608
        },
        "endLoc": {
          "line": 87,
          "column": 7,
          "position": 731
        }
      }
    },
    {
      "format": "tsx",
      "lines": 27,
      "fragment": ">\n            <div>\n              <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n                Email address\n              </label>\n              <input\n                id=\"email\"\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n                required\n                value={formData.email}\n                onChange={handleChange}\n                className=\"mt-1 appearance-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm\"\n                placeholder=\"Enter your email\"\n              />\n            </div>\n            <div>\n              <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\n                Password\n              </label>\n              <div className=\"mt-1 relative\">\n                <input\n                  id=\"password\"\n                  name=\"password\"\n                  type={showPassword ? 'text' : 'password'}\n                  autoComplete=\"current-password",
      "tokens": 0,
      "firstFile": {
        "name": "src/pages/auth/LoginPage.tsx",
        "start": 78,
        "end": 104,
        "startLoc": {
          "line": 78,
          "column": 2,
          "position": 675
        },
        "endLoc": {
          "line": 104,
          "column": 17,
          "position": 845
        }
      },
      "secondFile": {
        "name": "src/pages/auth/SignupPage.tsx",
        "start": 132,
        "end": 158,
        "startLoc": {
          "line": 132,
          "column": 4,
          "position": 1025
        },
        "endLoc": {
          "line": 158,
          "column": 13,
          "position": 1195
        }
      }
    },
    {
      "format": "tsx",
      "lines": 16,
      "fragment": "\"\n                />\n                <button\n                  type=\"button\"\n                  className=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\n                  onClick={() => setShowPassword(!showPassword)}\n                >\n                  {showPassword ? (\n                    <EyeOff className=\"h-5 w-5 text-gray-400\" />\n                  ) : (\n                    <Eye className=\"h-5 w-5 text-gray-400\" />\n                  )}\n                </button>\n              </div>\n            </div>\n          </",
      "tokens": 0,
      "firstFile": {
        "name": "src/pages/auth/LoginPage.tsx",
        "start": 109,
        "end": 124,
        "startLoc": {
          "line": 109,
          "column": 20,
          "position": 874
        },
        "endLoc": {
          "line": 124,
          "column": 3,
          "position": 970
        }
      },
      "secondFile": {
        "name": "src/pages/auth/SignupPage.tsx",
        "start": 163,
        "end": 178,
        "startLoc": {
          "line": 163,
          "column": 18,
          "position": 1224
        },
        "endLoc": {
          "line": 178,
          "column": 2,
          "position": 1320
        }
      }
    },
    {
      "format": "tsx",
      "lines": 17,
      "fragment": "? (\n                    <EyeOff className=\"h-5 w-5 text-gray-400\" />\n                  ) : (\n                    <Eye className=\"h-5 w-5 text-gray-400\" />\n                  )}\n                </button>\n              </div>\n            </div>\n          </div>\n\n          {error && (\n            <div className=\"mt-4 p-3 bg-red-50 dark:bg-red-900/20 text-red-700 dark:text-red-300 rounded-lg text-sm\">\n              {error}\n            </div>\n          )}\n\n          <div ",
      "tokens": 0,
      "firstFile": {
        "name": "src/pages/auth/LoginPage.tsx",
        "start": 116,
        "end": 132,
        "startLoc": {
          "line": 116,
          "column": 2,
          "position": 915
        },
        "endLoc": {
          "line": 132,
          "column": 2,
          "position": 1012
        }
      },
      "secondFile": {
        "name": "src/pages/auth/SignupPage.tsx",
        "start": 199,
        "end": 215,
        "startLoc": {
          "line": 199,
          "column": 2,
          "position": 1464
        },
        "endLoc": {
          "line": 215,
          "column": 2,
          "position": 1561
        }
      }
    },
    {
      "format": "tsx",
      "lines": 13,
      "fragment": "{\n    id: string;\n    name: string;\n    brand?: string;\n    description?: string;\n    tier?: 'green' | 'yellow' | 'orange' | 'red';\n    use_case?: string;\n    price_aed: number;\n    subscription_discount_percent?: number;\n    image_url?: string;\n    is_bestseller?: boolean;\n    is_featured?: boolean;\n    rating",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/supplements/SupplementCard.tsx",
        "start": 9,
        "end": 21,
        "startLoc": {
          "line": 9,
          "column": 2,
          "position": 103
        },
        "endLoc": {
          "line": 21,
          "column": 7,
          "position": 203
        }
      },
      "secondFile": {
        "name": "src/components/supplements/SupplementGrid.tsx",
        "start": 6,
        "end": 18,
        "startLoc": {
          "line": 6,
          "column": 2,
          "position": 68
        },
        "endLoc": {
          "line": 18,
          "column": 2,
          "position": 167
        }
      }
    },
    {
      "format": "tsx",
      "lines": 21,
      "fragment": "</label>\n              <div className=\"flex space-x-2\">\n                <Input\n                  type=\"number\"\n                  placeholder=\"Value\"\n                  value={currentStepData.weight?.value || profile?.weight?.value || ''}\n                  onChange={(e) => handleFieldChange('weight', {\n                    value: parseFloat(e.target.value) || 0,\n                    unit: currentStepData.weight?.unit || profile?.weight?.unit || 'kg'\n                  })}\n                  error={!!validationErrors.weight}\n                />\n                <select\n                  className=\"px-3 py-2 border border-gray-300 rounded-md\"\n                  value={currentStepData.weight?.unit || profile?.weight?.unit || 'kg'}\n                  onChange={(e) => handleFieldChange('weight', {\n                    value: currentStepData.weight?.value || profile?.weight?.value || 0,\n                    unit: e.target.value as 'kg' | 'lbs'\n                  })}\n                >\n                  <option value=\"kg",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/onboarding/EnhancedOnboardingForm.tsx",
        "start": 424,
        "end": 444,
        "startLoc": {
          "line": 424,
          "column": 7,
          "position": 3530
        },
        "endLoc": {
          "line": 444,
          "column": 3,
          "position": 3745
        }
      },
      "secondFile": {
        "name": "src/components/onboarding/EnhancedOnboardingForm.tsx",
        "start": 394,
        "end": 414,
        "startLoc": {
          "line": 394,
          "column": 7,
          "position": 3227
        },
        "endLoc": {
          "line": 414,
          "column": 3,
          "position": 3442
        }
      }
    },
    {
      "format": "tsx",
      "lines": 14,
      "fragment": "</h4>\n              <div className=\"space-y-3\">\n                <label className=\"flex items-center space-x-2\">\n                  <input\n                    type=\"checkbox\"\n                    checked={currentStepData.privacySettings?.dataSharing ?? profile?.privacySettings?.dataSharing ?? false}\n                    onChange={(e) => handleFieldChange('privacySettings', {\n                      ...currentStepData.privacySettings,\n                      ...profile?.privacySettings,\n                      dataSharing: e.target.checked\n                    })}\n                    className=\"rounded border-gray-300\"\n                  />\n                  <span className=\"text-sm\">Allow",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/onboarding/EnhancedOnboardingForm.tsx",
        "start": 785,
        "end": 798,
        "startLoc": {
          "line": 785,
          "column": 9,
          "position": 7022
        },
        "endLoc": {
          "line": 798,
          "column": 6,
          "position": 7139
        }
      },
      "secondFile": {
        "name": "src/components/onboarding/EnhancedOnboardingForm.tsx",
        "start": 738,
        "end": 751,
        "startLoc": {
          "line": 738,
          "column": 12,
          "position": 6634
        },
        "endLoc": {
          "line": 751,
          "column": 6,
          "position": 6751
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": "\">\n          <div className=\"flex items-center\">\n            <Clock className=\"w-4 h-4 mr-1\" />\n            <span>{recipe.readyInMinutes} min</span>\n          </div>\n          <div className=\"flex items-center\">\n            <Users className=\"w-4 h-4 mr-1\" />\n            <span>{recipe.servings} servings</span>\n          </div>\n        </div>\n        \n        {",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/nutrition/RecipeCard.tsx",
        "start": 73,
        "end": 84,
        "startLoc": {
          "line": 73,
          "column": 82,
          "position": 626
        },
        "endLoc": {
          "line": 84,
          "column": 2,
          "position": 723
        }
      },
      "secondFile": {
        "name": "src/components/nutrition/RecipeDetail.tsx",
        "start": 65,
        "end": 75,
        "startLoc": {
          "line": 65,
          "column": 56,
          "position": 602
        },
        "endLoc": {
          "line": 75,
          "column": 3,
          "position": 697
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": "/>\n                      <div className=\"absolute top-2 right-2\">\n                        <span className={`inline-block px-2 py-1 rounded-full text-xs font-medium ${\n                          supplement.tier === 'green' \n                            ? 'bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-300' \n                            : supplement.tier === 'yellow'\n                              ? 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900/30 dark:text-yellow-300'\n                              : 'bg-orange-100 text-orange-800 dark:bg-orange-900/30 dark:text-orange-300'\n                        }`}>\n                          {supplement.tier.charAt(0).toUpperCase() + supplement.tier.slice(1)} Tier\n                        </span>\n                      </div>\n                    </div>\n                    \n                    <div className=\"p-4\">\n                      <h4 className=\"font-semibold text-lg mb-1 text-gray-900 dark:text-white\">\n                        {supplement.name}\n                      </h4>\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-2\">\n                        {supplement.brand ||",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/layout/Navigation.tsx",
        "start": 352,
        "end": 371,
        "startLoc": {
          "line": 352,
          "column": 23,
          "position": 3458
        },
        "endLoc": {
          "line": 371,
          "column": 3,
          "position": 3609
        }
      },
      "secondFile": {
        "name": "src/components/supplements/SupplementRecommendations.tsx",
        "start": 155,
        "end": 174,
        "startLoc": {
          "line": 155,
          "column": 19,
          "position": 1376
        },
        "endLoc": {
          "line": 174,
          "column": 2,
          "position": 1526
        }
      }
    },
    {
      "format": "javascript",
      "lines": 76,
      "fragment": "}\n                  >\n                    <span>Supplements</span>\n                    {openSubmenu === 'supplements' ? (\n                      <ChevronDown className=\"w-5 h-5\" />\n                    ) : (\n                      <ChevronRight className=\"w-5 h-5\" />\n                    )}\n                  </button>\n                  {openSubmenu === 'supplements' && (\n                    <div className=\"pl-6 space-y-1\">\n                      <Link to=\"/my-stacks\" className=\"flex items-center px-4 py-2 hover:bg-gray-50 dark:hover:bg-gray-800 transition-colors text-gray-700 dark:text-gray-300\" onClick={onClose}>\n                        My Stacks\n                      </Link>\n                      <Link to=\"/supplements\" className=\"flex items-center px-4 py-2 hover:bg-gray-50 dark:hover:bg-gray-800 transition-colors text-gray-700 dark:text-gray-300\" onClick={onClose}>\n                        Browse Supplements\n                      </Link>\n                      <Link to=\"/recommendations\" className=\"flex items-center px-4 py-2 hover:bg-gray-50 dark:hover:bg-gray-800 transition-colors text-gray-700 dark:text-gray-300\" onClick={onClose}>\n                        Recommendations\n                      </Link>\n                    </div>\n                  )}\n                </div>\n                \n                <div className=\"relative\">\n                  <button \n                    className=\"flex items-center justify-between w-full px-4 py-3 hover:bg-gray-50 dark:hover:bg-gray-800 transition-colors text-gray-800 dark:text-gray-200 font-medium\"\n                    onClick={() => toggleSubmenu('health')}\n                  >\n                    <span>Health</span>\n                    {openSubmenu === 'health' ? (\n                      <ChevronDown className=\"w-5 h-5\" />\n                    ) : (\n                      <ChevronRight className=\"w-5 h-5\" />\n                    )}\n                  </button>\n                  {openSubmenu === 'health' && (\n                    <div className=\"pl-6 space-y-1\">\n                      <Link to=\"/fitness\" className=\"flex items-center px-4 py-2 hover:bg-gray-50 dark:hover:bg-gray-800 transition-colors text-gray-700 dark:text-gray-300\" onClick={onClose}>\n                        Fitness\n                      </Link>\n                      <Link to=\"/nutrition\" className=\"flex items-center px-4 py-2 hover:bg-gray-50 dark:hover:bg-gray-800 transition-colors text-gray-700 dark:text-gray-300\" onClick={onClose}>\n                        Nutrition\n                      </Link>\n                      <Link to=\"/recipes\" className=\"flex items-center px-4 py-2 hover:bg-gray-50 dark:hover:bg-gray-800 transition-colors text-gray-700 dark:text-gray-300\" onClick={onClose}>\n                        Recipes\n                      </Link>\n                      <Link to=\"/metabolism\" className=\"flex items-center px-4 py-2 hover:bg-gray-50 dark:hover:bg-gray-800 transition-colors text-gray-700 dark:text-gray-300\" onClick={onClose}>\n                        Metabolism\n                      </Link>\n                    </div>\n                  )}\n                </div>\n                \n                <Link to=\"/cart\" className=\"flex items-center px-4 py-3 hover:bg-gray-50 dark:hover:bg-gray-800 transition-colors\" onClick={onClose}>\n                  <span className=\"text-gray-800 dark:text-gray-200 font-medium\">Shopping Cart</span>\n                </Link>\n              </div>\n            </div>\n          )}\n          \n          <div>\n            <h3 className=\"text-sm font-semibold text-gray-500 dark:text-gray-400 uppercase tracking-wider mb-3 px-4\">\n              Account\n            </h3>\n            <div className=\"space-y-1\">\n              {isLoggedIn ? (\n                <>\n                  <Link to=\"/settings\" className=\"flex items-center px-4 py-3 hover:bg-gray-50 dark:hover:bg-gray-800 transition-colors\" onClick={onClose}>\n                    <span className=\"text-gray-800 dark:text-gray-200 font-medium\">Settings</span>\n                  </Link>\n                  <Link to=\"/export\" className=\"flex items-center px-4 py-3 hover:bg-gray-50 dark:hover:bg-gray-800 transition-colors\" onClick={onClose}>\n                    <span className=\"text-gray-800 dark:text-gray-200 font-medium\">Export Data</span>\n                  </Link>\n                  <button \n                    onClick={(",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/layout/MobileNav.tsx",
        "start": 98,
        "end": 173,
        "startLoc": {
          "line": 98,
          "column": 2,
          "position": 864
        },
        "endLoc": {
          "line": 173,
          "column": 2,
          "position": 1529
        }
      },
      "secondFile": {
        "name": "src/components/ui/MobileNav.tsx",
        "start": 87,
        "end": 176,
        "startLoc": {
          "line": 87,
          "column": 8,
          "position": 618
        },
        "endLoc": {
          "line": 176,
          "column": 8,
          "position": 1502
        }
      }
    },
    {
      "format": "javascript",
      "lines": 63,
      "fragment": "}\n                    className=\"w-full text-left flex items-center px-4 py-3 hover:bg-gray-50 dark:hover:bg-gray-800 transition-colors text-gray-800 dark:text-gray-200 font-medium\"\n                  >\n                    Sign Out\n                  </button>\n                </>\n              ) : (\n                <>\n                  <Link to=\"/login\" className=\"flex items-center px-4 py-3 hover:bg-gray-50 dark:hover:bg-gray-800 transition-colors\" onClick={onClose}>\n                    <span className=\"text-gray-800 dark:text-gray-200 font-medium\">Sign In</span>\n                  </Link>\n                  <Link to=\"/signup\" className=\"flex items-center px-4 py-3 hover:bg-gray-50 dark:hover:bg-gray-800 transition-colors\" onClick={onClose}>\n                    <span className=\"text-gray-800 dark:text-gray-200 font-medium\">Create Account</span>\n                  </Link>\n                </>\n              )}\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"p-4 border-t border-gray-200 dark:border-gray-800 sticky bottom-0 bg-white dark:bg-gray-900 z-10\">\n          <div className=\"flex flex-col space-y-4\">\n            {/* Theme Toggle */}\n            <button\n              onClick={() => setTheme(effectiveTheme === 'dark' ? 'light' : 'dark')}\n              className=\"flex items-center justify-center w-full px-4 py-2.5 border border-gray-300 dark:border-gray-700 rounded-lg font-medium text-gray-900 dark:text-white\"\n            >\n              {effectiveTheme === 'dark' ? (\n                <>\n                  <Sun className=\"w-5 h-5 mr-2\" />\n                  Switch to Light Mode\n                </>\n              ) : (\n                <>\n                  <Moon className=\"w-5 h-5 mr-2\" />\n                  Switch to Dark Mode\n                </>\n              )}\n            </button>\n            \n            {isLoggedIn ? (\n              <button \n                onClick={() => {\n                  onSignOut?.();\n                  onClose();\n                }}\n                className=\"w-full px-4 py-2.5 bg-red-600 hover:bg-red-700 text-white rounded-lg font-medium transition-colors\"\n              >\n                Sign Out\n              </button>\n            ) : (\n              <div className=\"flex space-x-3\">\n                <Link \n                  to=\"/login\" \n                  className=\"flex-1 px-4 py-2.5 border border-gray-300 dark:border-gray-700 text-gray-900 dark:text-white rounded-lg font-medium text-center hover:bg-gray-50 dark:hover:bg-gray-800 transition-colors\"\n                  onClick={onClose}\n                >\n                  Sign In\n                </Link>\n                <Link \n                  to=\"/signup\" \n                  className=\"flex-1 px-4 py-2.5 bg-blue-600 hover:bg-blue-700 text-white rounded-lg font-medium text-center transition-colors\"\n                  onClick={onClose}",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/layout/MobileNav.tsx",
        "start": 176,
        "end": 238,
        "startLoc": {
          "line": 176,
          "column": 2,
          "position": 1548
        },
        "endLoc": {
          "line": 238,
          "column": 2,
          "position": 1980
        }
      },
      "secondFile": {
        "name": "src/components/ui/MobileNav.tsx",
        "start": 180,
        "end": 249,
        "startLoc": {
          "line": 180,
          "column": 8,
          "position": 1562
        },
        "endLoc": {
          "line": 249,
          "column": 2,
          "position": 2072
        }
      }
    },
    {
      "format": "tsx",
      "lines": 26,
      "fragment": ";\nimport { useTheme } from '../../hooks/useTheme';\n\ninterface MobileNavProps {\n  isOpen: boolean;\n  onClose: () => void;\n  isLoggedIn?: boolean;\n  onSignOut?: () => void;\n}\n\nconst MobileNav: React.FC<MobileNavProps> = ({ \n  isOpen, \n  onClose, \n  isLoggedIn = false,\n  onSignOut\n}) => {\n  const location = useLocation();\n  const { theme, setTheme, effectiveTheme } = useTheme();\n  const [openSubmenu, setOpenSubmenu] = useState<string | null>(null);\n\n  // Close mobile nav when route changes\n  React.useEffect(() => {\n    if (isOpen) {\n      onClose();\n    }\n  }, [location.pathname,",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/layout/MobileNav.tsx",
        "start": 5,
        "end": 30,
        "startLoc": {
          "line": 5,
          "column": 15,
          "position": 77
        },
        "endLoc": {
          "line": 30,
          "column": 2,
          "position": 289
        }
      },
      "secondFile": {
        "name": "src/components/ui/MobileNav.tsx",
        "start": 22,
        "end": 47,
        "startLoc": {
          "line": 22,
          "column": 17,
          "position": 125
        },
        "endLoc": {
          "line": 47,
          "column": 2,
          "position": 337
        }
      }
    },
    {
      "format": "tsx",
      "lines": 21,
      "fragment": "\n    >\n      <div \n        className={cn( \n          \"fixed top-0 right-0 h-full w-4/5 max-w-sm bg-white dark:bg-gray-900 shadow-xl transform transition-transform duration-300 ease-in-out overflow-y-auto\",\n          isOpen ? \"translate-x-0\" : \"translate-x-full\"\n        )}\n        onClick={(e) => e.stopPropagation()}\n      >\n        <div className=\"flex justify-between items-center p-4 border-b border-gray-200 dark:border-gray-800 sticky top-0 bg-white dark:bg-gray-900 z-10\">\n          <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Menu</h2>\n          <button \n            onClick={onClose}\n            className=\"p-2 rounded-full hover:bg-gray-100 dark:hover:bg-gray-800 text-gray-500 dark:text-gray-400\"\n            aria-label=\"Close menu\"\n          >\n            <X className=\"w-6 h-6\" />\n          </button>\n        </div>\n        \n        <div className=\"p-4 space-y-6",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/layout/MobileNav.tsx",
        "start": 42,
        "end": 62,
        "startLoc": {
          "line": 42,
          "column": 2,
          "position": 380
        },
        "endLoc": {
          "line": 62,
          "column": 14,
          "position": 505
        }
      },
      "secondFile": {
        "name": "src/components/ui/MobileNav.tsx",
        "start": 60,
        "end": 80,
        "startLoc": {
          "line": 60,
          "column": 2,
          "position": 425
        },
        "endLoc": {
          "line": 80,
          "column": 37,
          "position": 550
        }
      }
    },
    {
      "format": "tsx",
      "lines": 29,
      "fragment": "</div>\n        \n        <div className=\"p-4 border-t border-gray-200 dark:border-gray-800 sticky bottom-0 bg-white dark:bg-gray-900 z-10\">\n          <div className=\"flex flex-col space-y-4\">\n            {/* Theme Toggle */}\n            <button\n              onClick={() => setTheme(effectiveTheme === 'dark' ? 'light' : 'dark')}\n              className=\"flex items-center justify-center w-full px-4 py-2.5 border border-gray-300 dark:border-gray-700 rounded-lg font-medium text-gray-900 dark:text-white\"\n            >\n              {effectiveTheme === 'dark' ? (\n                <>\n                  <Sun className=\"w-5 h-5 mr-2\" />\n                  Switch to Light Mode\n                </>\n              ) : (\n                <>\n                  <Moon className=\"w-5 h-5 mr-2\" />\n                  Switch to Dark Mode\n                </>\n              )}\n            </button>\n            \n            {isLoggedIn ? (\n              <button \n                onClick={() => {\n                  onSignOut?.();\n                  onClose();\n                }}\n                className=\"w-full px-4 py-2.5 bg-red-600 hover:bg-red-700 text-white rounded-lg font-medium transition-colors",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/layout/MobileNav.tsx",
        "start": 194,
        "end": 222,
        "startLoc": {
          "line": 194,
          "column": 9,
          "position": 1694
        },
        "endLoc": {
          "line": 222,
          "column": 99,
          "position": 1893
        }
      },
      "secondFile": {
        "name": "src/components/ui/MobileNav.tsx",
        "start": 204,
        "end": 232,
        "startLoc": {
          "line": 204,
          "column": 9,
          "position": 1774
        },
        "endLoc": {
          "line": 232,
          "column": 132,
          "position": 1973
        }
      }
    },
    {
      "format": "javascript",
      "lines": 45,
      "fragment": "}\n                  >\n                    <Pill size={20} />\n                    {(isActive('/my-stacks') || isActive('/supplements') || isActive('/supplement-store')) && (\n                      <motion.div \n                        className=\"absolute bottom-0 left-0 w-full h-0.5 bg-primary\"\n                        layoutId=\"activeIndicator\"\n                        transition={{ duration: 0.15 }}\n                      />\n                    )}\n                  </button>\n                  \n                  {/* Supplements Dropdown */}\n                  {openSubmenu === 'supplements' && (\n                    <motion.div \n                      className=\"absolute top-full right-0 w-64 bg-white dark:bg-gray-900 rounded-lg shadow-lg border border-gray-200 dark:border-gray-700 py-2 z-20\"\n                      initial={{ opacity: 0, y: -10 }}\n                      animate={{ opacity: 1, y: 0 }}\n                      exit={{ opacity: 0, y: -10 }}\n                      transition={{ duration: 0.2 }}\n                    >\n                      <Link to=\"/supplements\" className=\"flex items-center px-4 py-3 hover:bg-gray-50 dark:hover:bg-gray-800 transition-colors\">\n                        <Pill size={18} className=\"text-gray-700 dark:text-gray-300\" />\n                        <span className=\"ml-3 text-gray-700 dark:text-gray-300\">Explore Supplements</span>\n                      </Link>\n                      <Link to=\"/my-stacks\" className=\"flex items-center px-4 py-3 hover:bg-gray-50 dark:hover:bg-gray-800 transition-colors\">\n                        <Package size={18} className=\"text-gray-700 dark:text-gray-300\" />\n                        <span className=\"ml-3 text-gray-700 dark:text-gray-300\">My Stacks</span>\n                      </Link>\n                      <Link to=\"/supplement-store\" className=\"flex items-center px-4 py-3 hover:bg-gray-50 dark:hover:bg-gray-800 transition-colors\">\n                        <Store size={18} className=\"text-gray-700 dark:text-gray-300\" />\n                        <span className=\"ml-3 text-gray-700 dark:text-gray-300\">Supplement Store</span>\n                      </Link>\n                      <Link to=\"/recommendations\" className=\"flex items-center px-4 py-3 hover:bg-gray-50 dark:hover:bg-gray-800 transition-colors\">\n                        <Sparkles size={18} className=\"text-gray-700 dark:text-gray-300\" />\n                        <span className=\"ml-3 text-gray-700 dark:text-gray-300\">Recommendations</span>\n                      </Link>\n                    </motion.div>\n                  )}\n                </div>\n                \n                {/* MyCoach */}\n                <Link \n                  to=\"/mycoach\" \n                  className={cn",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/layout/MinimalNav.tsx",
        "start": 337,
        "end": 381,
        "startLoc": {
          "line": 337,
          "column": 14,
          "position": 3048
        },
        "endLoc": {
          "line": 381,
          "column": 3,
          "position": 3486
        }
      },
      "secondFile": {
        "name": "src/components/layout/MinimalNav.tsx",
        "start": 212,
        "end": 288,
        "startLoc": {
          "line": 212,
          "column": 21,
          "position": 1857
        },
        "endLoc": {
          "line": 288,
          "column": 3,
          "position": 2628
        }
      }
    },
    {
      "format": "javascript",
      "lines": 22,
      "fragment": "} />\n                {isActive('/cart') && (\n                  <motion.div \n                    className=\"absolute bottom-0 left-0 w-full h-0.5 bg-primary\"\n                    layoutId=\"activeIndicator\"\n                    transition={{ duration: 0.15 }}\n                  />\n                )}\n              </button>\n              \n              {/* Utilities Dropdown */}\n              {utilitiesDropdownOpen && (\n                <motion.div \n                  className=\"absolute top-full right-0 w-64 bg-white dark:bg-gray-900 rounded-lg shadow-lg border border-gray-200 dark:border-gray-700 py-2 z-20\"\n                  initial={{ opacity: 0, y: -10 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  exit={{ opacity: 0, y: -10 }}\n                  transition={{ duration: 0.2 }}\n                >\n                  <Link to=\"/cart\" className=\"flex items-center px-4 py-3 hover:bg-gray-50 dark:hover:bg-gray-800 transition-colors\">\n                    <div className=\"relative\">\n                      <ShoppingCart size={16",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/layout/MinimalNav.tsx",
        "start": 424,
        "end": 445,
        "startLoc": {
          "line": 424,
          "column": 3,
          "position": 3773
        },
        "endLoc": {
          "line": 445,
          "column": 3,
          "position": 3954
        }
      },
      "secondFile": {
        "name": "src/components/layout/MinimalNav.tsx",
        "start": 214,
        "end": 244,
        "startLoc": {
          "line": 214,
          "column": 3,
          "position": 1870
        },
        "endLoc": {
          "line": 244,
          "column": 3,
          "position": 2148
        }
      }
    },
    {
      "format": "tsx",
      "lines": 17,
      "fragment": ");\n      }\n    };\n    \n    checkUser();\n    \n    // Set up auth state listener\n    const { data: authListener } = supabase.auth.onAuthStateChange((event, session) => {\n      setUser(session?.user || null);\n    });\n    \n    return () => {\n      authListener.subscription.unsubscribe();\n    };\n  }, []);\n\n  const",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/layout/Layout.tsx",
        "start": 39,
        "end": 55,
        "startLoc": {
          "line": 39,
          "column": 6,
          "position": 402
        },
        "endLoc": {
          "line": 55,
          "column": 6,
          "position": 512
        }
      },
      "secondFile": {
        "name": "src/components/layout/MinimalNav.tsx",
        "start": 52,
        "end": 68,
        "startLoc": {
          "line": 52,
          "column": 6,
          "position": 523
        },
        "endLoc": {
          "line": 68,
          "column": 41,
          "position": 634
        }
      }
    },
    {
      "format": "javascript",
      "lines": 43,
      "fragment": ")}\n                      >\n                        <div className=\"flex items-center\">\n                          <div className=\"p-2 rounded-full bg-green-100 dark:bg-green-900/30 mr-3\">\n                            <Heart className=\"w-5 h-5 text-green-600 dark:text-green-400\" />\n                          </div>\n                          <h5 className=\"font-semibold text-gray-900 dark:text-white\">Whole-Person Health</h5>\n                        </div>\n                        <div>\n                          {expandedSection === 'whole-person' ? (\n                            <ChevronUp className=\"w-5 h-5 text-gray-500 dark:text-gray-400\" />\n                          ) : (\n                            <ChevronDown className=\"w-5 h-5 text-gray-500 dark:text-gray-400\" />\n                          )}\n                        </div>\n                      </div>\n                \n                <AnimatePresence>\n                  {expandedSection === 'whole-person' && (\n                    <motion.div\n                      initial={{ height: 0, opacity: 0 }}\n                      animate={{ height: 'auto', opacity: 1 }}\n                      exit={{ height: 0, opacity: 0 }}\n                      transition={{ duration: 0.3 }}\n                    >\n                      <div className=\"p-4 border-t border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-800\">\n                        <p className=\"text-gray-700 dark:text-gray-300\">\n                          Health optimization isn't just about one area—it looks at your overall well-being. \n                          Improving sleep, eating well, staying active, and managing stress all work together \n                          to enhance your health. We consider the interconnections between different aspects of \n                          your health to create a comprehensive approach to wellness.\n                        </p>\n                      </div>\n                    </motion.div>\n                  )}\n                </AnimatePresence>\n              </div>\n\n                    {/* Personalized Approach */}\n                    <div className=\"border border-gray-200 dark:border-gray-700 rounded-lg overflow-hidden\">\n                      <div \n                        className=\"flex justify-between items-center p-4 cursor-pointer bg-gray-50 dark:bg-gray-800 hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors\"\n                        onClick={() => toggleSection('personalized'",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/health/EvidenceBasedHealthOptimization.tsx",
        "start": 152,
        "end": 194,
        "startLoc": {
          "line": 152,
          "column": 15,
          "position": 1587
        },
        "endLoc": {
          "line": 194,
          "column": 15,
          "position": 1998
        }
      },
      "secondFile": {
        "name": "src/components/health/EvidenceBasedHealthOptimization.tsx",
        "start": 76,
        "end": 152,
        "startLoc": {
          "line": 76,
          "column": 13,
          "position": 750
        },
        "endLoc": {
          "line": 152,
          "column": 15,
          "position": 1586
        }
      }
    },
    {
      "format": "javascript",
      "lines": 146,
      "fragment": ")}\n                      >\n                        <div className=\"flex items-center\">\n                          <div className=\"p-2 rounded-full bg-purple-100 dark:bg-purple-900/30 mr-3\">\n                            <Brain className=\"w-5 h-5 text-purple-600 dark:text-purple-400\" />\n                          </div>\n                          <h5 className=\"font-semibold text-gray-900 dark:text-white\">Personalized Approach</h5>\n                        </div>\n                        <div>\n                          {expandedSection === 'personalized' ? (\n                            <ChevronUp className=\"w-5 h-5 text-gray-500 dark:text-gray-400\" />\n                          ) : (\n                            <ChevronDown className=\"w-5 h-5 text-gray-500 dark:text-gray-400\" />\n                          )}\n                        </div>\n                      </div>\n                \n                <AnimatePresence>\n                  {expandedSection === 'personalized' && (\n                    <motion.div\n                      initial={{ height: 0, opacity: 0 }}\n                      animate={{ height: 'auto', opacity: 1 }}\n                      exit={{ height: 0, opacity: 0 }}\n                      transition={{ duration: 0.3 }}\n                    >\n                      <div className=\"p-4 border-t border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-800\">\n                        <p className=\"text-gray-700 dark:text-gray-300\">\n                          Everyone is different. What works for one person may not work for another. \n                          That's why we tailor health strategies based on individual needs, data, and goals. \n                          Our AI-powered system analyzes your unique profile, health metrics, and preferences \n                          to create recommendations that are specifically designed for you.\n                        </p>\n                      </div>\n                    </motion.div>\n                  )}\n                </AnimatePresence>\n              </div>\n            </div>\n                </Card>\n\n                <Card className=\"p-8 mb-8\">\n                  <h4 className=\"text-lg font-semibold mb-4 text-gray-900 dark:text-white\">\n                    Research Behind Health Practices:\n                  </h4>\n                  <div className=\"space-y-4\">\n                    <div className=\"flex items-start\">\n                      <div className=\"p-2 rounded-full bg-indigo-100 dark:bg-indigo-900/30 mr-3 mt-1\">\n                        <Moon className=\"w-5 h-5 text-indigo-600 dark:text-indigo-400\" />\n                      </div>\n                      <div>\n                        <h5 className=\"font-semibold text-gray-900 dark:text-white\">Sleep</h5>\n                        <p className=\"text-gray-700 dark:text-gray-300\">\n                          Poor sleep is linked to various health issues, but better sleep quality improves your overall well-being.\n                          Research shows that consistent, quality sleep supports immune function, cognitive performance, and metabolic health.\n                        </p>\n                      </div>\n                    </div>\n              \n              <div className=\"flex items-start\">\n                <div className=\"p-2 rounded-full bg-green-100 dark:bg-green-900/30 mr-3 mt-1\">\n                  <Utensils className=\"w-5 h-5 text-green-600 dark:text-green-400\" />\n                </div>\n                <div>\n                  <h5 className=\"font-semibold text-gray-900 dark:text-white\">Nutrition</h5>\n                  <p className=\"text-gray-700 dark:text-gray-300\">\n                    A healthy diet reduces the risk of diseases like heart disease and diabetes.\n                    Studies consistently show that diets rich in whole foods, lean proteins, and healthy fats\n                    support longevity and reduce inflammation.\n                  </p>\n                </div>\n              </div>\n              \n              <div className=\"flex items-start\">\n                <div className=\"p-2 rounded-full bg-orange-100 dark:bg-orange-900/30 mr-3 mt-1\">\n                  <Activity className=\"w-5 h-5 text-orange-600 dark:text-orange-400\" />\n                </div>\n                <div>\n                  <h5 className=\"font-semibold text-gray-900 dark:text-white\">Fitness</h5>\n                  <p className=\"text-gray-700 dark:text-gray-300\">\n                    Regular exercise is proven to improve your cardiovascular health and muscle strength.\n                    Even moderate physical activity has been shown to reduce all-cause mortality and\n                    improve mental health outcomes.\n                  </p>\n                </div>\n              </div>\n            </div>\n                </Card>\n\n                <Card className=\"p-8\">\n                  <h4 className=\"text-lg font-semibold mb-4 text-gray-900 dark:text-white\">\n                    Simple Tips to Optimize Your Health:\n                  </h4>\n                  <div className=\"space-y-4\">\n                    <div className=\"flex items-start\">\n                      <CheckCircle className=\"w-5 h-5 text-blue-600 dark:text-blue-400 mr-3 mt-1 flex-shrink-0\" />\n                      <div>\n                        <h5 className=\"font-semibold text-gray-900 dark:text-white\">Sleep Better</h5>\n                        <p className=\"text-gray-700 dark:text-gray-300\">\n                          Stick to a sleep schedule, reduce screen time before bed, and make your bedroom comfortable.\n                        </p>\n                      </div>\n                    </div>\n              \n              <div className=\"flex items-start\">\n                <CheckCircle className=\"w-5 h-5 text-blue-600 dark:text-blue-400 mr-3 mt-1 flex-shrink-0\" />\n                <div>\n                  <h5 className=\"font-semibold text-gray-900 dark:text-white\">Eat Healthy</h5>\n                  <p className=\"text-gray-700 dark:text-gray-300\">\n                    Focus on a balanced diet with fruits, vegetables, lean proteins, and healthy fats.\n                  </p>\n                </div>\n              </div>\n              \n              <div className=\"flex items-start\">\n                <CheckCircle className=\"w-5 h-5 text-blue-600 dark:text-blue-400 mr-3 mt-1 flex-shrink-0\" />\n                <div>\n                  <h5 className=\"font-semibold text-gray-900 dark:text-white\">Stay Active</h5>\n                  <p className=\"text-gray-700 dark:text-gray-300\">\n                    Include both aerobic exercise and strength training in your routine for better fitness.\n                  </p>\n                </div>\n              </div>\n            </div>\n\n                  <div className=\"mt-8\">\n                    <h4 className=\"text-lg font-semibold mb-4 text-gray-900 dark:text-white\">\n                      How Metrics Help:\n                    </h4>\n                    <p className=\"text-gray-700 dark:text-gray-300 mb-6\">\n                      Metrics like BMI, sleep scores, and fitness levels track your progress and help you see how well \n                      you're optimizing your health. By monitoring these, you can make smarter, data-driven decisions \n                      to improve your well-being.\n                    </p>\n              \n                    <div className=\"flex justify-center\">\n                      <Button>\n                        Start Your Health Optimization Journey\n                      </Button>\n                    </div>\n                  </div>\n                </Card>\n                \n                {isExpanded && (\n                  <div className=\"text-center mt-8\">\n                    <Button \n                      onClick={() => setIsExpanded",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/health/EvidenceBasedHealthOptimization.tsx",
        "start": 194,
        "end": 339,
        "startLoc": {
          "line": 194,
          "column": 15,
          "position": 1999
        },
        "endLoc": {
          "line": 339,
          "column": 14,
          "position": 3492
        }
      },
      "secondFile": {
        "name": "src/components/health/EvidenceBasedHealthOptimization.tsx",
        "start": 76,
        "end": 152,
        "startLoc": {
          "line": 76,
          "column": 13,
          "position": 750
        },
        "endLoc": {
          "line": 152,
          "column": 14,
          "position": 1584
        }
      }
    },
    {
      "format": "tsx",
      "lines": 22,
      "fragment": ";\n      default:\n        return 'bg-gray-100 text-gray-800 dark:bg-gray-900/30 dark:text-gray-300';\n    }\n  };\n\n  const container = {\n    hidden: { opacity: 0 },\n    show: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.1\n      }\n    }\n  };\n\n  const item = {\n    hidden: { opacity: 0, y: 20 },\n    show: { opacity: 1, y: 0 }\n  };\n\n  return",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/dashboard/RecommendationsCard.tsx",
        "start": 28,
        "end": 49,
        "startLoc": {
          "line": 28,
          "column": 71,
          "position": 232
        },
        "endLoc": {
          "line": 49,
          "column": 7,
          "position": 365
        }
      },
      "secondFile": {
        "name": "src/components/dashboard/SupplementTracker.tsx",
        "start": 31,
        "end": 52,
        "startLoc": {
          "line": 31,
          "column": 75,
          "position": 273
        },
        "endLoc": {
          "line": 52,
          "column": 36,
          "position": 406
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": "</span>\n              </div>\n              <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2\">\n                <motion.div \n                  className=\"h-2 rounded-full bg-primary\"\n                  initial={{ width: 0 }}\n                  animate={{ width: `${goal.progress}%` }}\n                  transition={{ duration: 0.8",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/dashboard/GoalsProgress.tsx",
        "start": 69,
        "end": 76,
        "startLoc": {
          "line": 69,
          "column": 2,
          "position": 632
        },
        "endLoc": {
          "line": 76,
          "column": 4,
          "position": 707
        }
      },
      "secondFile": {
        "name": "src/components/fitness/FitnessGoals.tsx",
        "start": 88,
        "end": 95,
        "startLoc": {
          "line": 88,
          "column": 21,
          "position": 680
        },
        "endLoc": {
          "line": 95,
          "column": 2,
          "position": 755
        }
      }
    },
    {
      "format": "javascript",
      "lines": 31,
      "fragment": ")}\n        >\n          {showDetails ? (\n            <>\n              <ChevronUp className=\"w-4 h-4 mr-1\" />\n              Hide Details\n            </>\n          ) : (\n            <>\n              <ChevronDown className=\"w-4 h-4 mr-1\" />\n              Show Details\n            </>\n          )}\n        </button>\n      </div>\n      \n      <AnimatePresence>\n        {showDetails && (\n          <motion.div\n            initial={{ height: 0, opacity: 0 }}\n            animate={{ height: 'auto', opacity: 1 }}\n            exit={{ height: 0, opacity: 0 }}\n            transition={{ duration: 0.3 }}\n            className=\"overflow-hidden\"\n          >\n            <div className=\"p-7 border-t border-gray-200 dark:border-gray-700\">\n              <h4 className=\"text-sm font-semibold text-gray-700 dark:text-gray-300 mb-5 tracking-wide\">Score Breakdown</h4>\n              <div className=\"space-y-4\">\n                {metrics.map((metric) => (\n                  <div \n                    key={metric",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/dashboard/BWScoreCard.tsx",
        "start": 93,
        "end": 123,
        "startLoc": {
          "line": 93,
          "column": 12,
          "position": 874
        },
        "endLoc": {
          "line": 123,
          "column": 7,
          "position": 1110
        }
      },
      "secondFile": {
        "name": "src/components/health/EvidenceBasedHealthOptimization.tsx",
        "start": 76,
        "end": 152,
        "startLoc": {
          "line": 76,
          "column": 13,
          "position": 750
        },
        "endLoc": {
          "line": 152,
          "column": 2,
          "position": 1579
        }
      }
    },
    {
      "format": "tsx",
      "lines": 22,
      "fragment": ";\n    }\n  };\n\n  const container = {\n    hidden: { opacity: 0 },\n    show: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.1\n      }\n    }\n  };\n\n  const item = {\n    hidden: { opacity: 0, y: 20 },\n    show: { opacity: 1, y: 0 }\n  };\n\n  return (\n    <Card className=\"p-5\">\n      <h3",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/dashboard/ActivityTimeline.tsx",
        "start": 53,
        "end": 74,
        "startLoc": {
          "line": 53,
          "column": 25,
          "position": 466
        },
        "endLoc": {
          "line": 74,
          "column": 3,
          "position": 606
        }
      },
      "secondFile": {
        "name": "src/components/dashboard/SupplementTracker.tsx",
        "start": 33,
        "end": 51,
        "startLoc": {
          "line": 33,
          "column": 67,
          "position": 283
        },
        "endLoc": {
          "line": 51,
          "column": 4,
          "position": 382
        }
      }
    },
    {
      "format": "tsx",
      "lines": 15,
      "fragment": "()}\n                </span>\n              </div>\n              <input\n                type=\"range\"\n                min=\"0\"\n                max=\"1\"\n                step=\"0.01\"\n                value={similarityBoost}\n                onChange={handleSimilarityBoostChange}\n                disabled={!settings.enabled}\n                className=\"w-full h-2 bg-gray-200 dark:bg-gray-700 rounded-lg appearance-none cursor-pointer\"\n              />\n              <div className=\"flex justify-between text-xs text-gray-500 dark:text-gray-400 mt-1\">\n                <span>Unique",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/chat/VoicePreferences.tsx",
        "start": 293,
        "end": 307,
        "startLoc": {
          "line": 293,
          "column": 19,
          "position": 2483
        },
        "endLoc": {
          "line": 307,
          "column": 7,
          "position": 2569
        }
      },
      "secondFile": {
        "name": "src/components/chat/VoicePreferences.tsx",
        "start": 268,
        "end": 282,
        "startLoc": {
          "line": 268,
          "column": 18,
          "position": 2307
        },
        "endLoc": {
          "line": 282,
          "column": 9,
          "position": 2393
        }
      }
    },
    {
      "format": "javascript",
      "lines": 8,
      "fragment": "? \"bg-primary text-white\" \n                    : \"bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 text-gray-800 dark:text-gray-200\"\n                )}\n                whileHover={{ scale: 1.02 }}\n                whileTap={{ scale: 0.98 }}\n                initial={{ opacity: 0, y: 10 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.2",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/chat/AIHealthCoach.tsx",
        "start": 257,
        "end": 264,
        "startLoc": {
          "line": 257,
          "column": 21,
          "position": 2324
        },
        "endLoc": {
          "line": 264,
          "column": 4,
          "position": 2400
        }
      },
      "secondFile": {
        "name": "src/components/chat/MyCoach.tsx",
        "start": 586,
        "end": 593,
        "startLoc": {
          "line": 586,
          "column": 21,
          "position": 4802
        },
        "endLoc": {
          "line": 593,
          "column": 4,
          "position": 4878
        }
      }
    },
    {
      "format": "tsx",
      "lines": 45,
      "fragment": "; \n\n// Sample question sets that will rotate after each response\nconst QUESTION_SETS = [\n  [\n    { text: \"How can I sleep better?\", category: \"sleep\" },\n    { text: \"What supplements should I take?\", category: \"supplements\" },\n    { text: \"How can I boost my metabolism?\", category: \"metabolism\" },\n    { text: \"What's a good fitness routine?\", category: \"fitness\" }\n  ],\n  [\n    { text: \"What foods are good for my brain?\", category: \"nutrition\" },\n    { text: \"How much protein do I need?\", category: \"nutrition\" },\n    { text: \"How can I track my health?\", category: \"tracking\" },\n    { text: \"How important is hydration?\", category: \"hydration\" }\n  ],\n  [\n    { text: \"How can I reduce stress?\", category: \"stress\" },\n    { text: \"How do I know if I have a deficiency?\", category: \"health\" },\n    { text: \"What's a balanced meal?\", category: \"nutrition\" },\n    { text: \"How can I get more energy?\", category: \"energy\" }\n  ],\n  [\n    { text: \"How does sleep affect hormones?\", category: \"sleep\" },\n    { text: \"How can I eat better for weight loss?\", category: \"nutrition\" },\n    { text: \"Why is strength training important?\", category: \"fitness\" },\n    { text: \"How can I recover faster from a workout?\", category: \"recovery\" }\n  ],\n  [\n    { text: \"What vitamins should I take?\", category: \"supplements\" },\n    { text: \"How can I stay healthy long-term?\", category: \"longevity\" },\n    { text: \"What's the best time to exercise?\", category: \"fitness\" },\n    { text: \"How can I improve my mental focus?\", category: \"cognitive\" }\n  ]\n];\n\n// Define message type\ninterface Message {\n  id: string;\n  role: 'user' | 'assistant';\n  content: string;\n  timestamp: Date;\n}\n\nconst",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/chat/AIHealthCoach.tsx",
        "start": 7,
        "end": 51,
        "startLoc": {
          "line": 7,
          "column": 17,
          "position": 109
        },
        "endLoc": {
          "line": 51,
          "column": 6,
          "position": 539
        }
      },
      "secondFile": {
        "name": "src/components/chat/MyCoach.tsx",
        "start": 10,
        "end": 54,
        "startLoc": {
          "line": 10,
          "column": 34,
          "position": 160
        },
        "endLoc": {
          "line": 54,
          "column": 10,
          "position": 589
        }
      }
    },
    {
      "format": "tsx",
      "lines": 18,
      "fragment": "]);\n\n  // Focus input on load\n  useEffect(() => {\n    inputRef.current?.focus();\n  }, []);\n\n  // Get current question set\n  const currentQuestions = QUESTION_SETS[currentQuestionSetIndex];\n\n  // Add initial greeting message\n  useEffect(() => {\n    if (messages.length === 0) {\n      setMessages([\n        {\n          id: 'welcome',\n          role: 'assistant',\n          content: \"Hi there! I'm your Biowell AI health coach. How can I help you optimize your wellness today?\"",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/chat/AIHealthCoach.tsx",
        "start": 70,
        "end": 87,
        "startLoc": {
          "line": 70,
          "column": 9,
          "position": 834
        },
        "endLoc": {
          "line": 87,
          "column": 95,
          "position": 944
        }
      },
      "secondFile": {
        "name": "src/components/chat/MyCoach.tsx",
        "start": 125,
        "end": 142,
        "startLoc": {
          "line": 125,
          "column": 2,
          "position": 1371
        },
        "endLoc": {
          "line": 142,
          "column": 94,
          "position": 1481
        }
      }
    },
    {
      "format": "tsx",
      "lines": 18,
      "fragment": "]);\n\n  const handleSubmit = async (e: React.FormEvent, questionText?: string) => {\n    e.preventDefault();\n    \n    // Use either the provided question or the input field value\n    const messageText = questionText || input.trim();\n    if (!messageText || isLoading) return;\n\n    const userMessage: Message = {\n      id: Date.now().toString(),\n      role: 'user',\n      content: messageText,\n      timestamp: new Date()\n    };\n\n    setMessages(prev => [...prev, userMessage]);\n    if",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/chat/AIHealthCoach.tsx",
        "start": 92,
        "end": 109,
        "startLoc": {
          "line": 92,
          "column": 7,
          "position": 976
        },
        "endLoc": {
          "line": 109,
          "column": 3,
          "position": 1131
        }
      },
      "secondFile": {
        "name": "src/components/chat/MyCoach.tsx",
        "start": 162,
        "end": 179,
        "startLoc": {
          "line": 162,
          "column": 2,
          "position": 1611
        },
        "endLoc": {
          "line": 179,
          "column": 9,
          "position": 1766
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": "};\n\n  const handleQuestionClick = (question: string) => (e: React.MouseEvent) => {\n    e.preventDefault();\n    setRecentlyClickedQuestion(question);\n    handleSubmit(e, question);\n    \n    // Clear the recently clicked question after a delay\n    setTimeout(() => {\n      setRecentlyClickedQuestion(null);\n    }, 2000",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/chat/AIHealthCoach.tsx",
        "start": 162,
        "end": 172,
        "startLoc": {
          "line": 162,
          "column": 3,
          "position": 1574
        },
        "endLoc": {
          "line": 172,
          "column": 5,
          "position": 1658
        }
      },
      "secondFile": {
        "name": "src/components/chat/MyCoach.tsx",
        "start": 337,
        "end": 347,
        "startLoc": {
          "line": 337,
          "column": 3,
          "position": 2824
        },
        "endLoc": {
          "line": 347,
          "column": 5,
          "position": 2908
        }
      }
    },
    {
      "format": "tsx",
      "lines": 28,
      "fragment": ");\n  \n  // Helper function to get color based on category\n  function getCategoryColor(category: string): string {\n    switch (category) {\n      case 'sleep':\n        return 'bg-purple-500';\n      case 'supplements':\n        return 'bg-green-500';\n      case 'nutrition':\n        return 'bg-blue-500';\n      case 'fitness':\n        return 'bg-orange-500';\n      case 'metabolism':\n        return 'bg-red-500';\n      case 'hydration':\n        return 'bg-cyan-500';\n      case 'stress':\n        return 'bg-pink-500';\n      case 'energy':\n        return 'bg-yellow-500';\n      case 'recovery':\n        return 'bg-indigo-500';\n      case 'cognitive':\n        return 'bg-emerald-500';\n      case 'longevity':\n        return 'bg-violet-500';\n      case",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/chat/AIHealthCoach.tsx",
        "start": 309,
        "end": 336,
        "startLoc": {
          "line": 309,
          "column": 3,
          "position": 2772
        },
        "endLoc": {
          "line": 336,
          "column": 5,
          "position": 2938
        }
      },
      "secondFile": {
        "name": "src/components/chat/MyCoach.tsx",
        "start": 444,
        "end": 471,
        "startLoc": {
          "line": 444,
          "column": 2,
          "position": 3617
        },
        "endLoc": {
          "line": 471,
          "column": 8,
          "position": 3782
        }
      }
    },
    {
      "format": "sql",
      "lines": 12,
      "fragment": "IS NULL AND (\n  LOWER(name) LIKE '%creatine%' OR\n  LOWER(name) LIKE '%protein%' OR LOWER(name) LIKE '%whey%' OR\n  LOWER(name) LIKE '%vitamin d%' OR\n  LOWER(name) LIKE '%magnesium%' OR\n  LOWER(name) LIKE '%ashwagandha%' OR\n  LOWER(name) LIKE '%rhodiola%' OR\n  LOWER(name) LIKE '%berberine%' OR\n  LOWER(name) LIKE '%beta-alanine%'\n);\n\n-- Update source links for key supplements",
      "tokens": 0,
      "firstFile": {
        "name": "supabase/migrations/20250717095950_stark_bridge.sql",
        "start": 131,
        "end": 142,
        "startLoc": {
          "line": 131,
          "column": 2,
          "position": 1523
        },
        "endLoc": {
          "line": 142,
          "column": 43,
          "position": 1640
        }
      },
      "secondFile": {
        "name": "supabase/migrations/20250717095950_stark_bridge.sql",
        "start": 99,
        "end": 110,
        "startLoc": {
          "line": 99,
          "column": 2,
          "position": 1224
        },
        "endLoc": {
          "line": 110,
          "column": 54,
          "position": 1341
        }
      }
    },
    {
      "format": "sql",
      "lines": 12,
      "fragment": "IS NULL AND (\n  LOWER(name) LIKE '%creatine%' OR\n  LOWER(name) LIKE '%protein%' OR LOWER(name) LIKE '%whey%' OR\n  LOWER(name) LIKE '%vitamin d%' OR\n  LOWER(name) LIKE '%magnesium%' OR\n  LOWER(name) LIKE '%ashwagandha%' OR\n  LOWER(name) LIKE '%rhodiola%' OR\n  LOWER(name) LIKE '%berberine%' OR\n  LOWER(name) LIKE '%beta-alanine%'\n);\n\n-- Make sure the stock_quantity and is_available fields are set correctly",
      "tokens": 0,
      "firstFile": {
        "name": "supabase/migrations/20250717095950_stark_bridge.sql",
        "start": 155,
        "end": 166,
        "startLoc": {
          "line": 155,
          "column": 2,
          "position": 1804
        },
        "endLoc": {
          "line": 166,
          "column": 74,
          "position": 1921
        }
      },
      "secondFile": {
        "name": "supabase/migrations/20250717095950_stark_bridge.sql",
        "start": 99,
        "end": 110,
        "startLoc": {
          "line": 99,
          "column": 2,
          "position": 1224
        },
        "endLoc": {
          "line": 110,
          "column": 54,
          "position": 1341
        }
      }
    },
    {
      "format": "sql",
      "lines": 23,
      "fragment": "SET \n  price_aed = CASE \n    -- Common green tier supplements with fixed prices\n    WHEN name ILIKE '%creatine%' THEN 85\n    WHEN name ILIKE '%vitamin d%' THEN 40\n    WHEN name ILIKE '%whey protein%' THEN 180\n    WHEN name ILIKE '%protein%' AND category ILIKE '%muscle%' THEN 180\n    \n    -- Yellow tier supplements with fixed prices\n    WHEN name ILIKE '%ashwagandha%' THEN 95\n    WHEN name ILIKE '%rhodiola%' THEN 95\n    WHEN name ILIKE '%beta-alanine%' THEN 95\n    WHEN name ILIKE '%berberine%' THEN 110\n    WHEN name ILIKE '%alpha-lipoic acid%' THEN 80\n    \n    -- Orange tier supplements with fixed prices\n    WHEN name ILIKE '%tongkat ali%' THEN 135\n    WHEN name ILIKE '%digestive enzyme%' THEN 85\n    \n    -- Default conversion for all others\n    ELSE COALESCE(price::numeric, 27) * 3.67\n  END\nWHERE TRUE",
      "tokens": 0,
      "firstFile": {
        "name": "supabase/migrations/20250717095730_odd_night.sql",
        "start": 44,
        "end": 66,
        "startLoc": {
          "line": 44,
          "column": 1,
          "position": 233
        },
        "endLoc": {
          "line": 66,
          "column": 5,
          "position": 434
        }
      },
      "secondFile": {
        "name": "supabase/migrations/20250717095730_odd_night.sql",
        "start": 18,
        "end": 40,
        "startLoc": {
          "line": 18,
          "column": 1,
          "position": 10
        },
        "endLoc": {
          "line": 40,
          "column": 10,
          "position": 211
        }
      }
    },
    {
      "format": "sql",
      "lines": 11,
      "fragment": "WHEN LOWER(name) LIKE '%ashwagandha%' OR\n         LOWER(name) LIKE '%rhodiola%' OR\n         LOWER(name) LIKE '%magnesium%' OR\n         LOWER(name) LIKE '%beta-alanine%' OR\n         LOWER(name) LIKE '%berberine%' OR\n         LOWER(name) LIKE '%theanine%' OR\n         LOWER(name) LIKE '%zinc%' OR\n         LOWER(name) LIKE '%electrolytes%' OR\n         LOWER(name) LIKE '%b-complex%' OR\n         LOWER(name) LIKE '%glutamine%' OR\n         LOWER(category) LIKE",
      "tokens": 0,
      "firstFile": {
        "name": "supabase/migrations/20250717095323_falling_shape.sql",
        "start": 31,
        "end": 41,
        "startLoc": {
          "line": 31,
          "column": 5,
          "position": 104
        },
        "endLoc": {
          "line": 41,
          "column": 5,
          "position": 231
        }
      },
      "secondFile": {
        "name": "supabase/migrations/20250717095950_stark_bridge.sql",
        "start": 21,
        "end": 24,
        "startLoc": {
          "line": 21,
          "column": 5,
          "position": 95
        },
        "endLoc": {
          "line": 24,
          "column": 2,
          "position": 215
        }
      }
    },
    {
      "format": "javascript",
      "lines": 270,
      "fragment": "={handleCreateStack}>\n              <Plus className=\"w-4 h-4 mr-2\" />\n              Create Stack\n            </Button>\n            <Link to=\"/cart\">\n              <Button variant=\"outline\">\n                <ShoppingCart className=\"w-4 h-4 mr-2\" />\n                Cart\n              </Button>\n            </Link>\n          </div>\n        </div>\n\n        {/* Navigation Tabs */}\n        <Tabs defaultValue=\"explore\" onValueChange={setActiveTab} className=\"mb-6\">\n          <TabsList className=\"mb-6\">\n            <TabsTrigger value=\"explore\" className=\"flex items-center\">\n              <Store className=\"w-4 h-4 mr-2\" />\n              Explore\n            </TabsTrigger>\n            <TabsTrigger value=\"my-stacks\" className=\"flex items-center\">\n              <Package className=\"w-4 h-4 mr-2\" />\n              My Stacks\n            </TabsTrigger>\n            <TabsTrigger value=\"recommendations\" className=\"flex items-center\">\n              <Sparkles className=\"w-4 h-4 mr-2\" />\n              Recommendations\n            </TabsTrigger>\n          </TabsList>\n\n          {/* Explore Supplements Tab */}\n          <TabsContent value=\"explore\">\n            {/* Tier Information */}\n            <div className=\"mb-6\">\n              <button \n                onClick={() => setShowTierInfo(!showTierInfo)}\n                className=\"flex items-center text-primary hover:text-primary-dark font-medium\"\n              >\n                <Info className=\"w-5 h-5 mr-2\" />\n                {showTierInfo ? 'Hide' : 'Show'} Evidence Tier Information\n              </button>\n              \n              {showTierInfo && (\n                <div className=\"mt-4 p-4 bg-white dark:bg-gray-800 rounded-lg shadow\">\n                  <h3 className=\"text-lg font-semibold mb-3 text-gray-900 dark:text-white\">Evidence Tier Definitions</h3>\n                  <div className=\"space-y-3\">\n                    <div className=\"flex items-start\">\n                      <span className=\"inline-block px-2 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-300 mr-3 mt-0.5\">Green</span>\n                      <p className=\"text-gray-700 dark:text-gray-300 text-sm\">Strong evidence – Supported by multiple high-quality human clinical trials and major scientific consensus (e.g., creatine, vitamin D).</p>\n                    </div>\n                    <div className=\"flex items-start\">\n                      <span className=\"inline-block px-2 py-1 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800 dark:bg-yellow-900/30 dark:text-yellow-300 mr-3 mt-0.5\">Yellow</span>\n                      <p className=\"text-gray-700 dark:text-gray-300 text-sm\">Moderate/emerging evidence – Some supporting studies, but either limited in scale, mixed results, or moderate scientific consensus (e.g., ashwagandha, beta-alanine).</p>\n                    </div>\n                    <div className=\"flex items-start\">\n                      <span className=\"inline-block px-2 py-1 rounded-full text-xs font-medium bg-orange-100 text-orange-800 dark:bg-orange-900/30 dark:text-orange-300 mr-3 mt-0.5\">Orange</span>\n                      <p className=\"text-gray-700 dark:text-gray-300 text-sm\">Limited/preliminary evidence – Mostly early-stage or animal/lab-based research, few or low-quality human trials, or anecdotal support (e.g., tongkat ali, shilajit).</p>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n\n            <SupplementGrid \n              supplements={supplements}\n              onAddToCart={handleAddToCart}\n              onAddToStack={handleAddToStack}\n              loading={isLoading}\n              error={error}\n            />\n          </TabsContent>\n\n          {/* My Stacks Tab */}\n          <TabsContent value=\"my-stacks\">\n            {isLoading ? (\n              <div className=\"flex justify-center py-12\">\n                <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary\"></div>\n              </div>\n            ) : stacks.length === 0 ? (\n              <Card className=\"p-12 text-center\">\n                <Package className=\"w-16 h-16 mx-auto text-gray-400 dark:text-gray-600 mb-4\" />\n                <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-2\">No Supplement Stacks</h2>\n                <p className=\"text-gray-600 dark:text-gray-400 mb-6\">\n                  You haven't created any supplement stacks yet. Create your first stack to get started.\n                </p>\n                <Button className=\"flex items-center mx-auto\" onClick={handleCreateStack}>\n                  <Plus className=\"w-4 h-4 mr-2\" />\n                  Create Your First Stack\n                </Button>\n              </Card>\n            ) : (\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                {stacks.map(stack => (\n                  <Card key={stack.id} className=\"overflow-hidden\">\n                    <div className=\"p-5\">\n                      <div className=\"flex justify-between items-start mb-3\">\n                        <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white\">{stack.name}</h3>\n                        <div className=\"flex space-x-1\">\n                          <button \n                            className=\"p-1 text-gray-500 hover:text-primary rounded-full\"\n                            aria-label=\"Edit stack\"\n                          >\n                            <Edit className=\"w-4 h-4\" />\n                          </button>\n                          <button \n                            className=\"p-1 text-gray-500 hover:text-red-500 rounded-full\"\n                            aria-label=\"Delete stack\"\n                            onClick={() => handleDeleteStack(stack.id)}\n                          >\n                            <Trash2 className=\"w-4 h-4\" />\n                          </button>\n                        </div>\n                      </div>\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-4\">{stack.description}</p>\n                      \n                      <div className=\"space-y-2 mb-4\">\n                        {stack.components.map((supplement, index) => {\n                          return (\n                            <div key={index} className=\"flex justify-between text-sm\">\n                              <div>\n                                <span className=\"font-medium text-gray-900 dark:text-white\">{supplement.name}</span>\n                                <span className=\"text-gray-600 dark:text-gray-400 ml-2\">({supplement.dosage})</span>\n                              </div>\n                              <span className=\"text-gray-900 dark:text-white font-medium\">\n                                {typeof supplement.price === 'number' \n                                  ? supplement.price.toFixed(2) \n                                  : supplement.price} AED\n                              </span>\n                            </div>\n                          );\n                        })}\n                      </div>\n                      \n                      <div className=\"flex justify-between items-center pt-3 border-t border-gray-200 dark:border-gray-700\">\n                        <span className=\"font-bold text-lg text-primary dark:text-primary-light\">\n                          Total: {stack.total_price.toFixed(2)} AED\n                        </span>\n                        <div className=\"flex items-center\">\n                          <span className=\"text-sm text-gray-600 dark:text-gray-400 mr-2\">Active</span>\n                          <button\n                            className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2 ${\n                              stack.is_active ? 'bg-primary' : 'bg-gray-200 dark:bg-gray-700'\n                            }`}\n                            onClick={() => handleToggleActive(stack.id)}\n                          >\n                            <span\n                              className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\n                                stack.is_active ? 'translate-x-6' : 'translate-x-1'\n                              }`}\n                            />\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                    \n                    <div className=\"bg-gray-50 dark:bg-gray-800 p-4 border-t border-gray-200 dark:border-gray-700\">\n                      <div className=\"flex justify-between\">\n                        <Button variant=\"outline\" size=\"sm\">\n                          View Details\n                        </Button>\n                        <Button size=\"sm\">\n                          Order Now\n                        </Button>\n                      </div>\n                    </div>\n                  </Card>\n                ))}\n              </div>\n            )}\n          </TabsContent>\n\n          {/* Recommendations Tab */}\n          <TabsContent value=\"recommendations\">\n            <div className=\"bg-blue-50 dark:bg-blue-900/20 p-5 rounded-xl border border-blue-100 dark:border-blue-800 text-blue-700 dark:text-blue-300 flex items-start shadow-sm mb-6\">\n              <Info className=\"w-5 h-5 mr-4 flex-shrink-0 mt-0.5\" />\n              <p className=\"tracking-wide leading-relaxed\">\n                Based on your health profile, we recommend the following supplements to support your wellness goals.\n                Green tier supplements have the strongest scientific evidence, while yellow and orange tiers have \n                moderate or preliminary evidence respectively.\n              </p>\n            </div>\n\n            {isLoading ? (\n              <div className=\"flex justify-center py-12\">\n                <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary\"></div>\n              </div>\n            ) : error ? (\n              <Card className=\"p-6 text-center\">\n                <AlertCircle className=\"w-16 h-16 mx-auto text-red-500 mb-4\" />\n                <p className=\"text-red-500 mb-4\">{error}</p>\n                <Button onClick={fetchSupplements}>\n                  Try Again\n                </Button>\n              </Card>\n            ) : (\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                {supplements.slice(0, 6).map(supplement => (\n                  <Card key={supplement.id} className=\"overflow-hidden hover:shadow-xl transition-all duration-300\">\n                    <div className=\"relative h-48\">\n                      <img \n                        src={supplement.image_url || 'https://images.pexels.com/photos/3683074/pexels-photo-3683074.jpeg?auto=compress&cs=tinysrgb&w=300'} \n                        alt={supplement.name} \n                        className=\"w-full h-full object-cover\"\n                      />\n                      <div className=\"absolute top-2 right-2\">\n                        <span className={`inline-block px-2 py-1 rounded-full text-xs font-medium ${\n                          supplement.tier === 'green' \n                            ? 'bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-300' \n                            : supplement.tier === 'yellow'\n                              ? 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900/30 dark:text-yellow-300'\n                              : 'bg-orange-100 text-orange-800 dark:bg-orange-900/30 dark:text-orange-300'\n                        }`}>\n                          {supplement.tier.charAt(0).toUpperCase() + supplement.tier.slice(1)} Tier\n                        </span>\n                      </div>\n                    </div>\n                    \n                    <div className=\"p-4\">\n                      <h4 className=\"font-semibold text-lg mb-1 text-gray-900 dark:text-white\">\n                        {supplement.name}\n                      </h4>\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-2\">\n                        {supplement.brand || 'Biowell'}\n                      </p>\n                      <p className=\"text-sm text-gray-700 dark:text-gray-300 mb-4\">\n                        {supplement.use_case || supplement.description}\n                      </p>\n                      \n                      <div className=\"flex justify-between items-center\">\n                        <span className=\"font-bold text-gray-900 dark:text-white\">\n                          {supplement.price_aed?.toFixed(2)} AED\n                        </span>\n                        <div className=\"flex space-x-2\">\n                          <Button\n                            as={Link}\n                            to={`/supplements/${supplement.id}`}\n                            variant=\"outline\"\n                            size=\"sm\"\n                          >\n                            Details\n                          </Button>\n                          <Button\n                            size=\"sm\"\n                            onClick={() => handleAddToCart(supplement.id)}\n                            disabled={addingToCart === supplement.id}\n                          >\n                            {addingToCart === supplement.id ? 'Added!' : 'Add to Cart'}\n                          </Button>\n                        </div>\n                      </div>\n                    </div>\n                  </Card>\n                ))}\n              </div>\n            )}\n\n            <div className=\"mt-6 text-center\">\n              <Button as={Link} to=\"/recommendations\" variant=\"outline\">\n                View All Recommendations <ArrowRight className=\"w-4 h-4 ml-1.5\" />\n              </Button>\n            </div>\n          </TabsContent>\n        </Tabs>\n\n        {/* Stack Builder Modal */}\n        <StackBuilderModal\n          isOpen={showStackBuilder}\n          onClose={() => setShowStackBuilder(false)}\n          initialSupplementId={selectedSupplementId || undefined}\n          onSaveStack={handleSaveStack}",
      "tokens": 0,
      "firstFile": {
        "name": "src/pages/SupplementsPage.tsx",
        "start": 149,
        "end": 418,
        "startLoc": {
          "line": 149,
          "column": 8,
          "position": 1489
        },
        "endLoc": {
          "line": 418,
          "column": 2,
          "position": 3949
        }
      },
      "secondFile": {
        "name": "src/components/layout/Navigation.tsx",
        "start": 149,
        "end": 418,
        "startLoc": {
          "line": 149,
          "column": 8,
          "position": 1498
        },
        "endLoc": {
          "line": 418,
          "column": 2,
          "position": 3958
        }
      }
    },
    {
      "format": "tsx",
      "lines": 419,
      "fragment": ";\nimport { supplementApi } from '../api/supplementApi';\nimport StackBuilderModal from '../components/supplements/StackBuilderModal';\nimport SupplementGrid from '../components/supplements/SupplementGrid';\n\n// Initialize Supabase client\nconst supabaseUrl = import.meta.env.VITE_SUPABASE_URL || '';\nconst supabaseAnonKey = import.meta.env.VITE_SUPABASE_ANON_KEY || '';\nconst supabase = createClient(supabaseUrl, supabaseAnonKey);\n\nconst SupplementsPage: React.FC = () => {\n  const [supplements, setSupplements] = useState([]);\n  const [stacks, setStacks] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showTierInfo, setShowTierInfo] = useState(false);\n  const [activeTab, setActiveTab] = useState('explore');\n  const [showStackBuilder, setShowStackBuilder] = useState(false);\n  const [selectedSupplementId, setSelectedSupplementId] = useState(null);\n  const [addingToCart, setAddingToCart] = useState(null);\n\n  useEffect(() => {\n    fetchSupplements();\n    fetchStacks();\n  }, []);\n\n  const fetchSupplements = async () => {\n    setIsLoading(true);\n    try {\n      const data = await supplementApi.getSupplements({ tier: 'all' });\n      setSupplements(data || []);\n    } catch (err) {\n      console.error('Error fetching supplements:', err);\n      setError('Failed to load supplements. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const fetchStacks = async () => {\n    try {\n      // Get user ID\n      const { data: { user } } = await supabase.auth.getUser();\n      \n      if (user) {\n        const stacks = await supplementApi.getUserSupplementStacks(user.id);\n        setStacks(stacks || []);\n      } else {\n        // Mock data for demo\n        setStacks([\n          {\n            id: '1',\n            name: 'Morning Energy Stack',\n            description: 'Supplements to boost energy and focus in the morning',\n            components: [\n              { name: 'Vitamin B Complex', dosage: '1 capsule', timing: 'With breakfast' },\n              { name: 'Omega-3', dosage: '1000mg', timing: 'With breakfast' },\n              { name: 'Rhodiola Rosea', dosage: '500mg', timing: 'Morning' }\n            ],\n            total_price: 205.00,\n            is_active: true\n          },\n          {\n            id: '2',\n            name: 'Sleep & Recovery',\n            description: 'Supplements to improve sleep quality and recovery',\n            components: [\n              { name: 'Magnesium Glycinate', dosage: '400mg', timing: 'Before bed' },\n              { name: 'L-Theanine', dosage: '200mg', timing: 'Before bed' },\n              { name: 'Zinc', dosage: '15mg', timing: 'With dinner' }\n            ],\n            total_price: 215.00,\n            is_active: true\n          },\n          {\n            id: '3',\n            name: 'Immune Support',\n            description: 'Supplements to boost immune system',\n            components: [\n              { name: 'Vitamin D3', dosage: '5000 IU', timing: 'With breakfast' },\n              { name: 'Vitamin C', dosage: '1000mg', timing: 'With lunch' },\n              { name: 'Zinc', dosage: '15mg', timing: 'With dinner' }\n            ],\n            total_price: 155.00,\n            is_active: false\n          }\n        ]);\n      }\n    } catch (err) {\n      console.error('Error fetching stacks:', err);\n      // Not setting error since this is supplementary data\n    }\n  };\n\n  const handleAddToCart = (supplementId) => {\n    setAddingToCart(supplementId);\n    // Simulate adding to cart with delay\n    setTimeout(() => {\n      setAddingToCart(null);\n    }, 1000);\n  };\n\n  const handleAddToStack = (supplementId) => {\n    setSelectedSupplementId(supplementId);\n    setShowStackBuilder(true);\n  };\n\n  const handleCreateStack = () => {\n    setSelectedSupplementId(null);\n    setShowStackBuilder(true);\n  };\n\n  const handleSaveStack = async (stackData) => {\n    try {\n      await supplementApi.createSupplementStack(stackData);\n      // Refresh stacks after saving\n      fetchStacks();\n    } catch (error) {\n      console.error('Error saving stack:', error);\n      throw error;\n    }\n  };\n\n  const handleDeleteStack = (id) => {\n    setStacks(stacks.filter(stack => stack.id !== id));\n  };\n\n  const handleToggleActive = (id) => {\n    setStacks(stacks.map(stack => \n      stack.id === id ? { ...stack, is_active: !stack.is_active } : stack\n    ));\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 py-6 sm:py-8 transition-all duration-200\">\n      <div className=\"mobile-container\">\n        <div className=\"flex justify-between items-center mb-6 sm:mb-8\">\n          <div>\n            <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white\">Supplements</h1>\n            <p className=\"text-gray-600 dark:text-gray-400\">Explore, shop, and manage your supplements</p>\n          </div>\n          <div className=\"flex space-x-2\">\n            <Button className=\"flex items-center\" onClick={handleCreateStack}>\n              <Plus className=\"w-4 h-4 mr-2\" />\n              Create Stack\n            </Button>\n            <Link to=\"/cart\">\n              <Button variant=\"outline\">\n                <ShoppingCart className=\"w-4 h-4 mr-2\" />\n                Cart\n              </Button>\n            </Link>\n          </div>\n        </div>\n\n        {/* Navigation Tabs */}\n        <Tabs defaultValue=\"explore\" onValueChange={setActiveTab} className=\"mb-6\">\n          <TabsList className=\"mb-6\">\n            <TabsTrigger value=\"explore\" className=\"flex items-center\">\n              <Store className=\"w-4 h-4 mr-2\" />\n              Explore\n            </TabsTrigger>\n            <TabsTrigger value=\"my-stacks\" className=\"flex items-center\">\n              <Package className=\"w-4 h-4 mr-2\" />\n              My Stacks\n            </TabsTrigger>\n            <TabsTrigger value=\"recommendations\" className=\"flex items-center\">\n              <Sparkles className=\"w-4 h-4 mr-2\" />\n              Recommendations\n            </TabsTrigger>\n          </TabsList>\n\n          {/* Explore Supplements Tab */}\n          <TabsContent value=\"explore\">\n            {/* Tier Information */}\n            <div className=\"mb-6\">\n              <button \n                onClick={() => setShowTierInfo(!showTierInfo)}\n                className=\"flex items-center text-primary hover:text-primary-dark font-medium\"\n              >\n                <Info className=\"w-5 h-5 mr-2\" />\n                {showTierInfo ? 'Hide' : 'Show'} Evidence Tier Information\n              </button>\n              \n              {showTierInfo && (\n                <div className=\"mt-4 p-4 bg-white dark:bg-gray-800 rounded-lg shadow\">\n                  <h3 className=\"text-lg font-semibold mb-3 text-gray-900 dark:text-white\">Evidence Tier Definitions</h3>\n                  <div className=\"space-y-3\">\n                    <div className=\"flex items-start\">\n                      <span className=\"inline-block px-2 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-300 mr-3 mt-0.5\">Green</span>\n                      <p className=\"text-gray-700 dark:text-gray-300 text-sm\">Strong evidence – Supported by multiple high-quality human clinical trials and major scientific consensus (e.g., creatine, vitamin D).</p>\n                    </div>\n                    <div className=\"flex items-start\">\n                      <span className=\"inline-block px-2 py-1 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800 dark:bg-yellow-900/30 dark:text-yellow-300 mr-3 mt-0.5\">Yellow</span>\n                      <p className=\"text-gray-700 dark:text-gray-300 text-sm\">Moderate/emerging evidence – Some supporting studies, but either limited in scale, mixed results, or moderate scientific consensus (e.g., ashwagandha, beta-alanine).</p>\n                    </div>\n                    <div className=\"flex items-start\">\n                      <span className=\"inline-block px-2 py-1 rounded-full text-xs font-medium bg-orange-100 text-orange-800 dark:bg-orange-900/30 dark:text-orange-300 mr-3 mt-0.5\">Orange</span>\n                      <p className=\"text-gray-700 dark:text-gray-300 text-sm\">Limited/preliminary evidence – Mostly early-stage or animal/lab-based research, few or low-quality human trials, or anecdotal support (e.g., tongkat ali, shilajit).</p>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n\n            <SupplementGrid \n              supplements={supplements}\n              onAddToCart={handleAddToCart}\n              onAddToStack={handleAddToStack}\n              loading={isLoading}\n              error={error}\n            />\n          </TabsContent>\n\n          {/* My Stacks Tab */}\n          <TabsContent value=\"my-stacks\">\n            {isLoading ? (\n              <div className=\"flex justify-center py-12\">\n                <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary\"></div>\n              </div>\n            ) : stacks.length === 0 ? (\n              <Card className=\"p-12 text-center\">\n                <Package className=\"w-16 h-16 mx-auto text-gray-400 dark:text-gray-600 mb-4\" />\n                <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-2\">No Supplement Stacks</h2>\n                <p className=\"text-gray-600 dark:text-gray-400 mb-6\">\n                  You haven't created any supplement stacks yet. Create your first stack to get started.\n                </p>\n                <Button className=\"flex items-center mx-auto\" onClick={handleCreateStack}>\n                  <Plus className=\"w-4 h-4 mr-2\" />\n                  Create Your First Stack\n                </Button>\n              </Card>\n            ) : (\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                {stacks.map(stack => (\n                  <Card key={stack.id} className=\"overflow-hidden\">\n                    <div className=\"p-5\">\n                      <div className=\"flex justify-between items-start mb-3\">\n                        <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white\">{stack.name}</h3>\n                        <div className=\"flex space-x-1\">\n                          <button \n                            className=\"p-1 text-gray-500 hover:text-primary rounded-full\"\n                            aria-label=\"Edit stack\"\n                          >\n                            <Edit className=\"w-4 h-4\" />\n                          </button>\n                          <button \n                            className=\"p-1 text-gray-500 hover:text-red-500 rounded-full\"\n                            aria-label=\"Delete stack\"\n                            onClick={() => handleDeleteStack(stack.id)}\n                          >\n                            <Trash2 className=\"w-4 h-4\" />\n                          </button>\n                        </div>\n                      </div>\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-4\">{stack.description}</p>\n                      \n                      <div className=\"space-y-2 mb-4\">\n                        {stack.components.map((supplement, index) => {\n                          return (\n                            <div key={index} className=\"flex justify-between text-sm\">\n                              <div>\n                                <span className=\"font-medium text-gray-900 dark:text-white\">{supplement.name}</span>\n                                <span className=\"text-gray-600 dark:text-gray-400 ml-2\">({supplement.dosage})</span>\n                              </div>\n                              <span className=\"text-gray-900 dark:text-white font-medium\">\n                                {typeof supplement.price === 'number' \n                                  ? supplement.price.toFixed(2) \n                                  : supplement.price} AED\n                              </span>\n                            </div>\n                          );\n                        })}\n                      </div>\n                      \n                      <div className=\"flex justify-between items-center pt-3 border-t border-gray-200 dark:border-gray-700\">\n                        <span className=\"font-bold text-lg text-primary dark:text-primary-light\">\n                          Total: {stack.total_price.toFixed(2)} AED\n                        </span>\n                        <div className=\"flex items-center\">\n                          <span className=\"text-sm text-gray-600 dark:text-gray-400 mr-2\">Active</span>\n                          <button\n                            className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2 ${\n                              stack.is_active ? 'bg-primary' : 'bg-gray-200 dark:bg-gray-700'\n                            }`}\n                            onClick={() => handleToggleActive(stack.id)}\n                          >\n                            <span\n                              className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\n                                stack.is_active ? 'translate-x-6' : 'translate-x-1'\n                              }`}\n                            />\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                    \n                    <div className=\"bg-gray-50 dark:bg-gray-800 p-4 border-t border-gray-200 dark:border-gray-700\">\n                      <div className=\"flex justify-between\">\n                        <Button variant=\"outline\" size=\"sm\">\n                          View Details\n                        </Button>\n                        <Button size=\"sm\">\n                          Order Now\n                        </Button>\n                      </div>\n                    </div>\n                  </Card>\n                ))}\n              </div>\n            )}\n          </TabsContent>\n\n          {/* Recommendations Tab */}\n          <TabsContent value=\"recommendations\">\n            <div className=\"bg-blue-50 dark:bg-blue-900/20 p-5 rounded-xl border border-blue-100 dark:border-blue-800 text-blue-700 dark:text-blue-300 flex items-start shadow-sm mb-6\">\n              <Info className=\"w-5 h-5 mr-4 flex-shrink-0 mt-0.5\" />\n              <p className=\"tracking-wide leading-relaxed\">\n                Based on your health profile, we recommend the following supplements to support your wellness goals.\n                Green tier supplements have the strongest scientific evidence, while yellow and orange tiers have \n                moderate or preliminary evidence respectively.\n              </p>\n            </div>\n\n            {isLoading ? (\n              <div className=\"flex justify-center py-12\">\n                <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary\"></div>\n              </div>\n            ) : error ? (\n              <Card className=\"p-6 text-center\">\n                <AlertCircle className=\"w-16 h-16 mx-auto text-red-500 mb-4\" />\n                <p className=\"text-red-500 mb-4\">{error}</p>\n                <Button onClick={fetchSupplements}>\n                  Try Again\n                </Button>\n              </Card>\n            ) : (\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                {supplements.slice(0, 6).map(supplement => (\n                  <Card key={supplement.id} className=\"overflow-hidden hover:shadow-xl transition-all duration-300\">\n                    <div className=\"relative h-48\">\n                      <img \n                        src={supplement.image_url || 'https://images.pexels.com/photos/3683074/pexels-photo-3683074.jpeg?auto=compress&cs=tinysrgb&w=300'} \n                        alt={supplement.name} \n                        className=\"w-full h-full object-cover\"\n                      />\n                      <div className=\"absolute top-2 right-2\">\n                        <span className={`inline-block px-2 py-1 rounded-full text-xs font-medium ${\n                          supplement.tier === 'green' \n                            ? 'bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-300' \n                            : supplement.tier === 'yellow'\n                              ? 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900/30 dark:text-yellow-300'\n                              : 'bg-orange-100 text-orange-800 dark:bg-orange-900/30 dark:text-orange-300'\n                        }`}>\n                          {supplement.tier.charAt(0).toUpperCase() + supplement.tier.slice(1)} Tier\n                        </span>\n                      </div>\n                    </div>\n                    \n                    <div className=\"p-4\">\n                      <h4 className=\"font-semibold text-lg mb-1 text-gray-900 dark:text-white\">\n                        {supplement.name}\n                      </h4>\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-2\">\n                        {supplement.brand || 'Biowell'}\n                      </p>\n                      <p className=\"text-sm text-gray-700 dark:text-gray-300 mb-4\">\n                        {supplement.use_case || supplement.description}\n                      </p>\n                      \n                      <div className=\"flex justify-between items-center\">\n                        <span className=\"font-bold text-gray-900 dark:text-white\">\n                          {supplement.price_aed?.toFixed(2)} AED\n                        </span>\n                        <div className=\"flex space-x-2\">\n                          <Button\n                            as={Link}\n                            to={`/supplements/${supplement.id}`}\n                            variant=\"outline\"\n                            size=\"sm\"\n                          >\n                            Details\n                          </Button>\n                          <Button\n                            size=\"sm\"\n                            onClick={() => handleAddToCart(supplement.id)}\n                            disabled={addingToCart === supplement.id}\n                          >\n                            {addingToCart === supplement.id ? 'Added!' : 'Add to Cart'}\n                          </Button>\n                        </div>\n                      </div>\n                    </div>\n                  </Card>\n                ))}\n              </div>\n            )}\n\n            <div className=\"mt-6 text-center\">\n              <Button as={Link} to=\"/recommendations\" variant=\"outline\">\n                View All Recommendations <ArrowRight className=\"w-4 h-4 ml-1.5\" />\n              </Button>\n            </div>\n          </TabsContent>\n        </Tabs>\n\n        {/* Stack Builder Modal */}\n        <StackBuilderModal\n          isOpen={showStackBuilder}\n          onClose={() => setShowStackBuilder(false)}\n          initialSupplementId={selectedSupplementId || undefined}\n          onSaveStack={handleSaveStack}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default SupplementsPage;",
      "tokens": 0,
      "firstFile": {
        "name": "src/pages/SupplementsPage.tsx",
        "start": 7,
        "end": 425,
        "startLoc": {
          "line": 7,
          "column": 24,
          "position": 137
        },
        "endLoc": {
          "line": 425,
          "column": 2,
          "position": 3976
        }
      },
      "secondFile": {
        "name": "src/components/layout/Navigation.tsx",
        "start": 7,
        "end": 425,
        "startLoc": {
          "line": 7,
          "column": 13,
          "position": 146
        },
        "endLoc": {
          "line": 425,
          "column": 2,
          "position": 3985
        }
      }
    },
    {
      "format": "tsx",
      "lines": 27,
      "fragment": ">\n            <Info className=\"w-5 h-5 mr-2\" />\n            {showTierInfo ? 'Hide' : 'Show'} Evidence Tier Information\n          </button>\n          \n          {showTierInfo && (\n            <div className=\"mt-4 p-4 bg-white dark:bg-gray-800 rounded-lg shadow\">\n              <h3 className=\"text-lg font-semibold mb-3 text-gray-900 dark:text-white\">Evidence Tier Definitions</h3>\n              <div className=\"space-y-3\">\n                <div className=\"flex items-start\">\n                  <span className=\"inline-block px-2 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-300 mr-3 mt-0.5\">Green</span>\n                  <p className=\"text-gray-700 dark:text-gray-300 text-sm\">Strong evidence – Supported by multiple high-quality human clinical trials and major scientific consensus (e.g., creatine, vitamin D).</p>\n                </div>\n                <div className=\"flex items-start\">\n                  <span className=\"inline-block px-2 py-1 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800 dark:bg-yellow-900/30 dark:text-yellow-300 mr-3 mt-0.5\">Yellow</span>\n                  <p className=\"text-gray-700 dark:text-gray-300 text-sm\">Moderate/emerging evidence – Some supporting studies, but either limited in scale, mixed results, or moderate scientific consensus (e.g., ashwagandha, beta-alanine).</p>\n                </div>\n                <div className=\"flex items-start\">\n                  <span className=\"inline-block px-2 py-1 rounded-full text-xs font-medium bg-orange-100 text-orange-800 dark:bg-orange-900/30 dark:text-orange-300 mr-3 mt-0.5\">Orange</span>\n                  <p className=\"text-gray-700 dark:text-gray-300 text-sm\">Limited/preliminary evidence – Mostly early-stage or animal/lab-based research, few or low-quality human trials, or anecdotal support (e.g., tongkat ali, shilajit).</p>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n\n        <Card",
      "tokens": 0,
      "firstFile": {
        "name": "src/pages/SupplementStorePage.tsx",
        "start": 172,
        "end": 198,
        "startLoc": {
          "line": 172,
          "column": 11,
          "position": 1551
        },
        "endLoc": {
          "line": 198,
          "column": 5,
          "position": 1955
        }
      },
      "secondFile": {
        "name": "src/components/layout/Navigation.tsx",
        "start": 186,
        "end": 212,
        "startLoc": {
          "line": 186,
          "column": 15,
          "position": 1799
        },
        "endLoc": {
          "line": 212,
          "column": 15,
          "position": 2203
        }
      }
    },
    {
      "format": "tsx",
      "lines": 13,
      "fragment": ";\n\n// Initialize Supabase client\nconst supabaseUrl = import.meta.env.VITE_SUPABASE_URL || '';\nconst supabaseAnonKey = import.meta.env.VITE_SUPABASE_ANON_KEY || '';\nconst supabase = createClient(supabaseUrl, supabaseAnonKey);\n\ninterface Supplement {\n  id: string;\n  name: string;\n  brand: string;\n  description: string;\n  detailed_description",
      "tokens": 0,
      "firstFile": {
        "name": "src/pages/SupplementDetailPage.tsx",
        "start": 6,
        "end": 18,
        "startLoc": {
          "line": 6,
          "column": 24,
          "position": 115
        },
        "endLoc": {
          "line": 18,
          "column": 21,
          "position": 209
        }
      },
      "secondFile": {
        "name": "src/components/supplements/StackBuilderModal.tsx",
        "start": 7,
        "end": 19,
        "startLoc": {
          "line": 7,
          "column": 14,
          "position": 107
        },
        "endLoc": {
          "line": 19,
          "column": 5,
          "position": 201
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": "</p>\n              </div>\n              <label className=\"relative inline-flex items-center cursor-pointer\">\n                <input type=\"checkbox\" className=\"sr-only peer\" defaultChecked />\n                <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-2 peer-focus:ring-primary rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-primary\"></div>\n              </label>\n            </div>\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"font-medium\">Reminder",
      "tokens": 0,
      "firstFile": {
        "name": "src/pages/SettingsPage.tsx",
        "start": 90,
        "end": 99,
        "startLoc": {
          "line": 90,
          "column": 7,
          "position": 875
        },
        "endLoc": {
          "line": 99,
          "column": 9,
          "position": 968
        }
      },
      "secondFile": {
        "name": "src/pages/SettingsPage.tsx",
        "start": 80,
        "end": 89,
        "startLoc": {
          "line": 80,
          "column": 8,
          "position": 754
        },
        "endLoc": {
          "line": 89,
          "column": 5,
          "position": 847
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": "</p>\n                </div>\n                <label className=\"relative inline-flex items-center cursor-pointer\">\n                  <input type=\"checkbox\" className=\"sr-only peer\" />\n                  <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-2 peer-focus:ring-primary rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-primary\"></div>\n                </label>\n              </div>\n              <",
      "tokens": 0,
      "firstFile": {
        "name": "src/pages/SettingsPage.tsx",
        "start": 124,
        "end": 131,
        "startLoc": {
          "line": 124,
          "column": 9,
          "position": 1240
        },
        "endLoc": {
          "line": 131,
          "column": 2,
          "position": 1306
        }
      },
      "secondFile": {
        "name": "src/pages/SettingsPage.tsx",
        "start": 100,
        "end": 107,
        "startLoc": {
          "line": 100,
          "column": 9,
          "position": 996
        },
        "endLoc": {
          "line": 107,
          "column": 3,
          "position": 1062
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": "</p>\n                </div>\n                <label className=\"relative inline-flex items-center cursor-pointer\">\n                  <input type=\"checkbox\" className=\"sr-only peer\" defaultChecked />\n                  <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-2 peer-focus:ring-primary rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-primary\"></div>\n                </label>\n              </div>\n            </",
      "tokens": 0,
      "firstFile": {
        "name": "src/pages/SettingsPage.tsx",
        "start": 134,
        "end": 141,
        "startLoc": {
          "line": 134,
          "column": 10,
          "position": 1357
        },
        "endLoc": {
          "line": 141,
          "column": 3,
          "position": 1425
        }
      },
      "secondFile": {
        "name": "src/pages/SettingsPage.tsx",
        "start": 80,
        "end": 87,
        "startLoc": {
          "line": 80,
          "column": 8,
          "position": 754
        },
        "endLoc": {
          "line": 87,
          "column": 2,
          "position": 822
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": ";\nimport { Button } from '../components/ui/Button';\nimport { createClient } from '@supabase/supabase-js';\n\n// Initialize Supabase client\nconst supabaseUrl = import.meta.env.VITE_SUPABASE_URL || '';\nconst supabaseAnonKey = import.meta.env.VITE_SUPABASE_ANON_KEY || '';\nconst supabase = createClient(supabaseUrl, supabaseAnonKey);\n\nconst",
      "tokens": 0,
      "firstFile": {
        "name": "src/pages/RecipeDetailPage.tsx",
        "start": 5,
        "end": 14,
        "startLoc": {
          "line": 5,
          "column": 15,
          "position": 74
        },
        "endLoc": {
          "line": 14,
          "column": 6,
          "position": 159
        }
      },
      "secondFile": {
        "name": "src/pages/SettingsPage.tsx",
        "start": 4,
        "end": 13,
        "startLoc": {
          "line": 4,
          "column": 24,
          "position": 68
        },
        "endLoc": {
          "line": 13,
          "column": 10,
          "position": 153
        }
      }
    },
    {
      "format": "tsx",
      "lines": 15,
      "fragment": ");\n\n  useEffect(() => {\n    // Get actual user ID if logged in\n    const getUser = async () => {\n      const { data } = await supabase.auth.getUser();\n      if (data.user) {\n        setUserId(data.user.id);\n      }\n    };\n    \n    getUser();\n  }, []);\n\n  useEffect",
      "tokens": 0,
      "firstFile": {
        "name": "src/pages/RecipeDetailPage.tsx",
        "start": 22,
        "end": 36,
        "startLoc": {
          "line": 22,
          "column": 2,
          "position": 341
        },
        "endLoc": {
          "line": 36,
          "column": 10,
          "position": 444
        }
      },
      "secondFile": {
        "name": "src/components/nutrition/SavedRecipesGrid.tsx",
        "start": 25,
        "end": 39,
        "startLoc": {
          "line": 25,
          "column": 6,
          "position": 436
        },
        "endLoc": {
          "line": 39,
          "column": 6,
          "position": 540
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": ";\nimport { Card } from '../components/ui/Card';\nimport { Button } from '../components/ui/Button';\nimport { createClient } from '@supabase/supabase-js';\n\n// Initialize Supabase client\nconst supabaseUrl = import.meta.env.VITE_SUPABASE_URL || '';\nconst supabaseAnonKey = import.meta.env.VITE_SUPABASE_ANON_KEY || '';\nconst supabase = createClient(supabaseUrl, supabaseAnonKey);\n\nconst ProfileExportPage",
      "tokens": 0,
      "firstFile": {
        "name": "src/pages/ProfileExportPage.tsx",
        "start": 2,
        "end": 12,
        "startLoc": {
          "line": 2,
          "column": 15,
          "position": 42
        },
        "endLoc": {
          "line": 12,
          "column": 18,
          "position": 142
        }
      },
      "secondFile": {
        "name": "src/pages/SettingsPage.tsx",
        "start": 3,
        "end": 14,
        "startLoc": {
          "line": 3,
          "column": 39,
          "position": 55
        },
        "endLoc": {
          "line": 14,
          "column": 17,
          "position": 161
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": "});\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = filename;\n    link.click();\n    URL.revokeObjectURL(url);\n  };\n  \n  return",
      "tokens": 0,
      "firstFile": {
        "name": "src/pages/ProfileExportPage.tsx",
        "start": 151,
        "end": 160,
        "startLoc": {
          "line": 151,
          "column": 2,
          "position": 1502
        },
        "endLoc": {
          "line": 160,
          "column": 7,
          "position": 1580
        }
      },
      "secondFile": {
        "name": "src/pages/ProfileExportPage.tsx",
        "start": 115,
        "end": 124,
        "startLoc": {
          "line": 115,
          "column": 2,
          "position": 1161
        },
        "endLoc": {
          "line": 124,
          "column": 55,
          "position": 1239
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": ".map((feature, index) => (\n                  <div key={index} className=\"flex items-start\">\n                    <Check className=\"w-5 h-5 text-green-500 mr-2 flex-shrink-0 mt-0.5\" />\n                    <span className=\"text-gray-700 dark:text-gray-300\">{feature}</span>\n                  </div>\n                ))}\n              </div>\n\n              <Link to=\"/signup\" className=\"w-full\">\n                <Button className",
      "tokens": 0,
      "firstFile": {
        "name": "src/pages/PricingPage.tsx",
        "start": 121,
        "end": 130,
        "startLoc": {
          "line": 121,
          "column": 8,
          "position": 1031
        },
        "endLoc": {
          "line": 130,
          "column": 10,
          "position": 1128
        }
      },
      "secondFile": {
        "name": "src/pages/PricingPage.tsx",
        "start": 81,
        "end": 90,
        "startLoc": {
          "line": 81,
          "column": 5,
          "position": 648
        },
        "endLoc": {
          "line": 90,
          "column": 8,
          "position": 745
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": ".map((feature, index) => (\n                  <div key={index} className=\"flex items-start\">\n                    <Check className=\"w-5 h-5 text-green-500 mr-2 flex-shrink-0 mt-0.5\" />\n                    <span className=\"text-gray-700 dark:text-gray-300\">{feature}</span>\n                  </div>\n                ))}\n              </div>\n\n              <Link to=\"/contact",
      "tokens": 0,
      "firstFile": {
        "name": "src/pages/PricingPage.tsx",
        "start": 154,
        "end": 162,
        "startLoc": {
          "line": 154,
          "column": 11,
          "position": 1355
        },
        "endLoc": {
          "line": 162,
          "column": 9,
          "position": 1438
        }
      },
      "secondFile": {
        "name": "src/pages/PricingPage.tsx",
        "start": 81,
        "end": 89,
        "startLoc": {
          "line": 81,
          "column": 5,
          "position": 648
        },
        "endLoc": {
          "line": 89,
          "column": 8,
          "position": 731
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": ">\n                <div className=\"flex items-start\">\n                  <div className=\"h-6 w-6 rounded-full bg-green-100 dark:bg-green-900/30 flex items-center justify-center text-green-600 dark:text-green-400 mr-3\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                      <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n                    </svg>\n                  </div>\n                  <span className=\"text-gray-700 dark:text-gray-300\">Personalized",
      "tokens": 0,
      "firstFile": {
        "name": "src/pages/ParticipationSelectionPage.tsx",
        "start": 45,
        "end": 52,
        "startLoc": {
          "line": 45,
          "column": 4,
          "position": 497
        },
        "endLoc": {
          "line": 52,
          "column": 13,
          "position": 594
        }
      },
      "secondFile": {
        "name": "src/pages/ParticipationSelectionPage.tsx",
        "start": 37,
        "end": 44,
        "startLoc": {
          "line": 37,
          "column": 2,
          "position": 384
        },
        "endLoc": {
          "line": 44,
          "column": 9,
          "position": 481
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": "</span>\n                </div>\n                <div className=\"flex items-start\">\n                  <div className=\"h-6 w-6 rounded-full bg-green-100 dark:bg-green-900/30 flex items-center justify-center text-green-600 dark:text-green-400 mr-3\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                      <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n                    </svg>\n                  </div>\n                  <span className=\"text-gray-700 dark:text-gray-300\">AI",
      "tokens": 0,
      "firstFile": {
        "name": "src/pages/ParticipationSelectionPage.tsx",
        "start": 52,
        "end": 60,
        "startLoc": {
          "line": 52,
          "column": 16,
          "position": 599
        },
        "endLoc": {
          "line": 60,
          "column": 3,
          "position": 703
        }
      },
      "secondFile": {
        "name": "src/pages/ParticipationSelectionPage.tsx",
        "start": 44,
        "end": 44,
        "startLoc": {
          "line": 44,
          "column": 10,
          "position": 490
        },
        "endLoc": {
          "line": 44,
          "column": 9,
          "position": 481
        }
      }
    },
    {
      "format": "tsx",
      "lines": 6,
      "fragment": "\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                      <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n                    </svg>\n                  </div>\n                  <span className=\"text-gray-700 dark:text-gray-300\">Synchronized",
      "tokens": 0,
      "firstFile": {
        "name": "src/pages/ParticipationSelectionPage.tsx",
        "start": 88,
        "end": 93,
        "startLoc": {
          "line": 88,
          "column": 132,
          "position": 964
        },
        "endLoc": {
          "line": 93,
          "column": 13,
          "position": 1040
        }
      },
      "secondFile": {
        "name": "src/pages/ParticipationSelectionPage.tsx",
        "start": 39,
        "end": 44,
        "startLoc": {
          "line": 39,
          "column": 128,
          "position": 405
        },
        "endLoc": {
          "line": 44,
          "column": 9,
          "position": 481
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": ">\n                <div className=\"flex items-start\">\n                  <div className=\"h-6 w-6 rounded-full bg-purple-100 dark:bg-purple-900/30 flex items-center justify-center text-purple-600 dark:text-purple-400 mr-3\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                      <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n                    </svg>\n                  </div>\n                  <span className=\"text-gray-700 dark:text-gray-300\">Partner",
      "tokens": 0,
      "firstFile": {
        "name": "src/pages/ParticipationSelectionPage.tsx",
        "start": 94,
        "end": 101,
        "startLoc": {
          "line": 94,
          "column": 4,
          "position": 1052
        },
        "endLoc": {
          "line": 101,
          "column": 8,
          "position": 1149
        }
      },
      "secondFile": {
        "name": "src/pages/ParticipationSelectionPage.tsx",
        "start": 86,
        "end": 44,
        "startLoc": {
          "line": 86,
          "column": 2,
          "position": 943
        },
        "endLoc": {
          "line": 44,
          "column": 9,
          "position": 481
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": "</span>\n                </div>\n                <div className=\"flex items-start\">\n                  <div className=\"h-6 w-6 rounded-full bg-purple-100 dark:bg-purple-900/30 flex items-center justify-center text-purple-600 dark:text-purple-400 mr-3\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                      <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n                    </svg>\n                  </div>\n                  <span className=\"text-gray-700 dark:text-gray-300\">Ovulation",
      "tokens": 0,
      "firstFile": {
        "name": "src/pages/ParticipationSelectionPage.tsx",
        "start": 101,
        "end": 109,
        "startLoc": {
          "line": 101,
          "column": 16,
          "position": 1154
        },
        "endLoc": {
          "line": 109,
          "column": 10,
          "position": 1258
        }
      },
      "secondFile": {
        "name": "src/pages/ParticipationSelectionPage.tsx",
        "start": 93,
        "end": 44,
        "startLoc": {
          "line": 93,
          "column": 9,
          "position": 1045
        },
        "endLoc": {
          "line": 44,
          "column": 9,
          "position": 481
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": "</span>\n                </div>\n                <div className=\"flex items-start\">\n                  <div className=\"h-6 w-6 rounded-full bg-purple-100 dark:bg-purple-900/30 flex items-center justify-center text-purple-600 dark:text-purple-400 mr-3\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                      <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n                    </svg>\n                  </div>\n                  <span className=\"text-gray-700 dark:text-gray-300\">Coordinated",
      "tokens": 0,
      "firstFile": {
        "name": "src/pages/ParticipationSelectionPage.tsx",
        "start": 109,
        "end": 117,
        "startLoc": {
          "line": 109,
          "column": 14,
          "position": 1267
        },
        "endLoc": {
          "line": 117,
          "column": 12,
          "position": 1371
        }
      },
      "secondFile": {
        "name": "src/pages/ParticipationSelectionPage.tsx",
        "start": 93,
        "end": 44,
        "startLoc": {
          "line": 93,
          "column": 9,
          "position": 1045
        },
        "endLoc": {
          "line": 44,
          "column": 9,
          "position": 481
        }
      }
    },
    {
      "format": "tsx",
      "lines": 14,
      "fragment": ">\n\n        {isLoading ? (\n          <div className=\"flex justify-center py-12\">\n            <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary\"></div>\n          </div>\n        ) : stacks.length === 0 ? (\n          <Card className=\"p-12 text-center\">\n            <Package className=\"w-16 h-16 mx-auto text-gray-400 dark:text-gray-600 mb-4\" />\n            <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-2\">No Supplement Stacks</h2>\n            <p className=\"text-gray-600 dark:text-gray-400 mb-6\">\n              You haven't created any supplement stacks yet. Create your first stack to get started.\n            </p>\n            <Button className=\"flex items-center mx-auto\">",
      "tokens": 0,
      "firstFile": {
        "name": "src/pages/MyStacksPage.tsx",
        "start": 125,
        "end": 138,
        "startLoc": {
          "line": 125,
          "column": 4,
          "position": 1259
        },
        "endLoc": {
          "line": 138,
          "column": 2,
          "position": 1415
        }
      },
      "secondFile": {
        "name": "src/components/layout/Navigation.tsx",
        "start": 222,
        "end": 234,
        "startLoc": {
          "line": 222,
          "column": 2,
          "position": 2257
        },
        "endLoc": {
          "line": 234,
          "column": 2,
          "position": 2412
        }
      }
    },
    {
      "format": "tsx",
      "lines": 15,
      "fragment": ">\n              <Plus className=\"w-4 h-4 mr-2\" />\n              Create Your First Stack\n            </Button>\n          </Card>\n        ) : (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {stacks.map(stack => (\n              <Card key={stack.id} className=\"overflow-hidden\">\n                <div className=\"p-5\">\n                  <div className=\"flex justify-between items-start mb-3\">\n                    <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white\">{stack.name}</h3>\n                    <div className=\"flex space-x-1\">\n                      <button \n                        ",
      "tokens": 0,
      "firstFile": {
        "name": "src/pages/MyStacksPage.tsx",
        "start": 138,
        "end": 152,
        "startLoc": {
          "line": 138,
          "column": 2,
          "position": 1415
        },
        "endLoc": {
          "line": 152,
          "column": 25,
          "position": 1552
        }
      },
      "secondFile": {
        "name": "src/components/layout/Navigation.tsx",
        "start": 234,
        "end": 248,
        "startLoc": {
          "line": 234,
          "column": 2,
          "position": 2418
        },
        "endLoc": {
          "line": 248,
          "column": 29,
          "position": 2555
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": ".map((supplement, index) => {\n                      return (\n                        <div key={index} className=\"flex justify-between text-sm\">\n                          <div>\n                            <span className=\"font-medium text-gray-900 dark:text-white\">{supplement.name}</span>\n                            <span className=\"text-gray-600 dark:text-gray-400 ml-2\">({supplement.dosage})</span>\n                          </div>\n                          <span className=\"text-gray-900 dark:text-white font-medium\">{supplement",
      "tokens": 0,
      "firstFile": {
        "name": "src/pages/MyStacksPage.tsx",
        "start": 169,
        "end": 176,
        "startLoc": {
          "line": 169,
          "column": 12,
          "position": 1682
        },
        "endLoc": {
          "line": 176,
          "column": 11,
          "position": 1779
        }
      },
      "secondFile": {
        "name": "src/components/layout/Navigation.tsx",
        "start": 265,
        "end": 273,
        "startLoc": {
          "line": 265,
          "column": 11,
          "position": 2685
        },
        "endLoc": {
          "line": 273,
          "column": 7,
          "position": 2784
        }
      }
    },
    {
      "format": "tsx",
      "lines": 22,
      "fragment": "/>\n                      </button>\n                    </div>\n                  </div>\n                </div>\n                \n                <div className=\"bg-gray-50 dark:bg-gray-800 p-4 border-t border-gray-200 dark:border-gray-700\">\n                  <div className=\"flex justify-between\">\n                    <Button variant=\"outline\" size=\"sm\">\n                      View Details\n                    </Button>\n                    <Button size=\"sm\">\n                      Order Now\n                    </Button>\n                  </div>\n                </div>\n              </Card>\n            ))}\n          </div>\n        )}\n        \n        {",
      "tokens": 0,
      "firstFile": {
        "name": "src/pages/MyStacksPage.tsx",
        "start": 196,
        "end": 217,
        "startLoc": {
          "line": 196,
          "column": 25,
          "position": 1947
        },
        "endLoc": {
          "line": 217,
          "column": 2,
          "position": 2073
        }
      },
      "secondFile": {
        "name": "src/components/layout/Navigation.tsx",
        "start": 298,
        "end": 318,
        "startLoc": {
          "line": 298,
          "column": 29,
          "position": 2980
        },
        "endLoc": {
          "line": 318,
          "column": 3,
          "position": 3104
        }
      }
    },
    {
      "format": "tsx",
      "lines": 6,
      "fragment": "\">\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                        <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n                      </svg>\n                    </div>\n                  )",
      "tokens": 0,
      "firstFile": {
        "name": "src/pages/MetabolismPage.tsx",
        "start": 462,
        "end": 467,
        "startLoc": {
          "line": 462,
          "column": 39,
          "position": 3636
        },
        "endLoc": {
          "line": 467,
          "column": 2,
          "position": 3703
        }
      },
      "secondFile": {
        "name": "src/pages/ParticipationSelectionPage.tsx",
        "start": 39,
        "end": 44,
        "startLoc": {
          "line": 39,
          "column": 128,
          "position": 405
        },
        "endLoc": {
          "line": 44,
          "column": 2,
          "position": 472
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": "\">\n                                  <p className=\"text-xs text-gray-500 dark:text-gray-400 capitalize\">{key} - {subKey}</p>\n                                  <p className=\"font-semibold\">{subValue}</p>\n                                </div>\n                              ));\n                            }\n                            \n                            return (\n                              <div key={key} className=\"p-2 border border-gray-200 dark:border-gray-700 rounded",
      "tokens": 0,
      "firstFile": {
        "name": "src/pages/LabResultsPage.tsx",
        "start": 484,
        "end": 492,
        "startLoc": {
          "line": 484,
          "column": 56,
          "position": 4595
        },
        "endLoc": {
          "line": 492,
          "column": 56,
          "position": 4671
        }
      },
      "secondFile": {
        "name": "src/pages/LabResultsPage.tsx",
        "start": 324,
        "end": 334,
        "startLoc": {
          "line": 324,
          "column": 43,
          "position": 3137
        },
        "endLoc": {
          "line": 334,
          "column": 43,
          "position": 3217
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": ");\n          }\n          \n          return (\n            <div key={key} className=\"p-3 bg-gray-50 dark:bg-gray-800 rounded-lg\">\n              <p className=\"text-xs text-gray-500 dark:text-gray-400 capitalize\">{key}</p>\n              <p className=\"font-semibold\">{value}</p>\n            </div>\n          );\n        })}\n      </",
      "tokens": 0,
      "firstFile": {
        "name": "src/pages/LabResultDetailPage.tsx",
        "start": 103,
        "end": 113,
        "startLoc": {
          "line": 103,
          "column": 13,
          "position": 1076
        },
        "endLoc": {
          "line": 113,
          "column": 3,
          "position": 1155
        }
      },
      "secondFile": {
        "name": "src/pages/LabResultsPage.tsx",
        "start": 330,
        "end": 340,
        "startLoc": {
          "line": 330,
          "column": 2,
          "position": 3191
        },
        "endLoc": {
          "line": 340,
          "column": 2,
          "position": 3270
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": "\">\n                      <Calendar className=\"h-4 w-4 mr-1\" />\n                      {new Date(result.testDate).toLocaleDateString()}\n                      {result.testCategory && (\n                        <span className=\"ml-4 px-2 py-0.5 bg-blue-100 dark:bg-blue-900/30 text-blue-800 dark:text-blue-300 rounded-full text-xs\">\n                          {result.testCategory}\n                        </span>\n                      )}\n                    </div>\n                  </div>\n                  <div>",
      "tokens": 0,
      "firstFile": {
        "name": "src/pages/LabResultDetailPage.tsx",
        "start": 292,
        "end": 302,
        "startLoc": {
          "line": 292,
          "column": 64,
          "position": 2580
        },
        "endLoc": {
          "line": 302,
          "column": 2,
          "position": 2661
        }
      },
      "secondFile": {
        "name": "src/pages/LabResultsPage.tsx",
        "start": 291,
        "end": 301,
        "startLoc": {
          "line": 291,
          "column": 64,
          "position": 2823
        },
        "endLoc": {
          "line": 301,
          "column": 2,
          "position": 2904
        }
      }
    },
    {
      "format": "javascript",
      "lines": 25,
      "fragment": "} />\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-20 bg-white dark:bg-black border-t border-gray-200 dark:border-gray-800 text-gray-900 dark:text-white transition-all duration-300 relative overflow-hidden\">\n        {/* Animated background elements */}\n        \n        <div className=\"mobile-container\">\n          <motion.h2 \n            className=\"text-3xl sm:text-4xl md:text-5xl font-bold mb-7 sm:mb-9 tracking-tight text-left leading-tight\"\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n            transition={{ duration: 0.6 }}\n          >\n            <span className=\"bg-clip-text text-transparent bg-gradient-to-r from-blue-700 to-blue-400 dark:from-blue-500 dark:to-blue-300\">\n              Ready to optimize your health?\n            </span>\n          </motion.h2>\n          <motion.p \n            className=\"text-xl sm:text-2xl mb-12 sm:mb-14 text-gray-700 dark:text-gray-300 max-w-3xl tracking-wide text-left leading-relaxed\"\n            initial={{ opacity: 0 }}\n            whileInView={{ opacity: 1 }}\n            viewport={{ once: true }}\n            transition={{ duration",
      "tokens": 0,
      "firstFile": {
        "name": "src/pages/HomePage.tsx",
        "start": 179,
        "end": 203,
        "startLoc": {
          "line": 179,
          "column": 6,
          "position": 1449
        },
        "endLoc": {
          "line": 203,
          "column": 10,
          "position": 1646
        }
      },
      "secondFile": {
        "name": "src/pages/HomePage.tsx",
        "start": 64,
        "end": 122,
        "startLoc": {
          "line": 64,
          "column": 2,
          "position": 551
        },
        "endLoc": {
          "line": 122,
          "column": 17,
          "position": 1020
        }
      }
    },
    {
      "format": "javascript",
      "lines": 9,
      "fragment": " }}\n          >\n            Join thousands of users who have transformed their wellness journey\n          </motion.p>\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n            transition={{ duration: 0.6,",
      "tokens": 0,
      "firstFile": {
        "name": "src/pages/HomePage.tsx",
        "start": 203,
        "end": 211,
        "startLoc": {
          "line": 203,
          "column": 4,
          "position": 1655
        },
        "endLoc": {
          "line": 211,
          "column": 2,
          "position": 1745
        }
      },
      "secondFile": {
        "name": "src/pages/HomePage.tsx",
        "start": 64,
        "end": 105,
        "startLoc": {
          "line": 64,
          "column": 5,
          "position": 549
        },
        "endLoc": {
          "line": 105,
          "column": 2,
          "position": 889
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": "} from 'lucide-react';\nimport { createClient } from '@supabase/supabase-js';\nimport { Button } from '../components/ui/Button';\n\n// Initialize Supabase client\nconst supabaseUrl = import.meta.env.VITE_SUPABASE_URL || '';\nconst supabaseAnonKey = import.meta.env.VITE_SUPABASE_ANON_KEY || '';\nconst supabase = createClient(supabaseUrl, supabaseAnonKey);\n\nconst ForgotPasswordPage",
      "tokens": 0,
      "firstFile": {
        "name": "src/pages/ForgotPasswordPage.tsx",
        "start": 3,
        "end": 12,
        "startLoc": {
          "line": 3,
          "column": 2,
          "position": 41
        },
        "endLoc": {
          "line": 12,
          "column": 19,
          "position": 133
        }
      },
      "secondFile": {
        "name": "src/pages/ResetPasswordPage.tsx",
        "start": 3,
        "end": 12,
        "startLoc": {
          "line": 3,
          "column": 2,
          "position": 50
        },
        "endLoc": {
          "line": 12,
          "column": 18,
          "position": 142
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": "const getUser = async () => {\n      const { data } = await supabase.auth.getUser();\n      if (data.user) {\n        setUserId(data.user.id);\n      }\n    };\n    \n    getUser();\n  }, []);\n\n  return",
      "tokens": 0,
      "firstFile": {
        "name": "src/pages/FitnessPage.tsx",
        "start": 20,
        "end": 30,
        "startLoc": {
          "line": 20,
          "column": 5,
          "position": 209
        },
        "endLoc": {
          "line": 30,
          "column": 7,
          "position": 294
        }
      },
      "secondFile": {
        "name": "src/components/nutrition/SavedRecipesGrid.tsx",
        "start": 29,
        "end": 39,
        "startLoc": {
          "line": 29,
          "column": 5,
          "position": 455
        },
        "endLoc": {
          "line": 39,
          "column": 6,
          "position": 540
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": ", Loader2 } from 'lucide-react';\nimport { Card } from '../components/ui/Card';\nimport { Button } from '../components/ui/Button';\n\n// Initialize Supabase client\nconst supabaseUrl = import.meta.env.VITE_SUPABASE_URL || '';\nconst supabaseAnonKey = import.meta.env.VITE_SUPABASE_ANON_KEY || '';\nconst supabase = createClient(supabaseUrl, supabaseAnonKey);\n\ninterface Partner",
      "tokens": 0,
      "firstFile": {
        "name": "src/pages/FertilityPartnerPage.tsx",
        "start": 3,
        "end": 12,
        "startLoc": {
          "line": 3,
          "column": 6,
          "position": 67
        },
        "endLoc": {
          "line": 12,
          "column": 8,
          "position": 163
        }
      },
      "secondFile": {
        "name": "src/pages/ProfilePage.tsx",
        "start": 3,
        "end": 12,
        "startLoc": {
          "line": 3,
          "column": 5,
          "position": 52
        },
        "endLoc": {
          "line": 12,
          "column": 12,
          "position": 148
        }
      }
    },
    {
      "format": "tsx",
      "lines": 6,
      "fragment": "\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-3 w-3\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                      <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n                    </svg>\n                  </span>\n                  <span className=\"text-gray-700 dark:text-gray-300 text-sm\">Sperm",
      "tokens": 0,
      "firstFile": {
        "name": "src/pages/FertilityPartnerPage.tsx",
        "start": 447,
        "end": 452,
        "startLoc": {
          "line": 447,
          "column": 149,
          "position": 4336
        },
        "endLoc": {
          "line": 452,
          "column": 6,
          "position": 4412
        }
      },
      "secondFile": {
        "name": "src/pages/MetabolismPage.tsx",
        "start": 499,
        "end": 504,
        "startLoc": {
          "line": 499,
          "column": 147,
          "position": 4046
        },
        "endLoc": {
          "line": 504,
          "column": 2,
          "position": 4122
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": ">\n                <li className=\"flex items-start\">\n                  <span className=\"h-5 w-5 rounded-full bg-green-100 dark:bg-green-900/30 flex items-center justify-center text-green-600 dark:text-green-400 mr-2 mt-0.5 flex-shrink-0\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-3 w-3\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                      <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n                    </svg>\n                  </span>\n                  <span className=\"text-gray-700 dark:text-gray-300 text-sm\">Consider",
      "tokens": 0,
      "firstFile": {
        "name": "src/pages/FertilityPartnerPage.tsx",
        "start": 453,
        "end": 460,
        "startLoc": {
          "line": 453,
          "column": 3,
          "position": 4445
        },
        "endLoc": {
          "line": 460,
          "column": 9,
          "position": 4542
        }
      },
      "secondFile": {
        "name": "src/pages/FertilityPartnerPage.tsx",
        "start": 445,
        "end": 504,
        "startLoc": {
          "line": 445,
          "column": 2,
          "position": 4315
        },
        "endLoc": {
          "line": 504,
          "column": 2,
          "position": 4122
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": ".</span>\n                </li>\n                <li className=\"flex items-start\">\n                  <span className=\"h-5 w-5 rounded-full bg-green-100 dark:bg-green-900/30 flex items-center justify-center text-green-600 dark:text-green-400 mr-2 mt-0.5 flex-shrink-0\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-3 w-3\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                      <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n                    </svg>\n                  </span>\n                  <span className=\"text-gray-700 dark:text-gray-300 text-sm\">Avoid",
      "tokens": 0,
      "firstFile": {
        "name": "src/pages/FertilityPartnerPage.tsx",
        "start": 460,
        "end": 468,
        "startLoc": {
          "line": 460,
          "column": 2,
          "position": 4575
        },
        "endLoc": {
          "line": 468,
          "column": 6,
          "position": 4680
        }
      },
      "secondFile": {
        "name": "src/pages/FertilityPartnerPage.tsx",
        "start": 452,
        "end": 504,
        "startLoc": {
          "line": 452,
          "column": 11,
          "position": 4437
        },
        "endLoc": {
          "line": 504,
          "column": 2,
          "position": 4122
        }
      }
    },
    {
      "format": "javascript",
      "lines": 18,
      "fragment": "}\n                aria-haspopup=\"true\"\n              >\n                <Sun className=\"w-4 h-4 mr-2\" />\n                Log Light\n              </Button>\n              \n              {showLightOptions && (\n                <motion.div \n                  className=\"absolute bottom-full mb-2 left-0 right-0 bg-white dark:bg-gray-800 rounded-lg shadow-lg border border-gray-200 dark:border-gray-700 overflow-hidden z-20\"\n                  initial={{ opacity: 0, y: 10 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  exit={{ opacity: 0, y: 10 }}\n                  transition={{ duration: 0.2 }}\n                >\n                  <button \n                    className=\"w-full py-3 px-4 text-left hover:bg-gray-100 dark:hover:bg-gray-700 flex items-center min-w-[48px] min-h-[48px]\"\n                    onClick={() => logEvent('light_exposure'",
      "tokens": 0,
      "firstFile": {
        "name": "src/pages/BioClockPage.tsx",
        "start": 548,
        "end": 565,
        "startLoc": {
          "line": 548,
          "column": 17,
          "position": 5079
        },
        "endLoc": {
          "line": 565,
          "column": 17,
          "position": 5216
        }
      },
      "secondFile": {
        "name": "src/pages/BioClockPage.tsx",
        "start": 491,
        "end": 508,
        "startLoc": {
          "line": 491,
          "column": 16,
          "position": 4658
        },
        "endLoc": {
          "line": 508,
          "column": 7,
          "position": 4795
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": "</div>\n        ) : error ? (\n          <Card className=\"p-6 text-center\">\n            <AlertCircle className=\"w-12 h-12 text-red-500 mx-auto mb-4\" />\n            <p className=\"text-red-500 mb-4\">{error}</p>\n            <Button onClick={fetchEvents}>Try Again</Button>\n          </Card>\n        ) : (\n          <",
      "tokens": 0,
      "firstFile": {
        "name": "src/pages/BioClockPage.tsx",
        "start": 370,
        "end": 378,
        "startLoc": {
          "line": 370,
          "column": 11,
          "position": 3624
        },
        "endLoc": {
          "line": 378,
          "column": 2,
          "position": 3709
        }
      },
      "secondFile": {
        "name": "src/pages/SupplementStorePage.tsx",
        "start": 269,
        "end": 279,
        "startLoc": {
          "line": 269,
          "column": 11,
          "position": 2578
        },
        "endLoc": {
          "line": 279,
          "column": 2,
          "position": 2677
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "={{ opacity: 0, y: -20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5 }}\n            >\n              About Biowell\n            </motion.h1>\n            <motion.p \n              className=\"text-lg sm:text-xl md:text-2xl mb-8 text-white/90\"\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              transition={{ delay",
      "tokens": 0,
      "firstFile": {
        "name": "src/pages/AboutPage.tsx",
        "start": 84,
        "end": 94,
        "startLoc": {
          "line": 84,
          "column": 8,
          "position": 619
        },
        "endLoc": {
          "line": 94,
          "column": 7,
          "position": 715
        }
      },
      "secondFile": {
        "name": "src/pages/PricingPage.tsx",
        "start": 44,
        "end": 54,
        "startLoc": {
          "line": 44,
          "column": 8,
          "position": 271
        },
        "endLoc": {
          "line": 54,
          "column": 10,
          "position": 373
        }
      }
    },
    {
      "format": "javascript",
      "lines": 61,
      "fragment": " }}\n            >\n              Transforming wellness through personalized, science-driven guidance\n            </motion.p>\n          </div>\n        </div>\n      </section>\n\n      {/* Our Mission */}\n      <section className=\"py-16 bg-white dark:bg-gray-900 relative overflow-hidden\">\n        {/* Background accent */}\n        <div className=\"absolute top-0 right-0 w-1/4 h-1/4 bg-gradient-to-bl from-primary/5 to-tertiary/5 rounded-bl-full\"></div>\n        <div className=\"absolute bottom-0 left-0 w-1/5 h-1/5 bg-gradient-to-tr from-secondary/5 to-tertiary/5 rounded-tr-full\"></div>\n        \n        <div className=\"mobile-container\">\n          <div className=\"max-w-3xl mx-auto\">\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              viewport={{ once: true }}\n              transition={{ duration: 0.6 }}\n            >\n              <h2 className=\"text-2xl sm:text-3xl font-bold text-gray-900 dark:text-white mb-6 text-center\">Our Mission</h2>\n              <div className=\"prose prose-lg dark:prose-invert mx-auto\">\n                <p>\n                  At Biowell, we believe that everyone deserves access to personalized health guidance. \n                  Our mission is to democratize wellness by making science-backed supplement \n                  recommendations accessible to everyone, regardless of their background or \n                  health knowledge.\n                </p>\n                <p>\n                  We combine cutting-edge AI technology with rigorous scientific research to provide \n                  you with personalized recommendations that evolve with your health journey. Our \n                  team of experts continuously reviews the latest studies to ensure our guidance \n                  remains at the forefront of nutritional science.\n                </p>\n              </div>\n            </motion.div>\n          </div>\n        </div>\n      </section>\n\n      {/* Core Values */}\n      <section className=\"py-16 bg-gray-50 dark:bg-gray-800 relative overflow-hidden\">\n        {/* Background accent */}\n        <div className=\"absolute top-0 left-0 w-1/3 h-1/3 bg-gradient-to-br from-tertiary/5 to-secondary/5 rounded-br-full\"></div>\n        <div className=\"absolute bottom-0 right-0 w-1/4 h-1/4 bg-gradient-to-tl from-primary/5 to-tertiary/5 rounded-tl-full\"></div>\n        \n        <div className=\"mobile-container\">\n          <motion.h2 \n            className=\"text-2xl sm:text-3xl font-bold text-gray-900 dark:text-white mb-12 text-center\"\n            initial={{ opacity: 0 }}\n            whileInView={{ opacity: 1 }}\n            viewport={{ once: true }}\n          >\n            Our Core Values\n          </motion.h2>\n          \n          <motion.div \n            className=\"grid sm:grid-cols-2 lg:grid-cols-4 gap-6 sm:gap-8\"\n            variants={containerVariants",
      "tokens": 0,
      "firstFile": {
        "name": "src/pages/AboutPage.tsx",
        "start": 94,
        "end": 154,
        "startLoc": {
          "line": 94,
          "column": 4,
          "position": 724
        },
        "endLoc": {
          "line": 154,
          "column": 18,
          "position": 1287
        }
      },
      "secondFile": {
        "name": "src/pages/HomePage.tsx",
        "start": 64,
        "end": 122,
        "startLoc": {
          "line": 64,
          "column": 5,
          "position": 549
        },
        "endLoc": {
          "line": 122,
          "column": 2,
          "position": 1019
        }
      }
    },
    {
      "format": "javascript",
      "lines": 69,
      "fragment": "}\n              >\n                <div className=\"p-3 rounded-full bg-white/20 inline-flex mb-4\">\n                  {value.icon}\n                </div>\n                <h3 className=\"text-xl font-bold text-white mb-3\">\n                  {value.title}\n                </h3>\n                <p className=\"text-white dark:text-white text-sm\">\n                  {value.description}\n                </p>\n              </motion.div>\n            ))}\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Our Approach */}\n      <section className=\"py-16 bg-white dark:bg-gray-900 relative overflow-hidden\">\n        {/* Background accent */}\n        <div className=\"absolute top-0 left-0 w-1/4 h-1/4 bg-gradient-to-br from-secondary/5 to-primary/5 rounded-br-full\"></div>\n        <div className=\"absolute bottom-0 right-0 w-1/5 h-1/5 bg-gradient-to-tl from-tertiary/5 to-secondary/5 rounded-tl-full\"></div>\n        \n        <div className=\"mobile-container\">\n          <div className=\"max-w-3xl mx-auto\">\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              viewport={{ once: true }}\n              transition={{ duration: 0.6 }}\n            >\n              <h2 className=\"text-2xl sm:text-3xl font-bold text-gray-900 dark:text-white mb-6 text-center\">Our Approach</h2>\n              <div className=\"prose prose-lg dark:prose-invert mx-auto\">\n                <h3>Data-Driven Personalization</h3>\n                <p>\n                  Our AI-powered platform analyzes your health profile, lifestyle factors, \n                  and wellness goals to create customized supplement recommendations. We \n                  continuously update our recommendations based on the latest research and \n                  your progress.\n                </p>\n                \n                <h3>Evidence-Based Recommendations</h3>\n                <p>\n                  Every recommendation is backed by peer-reviewed research and clinical studies. \n                  We work with leading researchers and healthcare professionals to ensure our \n                  guidance is both safe and effective.\n                </p>\n                \n                <h3>Holistic Wellness</h3>\n                <p>\n                  We believe in a comprehensive approach to health that considers nutrition, \n                  physical activity, sleep, stress management, and supplementation. Our \n                  recommendations are designed to support your overall wellbeing, not just \n                  address isolated concerns.\n                </p>\n              </div>\n            </motion.div>\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-16 bg-white dark:bg-black border-t border-gray-200 dark:border-gray-800 text-gray-900 dark:text-white relative overflow-hidden\">\n        {/* Animated background elements */}\n        <motion.div \n          className=\"absolute top-0 right-0 w-96 h-96 rounded-full bg-primary opacity-10\"\n          initial={{ opacity: 0 }}\n          animate={{ \n            opacity",
      "tokens": 0,
      "firstFile": {
        "name": "src/pages/AboutPage.tsx",
        "start": 168,
        "end": 236,
        "startLoc": {
          "line": 168,
          "column": 13,
          "position": 1401
        },
        "endLoc": {
          "line": 236,
          "column": 20,
          "position": 2023
        }
      },
      "secondFile": {
        "name": "src/pages/HomePage.tsx",
        "start": 64,
        "end": 120,
        "startLoc": {
          "line": 64,
          "column": 2,
          "position": 551
        },
        "endLoc": {
          "line": 120,
          "column": 9,
          "position": 996
        }
      }
    },
    {
      "format": "javascript",
      "lines": 9,
      "fragment": ": 0.5 }}\n        />\n        \n        <div className=\"mobile-container text-center\">\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n            transition={{ duration: 0.6 }}",
      "tokens": 0,
      "firstFile": {
        "name": "src/pages/AboutPage.tsx",
        "start": 252,
        "end": 260,
        "startLoc": {
          "line": 252,
          "column": 7,
          "position": 2181
        },
        "endLoc": {
          "line": 260,
          "column": 2,
          "position": 2263
        }
      },
      "secondFile": {
        "name": "src/pages/AboutPage.tsx",
        "start": 94,
        "end": 105,
        "startLoc": {
          "line": 94,
          "column": 10,
          "position": 721
        },
        "endLoc": {
          "line": 105,
          "column": 2,
          "position": 891
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "if (filters) {\n        if (filters.tier && filters.tier !== 'all') {\n          query = query.eq('tier', filters.tier);\n        }\n        \n        if (filters.category) {\n          query = query.eq('category', filters.category);\n        }\n        \n        if (filters.featured) {\n          query = query.eq('is_featured', true);\n        }\n        \n        if (filters.search) {\n          query = query.or(`name.ilike.%${filters.search}%,description.ilike.%${filters.search}%`);\n        }\n      }\n      \n      const { data,",
      "tokens": 0,
      "firstFile": {
        "name": "src/api/supplementApi.ts",
        "start": 102,
        "end": 120,
        "startLoc": {
          "line": 102,
          "column": 7,
          "position": 806
        },
        "endLoc": {
          "line": 120,
          "column": 2,
          "position": 974
        }
      },
      "secondFile": {
        "name": "src/api/supplementApi.ts",
        "start": 74,
        "end": 92,
        "startLoc": {
          "line": 74,
          "column": 7,
          "position": 552
        },
        "endLoc": {
          "line": 92,
          "column": 2,
          "position": 720
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ")\n        .select()\n        .single();\n      \n      if (error) throw error;\n      \n      return {\n        id: data.id,\n        userId: data.user_id,\n        recipeId: data.recipe_id,\n        title: data.title,\n        image: data.image,\n        savedAt: data.saved_at,\n        isFavorite: data.is_favorite\n      };\n    } catch",
      "tokens": 0,
      "firstFile": {
        "name": "src/api/recipeApi.ts",
        "start": 162,
        "end": 177,
        "startLoc": {
          "line": 162,
          "column": 2,
          "position": 1278
        },
        "endLoc": {
          "line": 177,
          "column": 6,
          "position": 1383
        }
      },
      "secondFile": {
        "name": "src/api/recipeApi.ts",
        "start": 136,
        "end": 153,
        "startLoc": {
          "line": 136,
          "column": 3,
          "position": 1084
        },
        "endLoc": {
          "line": 153,
          "column": 6,
          "position": 1191
        }
      }
    },
    {
      "format": "typescript",
      "lines": 55,
      "fragment": "{\n  return [\n    {\n      id: 716429,\n      title: \"Pasta with Garlic, Scallions, Cauliflower & Breadcrumbs\",\n      image: \"https://spoonacular.com/recipeImages/716429-556x370.jpg\",\n      readyInMinutes: 45,\n      servings: 2,\n      sourceUrl: \"https://fullbellysisters.blogspot.com/2012/06/pasta-with-garlic-scallions-cauliflower.html\",\n      summary: \"Pasta with Garlic, Scallions, Cauliflower & Breadcrumbs might be just the main course you are searching for. This recipe makes 2 servings with 636 calories, 21g of protein, and 20g of fat each.\",\n      healthScore: 76,\n      diets: [\"dairy free\", \"lacto ovo vegetarian\", \"vegan\"],\n      nutrition: {\n        calories: 636,\n        protein: 21,\n        fat: 20,\n        carbs: 83\n      }\n    },\n    {\n      id: 715538,\n      title: \"What to make for dinner tonight?? Bruschetta Style Pork & Pasta\",\n      image: \"https://spoonacular.com/recipeImages/715538-556x370.jpg\",\n      readyInMinutes: 35,\n      servings: 4,\n      sourceUrl: \"https://www.pinkwhen.com/bruschetta-style-pork-pasta/\",\n      summary: \"What to make for dinner tonight?? Bruschetta Style Pork & Pasta might be a good recipe to expand your main course recipe box. This recipe makes 4 servings with 520 calories, 45g of protein, and 19g of fat each.\",\n      healthScore: 81,\n      diets: [\"dairy free\"],\n      nutrition: {\n        calories: 520,\n        protein: 45,\n        fat: 19,\n        carbs: 45\n      }\n    },\n    {\n      id: 782601,\n      title: \"Red Kidney Bean Jambalaya\",\n      image: \"https://spoonacular.com/recipeImages/782601-556x370.jpg\",\n      readyInMinutes: 45,\n      servings: 6,\n      sourceUrl: \"https://www.foodista.com/recipe/6BFKZR7Y/red-kidney-bean-jambalaya\",\n      summary: \"Red Kidney Bean Jambalayan is a main course that serves 6. One serving contains 538 calories, 21g of protein, and 8g of fat.\",\n      healthScore: 96,\n      diets: [\"gluten free\", \"dairy free\", \"lacto ovo vegetarian\", \"vegan\"],\n      nutrition: {\n        calories: 538,\n        protein: 21,\n        fat: 8,\n        carbs: 92\n      }\n    }\n  ];\n}",
      "tokens": 0,
      "firstFile": {
        "name": "src/api/recipeApi.ts",
        "start": 323,
        "end": 377,
        "startLoc": {
          "line": 323,
          "column": 2,
          "position": 2632
        },
        "endLoc": {
          "line": 377,
          "column": 2,
          "position": 2981
        }
      },
      "secondFile": {
        "name": "supabase/functions/get-personalized-recipes/index.ts",
        "start": 137,
        "end": 191,
        "startLoc": {
          "line": 137,
          "column": 2,
          "position": 1261
        },
        "endLoc": {
          "line": 191,
          "column": 2,
          "position": 1610
        }
      }
    },
    {
      "format": "typescript",
      "lines": 52,
      "fragment": "= [\n    {\n      id: 1,\n      name: 'Chicken Breast',\n      calories: 165,\n      protein: 31,\n      carbs: 0,\n      fat: 3.6,\n      servingSize: '100g',\n      image: 'https://images.pexels.com/photos/2338407/pexels-photo-2338407.jpeg?auto=compress&cs=tinysrgb&w=300'\n    },\n    {\n      id: 2,\n      name: 'Brown Rice',\n      calories: 112,\n      protein: 2.6,\n      carbs: 23.5,\n      fat: 0.9,\n      servingSize: '100g',\n      image: 'https://images.pexels.com/photos/4110251/pexels-photo-4110251.jpeg?auto=compress&cs=tinysrgb&w=300'\n    },\n    {\n      id: 3,\n      name: 'Salmon',\n      calories: 208,\n      protein: 20,\n      carbs: 0,\n      fat: 13,\n      servingSize: '100g',\n      image: 'https://images.pexels.com/photos/3296279/pexels-photo-3296279.jpeg?auto=compress&cs=tinysrgb&w=300'\n    },\n    {\n      id: 4,\n      name: 'Avocado',\n      calories: 160,\n      protein: 2,\n      carbs: 8.5,\n      fat: 14.7,\n      servingSize: '100g',\n      image: 'https://images.pexels.com/photos/2228553/pexels-photo-2228553.jpeg?auto=compress&cs=tinysrgb&w=300'\n    },\n    {\n      id: 5,\n      name: 'Greek Yogurt',\n      calories: 59,\n      protein: 10,\n      carbs: 3.6,\n      fat: 0.4,\n      servingSize: '100g',\n      image: 'https://images.pexels.com/photos/4397920/pexels-photo-4397920.jpeg?auto=compress&cs=tinysrgb&w=300'\n    }\n  ]",
      "tokens": 0,
      "firstFile": {
        "name": "src/api/nutritionApi.ts",
        "start": 202,
        "end": 253,
        "startLoc": {
          "line": 202,
          "column": 2,
          "position": 1626
        },
        "endLoc": {
          "line": 253,
          "column": 2,
          "position": 1940
        }
      },
      "secondFile": {
        "name": "supabase/functions/nutrition-search/index.ts",
        "start": 74,
        "end": 124,
        "startLoc": {
          "line": 74,
          "column": 2,
          "position": 520
        },
        "endLoc": {
          "line": 124,
          "column": 2,
          "position": 832
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ");\n      \n      if (error) throw error;\n      \n      return data.map(item => ({\n        id: item.id,\n        workoutId: item.workout_id,\n        exerciseName: item.exercise_name,\n        sets: item.sets,\n        reps: item.reps,\n        weight: item.weight,\n        duration: item.duration\n      }));\n    } catch (error) {\n      console.error('Error getting exercise details:'",
      "tokens": 0,
      "firstFile": {
        "name": "src/api/fitnessApi.ts",
        "start": 175,
        "end": 189,
        "startLoc": {
          "line": 175,
          "column": 5,
          "position": 1421
        },
        "endLoc": {
          "line": 189,
          "column": 34,
          "position": 1538
        }
      },
      "secondFile": {
        "name": "src/api/fitnessApi.ts",
        "start": 109,
        "end": 123,
        "startLoc": {
          "line": 109,
          "column": 2,
          "position": 847
        },
        "endLoc": {
          "line": 123,
          "column": 31,
          "position": 964
        }
      }
    },
    {
      "format": "sql",
      "lines": 12,
      "fragment": "CREATE TABLE IF NOT EXISTS audio_cache (\n  id uuid PRIMARY KEY DEFAULT gen_random_uuid(),\n  user_id uuid NOT NULL REFERENCES auth.users(id) ON DELETE CASCADE,\n  cache_key text NOT NULL,\n  audio_data bytea NOT NULL,\n  content_type text NOT NULL DEFAULT 'audio/mpeg',\n  created_at timestamptz DEFAULT now(),\n  expires_at timestamptz NOT NULL\n);\n\n-- Create unique index on user_id and cache_key\nCREATE UNIQUE INDEX IF",
      "tokens": 0,
      "firstFile": {
        "name": ".bolt/supabase_discarded_migrations/20250717071545_broken_stream.sql",
        "start": 23,
        "end": 34,
        "startLoc": {
          "line": 23,
          "column": 1,
          "position": 5
        },
        "endLoc": {
          "line": 34,
          "column": 3,
          "position": 127
        }
      },
      "secondFile": {
        "name": "supabase/migrations/20250717071214_steep_desert.sql",
        "start": 23,
        "end": 34,
        "startLoc": {
          "line": 23,
          "column": 1,
          "position": 5
        },
        "endLoc": {
          "line": 34,
          "column": 34,
          "position": 127
        }
      }
    },
    {
      "format": "sql",
      "lines": 44,
      "fragment": "idx_audio_cache_expires_at ON audio_cache (expires_at);\n\n-- Enable Row Level Security\nALTER TABLE audio_cache ENABLE ROW LEVEL SECURITY;\n\n-- Create policies for authenticated users\nCREATE POLICY \"Users can view their own audio cache\"\n  ON audio_cache\n  FOR SELECT\n  TO public\n  USING (user_id = auth.uid());\n\nCREATE POLICY \"Users can insert their own audio cache\"\n  ON audio_cache\n  FOR INSERT\n  TO public\n  WITH CHECK (user_id = auth.uid());\n\nCREATE POLICY \"Users can update their own audio cache\"\n  ON audio_cache\n  FOR UPDATE\n  TO public\n  USING (user_id = auth.uid())\n  WITH CHECK (user_id = auth.uid());\n\nCREATE POLICY \"Users can delete their own audio cache\"\n  ON audio_cache\n  FOR DELETE\n  TO public\n  USING (user_id = auth.uid());\n\n-- Create function to clean up expired cache entries\nCREATE OR REPLACE FUNCTION cleanup_expired_audio_cache()\nRETURNS void\nLANGUAGE plpgsql\nSECURITY DEFINER\nAS $$\nBEGIN\n  DELETE FROM audio_cache\n  WHERE expires_at < now();\nEND;\n$$;\n\n-- Create a trigger function to automatically clean up expired entries",
      "tokens": 0,
      "firstFile": {
        "name": ".bolt/supabase_discarded_migrations/20250717071545_broken_stream.sql",
        "start": 42,
        "end": 85,
        "startLoc": {
          "line": 42,
          "column": 2,
          "position": 226
        },
        "endLoc": {
          "line": 85,
          "column": 71,
          "position": 487
        }
      },
      "secondFile": {
        "name": "supabase/migrations/20250717071214_steep_desert.sql",
        "start": 42,
        "end": 85,
        "startLoc": {
          "line": 42,
          "column": 2,
          "position": 196
        },
        "endLoc": {
          "line": 85,
          "column": 29,
          "position": 457
        }
      }
    },
    {
      "format": "sql",
      "lines": 39,
      "fragment": "/*\n  # Audio Cache System\n\n  1. New Tables\n    - `audio_cache`: Stores cached audio data for text-to-speech responses\n      - `id` (uuid, primary key)\n      - `user_id` (uuid, references auth.users)\n      - `cache_key` (text)\n      - `audio_data` (bytea)\n      - `content_type` (text)\n      - `created_at` (timestamptz)\n      - `expires_at` (timestamptz)\n  \n  2. Security\n    - Enable RLS on `audio_cache` table\n    - Add policies for authenticated users to manage their own audio cache\n  \n  3. Maintenance\n    - Add function and trigger for automatic cleanup of expired cache entries\n*/\n\n-- Create audio_cache table if it doesn't exist\nCREATE TABLE IF NOT EXISTS audio_cache (\n  id uuid PRIMARY KEY DEFAULT gen_random_uuid(),\n  user_id uuid NOT NULL REFERENCES auth.users(id) ON DELETE CASCADE,\n  cache_key text NOT NULL,\n  audio_data bytea NOT NULL,\n  content_type text NOT NULL DEFAULT 'audio/mpeg',\n  created_at timestamptz DEFAULT now(),\n  expires_at timestamptz NOT NULL\n);\n\n-- Create unique index on user_id and cache_key\nCREATE UNIQUE INDEX IF NOT EXISTS audio_cache_user_id_cache_key_idx ON audio_cache (user_id, cache_key);\n\n-- Create index on expires_at for cleanup operations\nCREATE INDEX IF NOT EXISTS audio_cache_expires_at_idx ON audio_cache (expires_at);\n\n-- Create additional indexes for better performance",
      "tokens": 0,
      "firstFile": {
        "name": ".bolt/supabase_discarded_migrations/20250717070128_frosty_disk.sql",
        "start": 1,
        "end": 39,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 39,
          "column": 52,
          "position": 172
        }
      },
      "secondFile": {
        "name": ".bolt/supabase_discarded_migrations/20250717071545_broken_stream.sql",
        "start": 1,
        "end": 39,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 39,
          "column": 40,
          "position": 172
        }
      }
    },
    {
      "format": "sql",
      "lines": 24,
      "fragment": ");\nCREATE INDEX IF NOT EXISTS idx_audio_cache_expires_at ON audio_cache (expires_at);\n\n-- Enable Row Level Security\nALTER TABLE audio_cache ENABLE ROW LEVEL SECURITY;\n\n-- Create policies for authenticated users\nCREATE POLICY \"Users can view their own audio cache\"\n  ON audio_cache\n  FOR SELECT\n  TO public\n  USING (user_id = auth.uid());\n\nCREATE POLICY \"Users can insert their own audio cache\"\n  ON audio_cache\n  FOR INSERT\n  TO public\n  WITH CHECK (user_id = auth.uid());\n\nCREATE POLICY \"Users can update their own audio cache\"\n  ON audio_cache\n  FOR UPDATE\n  TO public\n  USING (user_id = auth.uid());",
      "tokens": 0,
      "firstFile": {
        "name": ".bolt/supabase_discarded_migrations/20250717070128_frosty_disk.sql",
        "start": 41,
        "end": 64,
        "startLoc": {
          "line": 41,
          "column": 10,
          "position": 213
        },
        "endLoc": {
          "line": 64,
          "column": 2,
          "position": 371
        }
      },
      "secondFile": {
        "name": ".bolt/supabase_discarded_migrations/20250717071545_broken_stream.sql",
        "start": 41,
        "end": 65,
        "startLoc": {
          "line": 41,
          "column": 8,
          "position": 213
        },
        "endLoc": {
          "line": 65,
          "column": 5,
          "position": 343
        }
      }
    },
    {
      "format": "sql",
      "lines": 37,
      "fragment": "(user_id = auth.uid());\n\nCREATE POLICY \"Users can delete their own audio cache\"\n  ON audio_cache\n  FOR DELETE\n  TO public\n  USING (user_id = auth.uid());\n\n-- Create function to clean up expired cache entries\nCREATE OR REPLACE FUNCTION cleanup_expired_audio_cache()\nRETURNS void\nLANGUAGE plpgsql\nSECURITY DEFINER\nAS $$\nBEGIN\n  DELETE FROM audio_cache\n  WHERE expires_at < now();\nEND;\n$$;\n\n-- Create a trigger function\nCREATE OR REPLACE FUNCTION trigger_cleanup_audio_cache()\nRETURNS trigger\nLANGUAGE plpgsql\nSECURITY DEFINER\nAS $$\nBEGIN\n  PERFORM cleanup_expired_audio_cache();\n  RETURN NEW;\nEND;\n$$;\n\n-- Create a trigger that runs the cleanup function periodically\nCREATE TRIGGER auto_cleanup_audio_cache\nAFTER INSERT OR UPDATE ON audio_cache\nFOR EACH STATEMENT\nEXECUTE FUNCTION trigger_cleanup_audio_cache();",
      "tokens": 0,
      "firstFile": {
        "name": ".bolt/supabase_discarded_migrations/20250717070128_frosty_disk.sql",
        "start": 64,
        "end": 100,
        "startLoc": {
          "line": 64,
          "column": 2,
          "position": 360
        },
        "endLoc": {
          "line": 100,
          "column": 2,
          "position": 556
        }
      },
      "secondFile": {
        "name": "supabase/migrations/20250717071214_steep_desert.sql",
        "start": 65,
        "end": 101,
        "startLoc": {
          "line": 65,
          "column": 2,
          "position": 347
        },
        "endLoc": {
          "line": 101,
          "column": 2,
          "position": 543
        }
      }
    },
    {
      "format": "sql",
      "lines": 15,
      "fragment": "calories_burned integer NOT NULL,\n  timestamp timestamptz NOT NULL DEFAULT now(),\n  notes text,\n  created_at timestamptz DEFAULT now()\n);\n\n-- Create exercise_sets table\nCREATE TABLE IF NOT EXISTS exercise_sets (\n  id uuid PRIMARY KEY DEFAULT gen_random_uuid(),\n  workout_id uuid NOT NULL REFERENCES workout_sessions(id) ON DELETE CASCADE,\n  exercise_name text NOT NULL,\n  sets integer NOT NULL,\n  reps integer NOT NULL,\n  weight numeric,\n  duration",
      "tokens": 0,
      "firstFile": {
        "name": ".bolt/supabase_discarded_migrations/20250717044539_polished_portal.sql",
        "start": 39,
        "end": 53,
        "startLoc": {
          "line": 39,
          "column": 3,
          "position": 81
        },
        "endLoc": {
          "line": 53,
          "column": 9,
          "position": 219
        }
      },
      "secondFile": {
        "name": "supabase/migrations/20250716111405_mellow_jungle.sql",
        "start": 35,
        "end": 48,
        "startLoc": {
          "line": 35,
          "column": 3,
          "position": 262
        },
        "endLoc": {
          "line": 48,
          "column": 9,
          "position": 399
        }
      }
    },
    {
      "format": "sql",
      "lines": 7,
      "fragment": "CREATE INDEX IF NOT EXISTS idx_workout_sessions_user_id ON workout_sessions(user_id);\nCREATE INDEX IF NOT EXISTS idx_workout_sessions_timestamp ON workout_sessions(timestamp);\nCREATE INDEX IF NOT EXISTS idx_workout_sessions_user_timestamp ON workout_sessions(user_id, timestamp);\nCREATE INDEX IF NOT EXISTS idx_exercise_sets_workout_id ON exercise_sets(workout_id);\n\n-- Enable Row Level Security\nALTER TABLE workout_sessions",
      "tokens": 0,
      "firstFile": {
        "name": ".bolt/supabase_discarded_migrations/20250717044539_polished_portal.sql",
        "start": 58,
        "end": 64,
        "startLoc": {
          "line": 58,
          "column": 1,
          "position": 241
        },
        "endLoc": {
          "line": 64,
          "column": 17,
          "position": 331
        }
      },
      "secondFile": {
        "name": "supabase/migrations/20250716111405_mellow_jungle.sql",
        "start": 58,
        "end": 65,
        "startLoc": {
          "line": 58,
          "column": 1,
          "position": 490
        },
        "endLoc": {
          "line": 65,
          "column": 10,
          "position": 581
        }
      }
    },
    {
      "format": "sql",
      "lines": 14,
      "fragment": "USING (EXISTS (\n    SELECT 1 FROM workout_sessions\n    WHERE workout_sessions.id = exercise_sets.workout_id\n    AND workout_sessions.user_id = auth.uid()\n  ))\n  WITH CHECK (EXISTS (\n    SELECT 1 FROM workout_sessions\n    WHERE workout_sessions.id = exercise_sets.workout_id\n    AND workout_sessions.user_id = auth.uid()\n  ));\n\nCREATE POLICY \"Users can delete their own exercise sets\"\n  ON exercise_sets FOR DELETE\n  TO",
      "tokens": 0,
      "firstFile": {
        "name": ".bolt/supabase_discarded_migrations/20250717044539_polished_portal.sql",
        "start": 111,
        "end": 124,
        "startLoc": {
          "line": 111,
          "column": 3,
          "position": 694
        },
        "endLoc": {
          "line": 124,
          "column": 3,
          "position": 811
        }
      },
      "secondFile": {
        "name": "supabase/migrations/20250716111405_mellow_jungle.sql",
        "start": 124,
        "end": 137,
        "startLoc": {
          "line": 124,
          "column": 3,
          "position": 1073
        },
        "endLoc": {
          "line": 137,
          "column": 6,
          "position": 1190
        }
      }
    },
    {
      "format": "sql",
      "lines": 19,
      "fragment": "-- Create audio_cache table if it doesn't exist\nCREATE TABLE IF NOT EXISTS audio_cache (\n  id uuid PRIMARY KEY DEFAULT gen_random_uuid(),\n  user_id uuid NOT NULL REFERENCES auth.users(id) ON DELETE CASCADE,\n  cache_key text NOT NULL,\n  audio_data bytea NOT NULL,\n  content_type text NOT NULL DEFAULT 'audio/mpeg',\n  created_at timestamptz DEFAULT now(),\n  expires_at timestamptz NOT NULL\n);\n\n-- Create unique index on user_id and cache_key\nCREATE UNIQUE INDEX IF NOT EXISTS audio_cache_user_id_cache_key_idx ON audio_cache (user_id, cache_key);\n\n-- Create index on expires_at for cleanup operations\nCREATE INDEX IF NOT EXISTS audio_cache_expires_at_idx ON audio_cache (expires_at);\n\n-- Create indexes for efficient lookups\nCREATE INDEX IF NOT EXISTS idx_audio_cache_user_id",
      "tokens": 0,
      "firstFile": {
        "name": ".bolt/supabase_discarded_migrations/20250717042919_sunny_marsh.sql",
        "start": 22,
        "end": 40,
        "startLoc": {
          "line": 22,
          "column": 1,
          "position": 3
        },
        "endLoc": {
          "line": 40,
          "column": 24,
          "position": 184
        }
      },
      "secondFile": {
        "name": ".bolt/supabase_discarded_migrations/20250717071545_broken_stream.sql",
        "start": 22,
        "end": 40,
        "startLoc": {
          "line": 22,
          "column": 1,
          "position": 3
        },
        "endLoc": {
          "line": 40,
          "column": 26,
          "position": 184
        }
      }
    },
    {
      "format": "sql",
      "lines": 13,
      "fragment": "CREATE INDEX IF NOT EXISTS idx_audio_cache_user_id ON audio_cache (user_id);\nCREATE INDEX IF NOT EXISTS idx_audio_cache_cache_key ON audio_cache (cache_key);\nCREATE INDEX IF NOT EXISTS idx_audio_cache_expires_at ON audio_cache (expires_at);\n\n-- Enable Row Level Security\nALTER TABLE audio_cache ENABLE ROW LEVEL SECURITY;\n\n-- Create policies for authenticated users\nCREATE POLICY \"Users can view their own audio cache\"\n  ON audio_cache\n  FOR SELECT\n  TO public\n  USING (auth",
      "tokens": 0,
      "firstFile": {
        "name": ".bolt/supabase_discarded_migrations/20250717042919_sunny_marsh.sql",
        "start": 40,
        "end": 52,
        "startLoc": {
          "line": 40,
          "column": 1,
          "position": 174
        },
        "endLoc": {
          "line": 52,
          "column": 5,
          "position": 283
        }
      },
      "secondFile": {
        "name": ".bolt/supabase_discarded_migrations/20250717070128_frosty_disk.sql",
        "start": 40,
        "end": 52,
        "startLoc": {
          "line": 40,
          "column": 1,
          "position": 174
        },
        "endLoc": {
          "line": 52,
          "column": 8,
          "position": 283
        }
      }
    },
    {
      "format": "tsx",
      "lines": 16,
      "fragment": "= ({ children }: { children: React.ReactNode }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState<boolean | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const checkAuth = async () => {\n      const { data } = await supabase.auth.getUser();\n      setIsAuthenticated(!!data.user);\n      setIsLoading(false);\n    };\n    \n    checkAuth();\n  }, []);\n\n  if (isLoading) {\n    return",
      "tokens": 0,
      "firstFile": {
        "name": "src/App.tsx",
        "start": 70,
        "end": 85,
        "startLoc": {
          "line": 70,
          "column": 2,
          "position": 658
        },
        "endLoc": {
          "line": 85,
          "column": 7,
          "position": 826
        }
      },
      "secondFile": {
        "name": "src/App.tsx",
        "start": 43,
        "end": 58,
        "startLoc": {
          "line": 43,
          "column": 2,
          "position": 405
        },
        "endLoc": {
          "line": 58,
          "column": 22,
          "position": 573
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": "const corsHeaders = {\n  \"Access-Control-Allow-Origin\": \"*\",\n  \"Access-Control-Allow-Headers\": \"authorization, x-client-info, apikey, content-type\",\n};\n\nDeno.serve(async (req) => {\n  // Handle CORS preflight requests\n  if (req.method === \"OPTIONS\") {\n    return new Response(\"ok\", { headers: corsHeaders });\n  }\n\n  try {\n    // Get Supabase credentials from environment\n    const supabaseUrl = Deno.env.get(\"SUPABASE_URL\");\n    const supabaseKey = Deno.env.get(\"SUPABASE_SERVICE_ROLE_KEY\");\n\n    if (!supabaseUrl || !supabaseKey) {\n      throw new Error(\"Supabase credentials not found\");\n    }\n\n    // Initialize Supabase client\n    const supabase = createClient(supabaseUrl, supabaseKey);\n\n    // Get the request body\n    const { action",
      "tokens": 0,
      "firstFile": {
        "name": "index.ts",
        "start": 3,
        "end": 27,
        "startLoc": {
          "line": 3,
          "column": 1,
          "position": 14
        },
        "endLoc": {
          "line": 27,
          "column": 7,
          "position": 198
        }
      },
      "secondFile": {
        "name": "supabase/functions/nutrition-search/index.ts",
        "start": 22,
        "end": 28,
        "startLoc": {
          "line": 22,
          "column": 1,
          "position": 108
        },
        "endLoc": {
          "line": 28,
          "column": 6,
          "position": 200
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "),\n      { headers: { ...corsHeaders, \"Content-Type\": \"application/json\" } }\n    );\n  } catch (error) {\n    console.error(\"Error processing request:\", error);\n    \n    return new Response(\n      JSON.stringify({ error: error.message || \"An unexpected error occurred\" }),\n      { status: 500, headers: { ...corsHeaders, \"Content-Type\": \"application/json\" } }\n    );\n  }\n});\n\n// Create a new supplement stack",
      "tokens": 0,
      "firstFile": {
        "name": "index.ts",
        "start": 73,
        "end": 86,
        "startLoc": {
          "line": 73,
          "column": 7,
          "position": 648
        },
        "endLoc": {
          "line": 86,
          "column": 33,
          "position": 770
        }
      },
      "secondFile": {
        "name": "supabase/functions/circadian-analyzer/index.ts",
        "start": 41,
        "end": 139,
        "startLoc": {
          "line": 41,
          "column": 2,
          "position": 337
        },
        "endLoc": {
          "line": 139,
          "column": 54,
          "position": 1010
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ") {\n    const supplementIds = stackData.supplements.map(s => typeof s === 'string' ? s : s.id);\n    const { data: supplementsData } = await supabase\n      .from('supplements')\n      .select('id, price_aed')\n      .in('id', supplementIds);\n      \n    if (supplementsData) {\n      totalPrice = supplementsData.reduce((sum, s) => sum + (s.price_aed || 0), 0);\n    }\n  }\n\n  // Prepare update data",
      "tokens": 0,
      "firstFile": {
        "name": "index.ts",
        "start": 166,
        "end": 178,
        "startLoc": {
          "line": 166,
          "column": 12,
          "position": 1513
        },
        "endLoc": {
          "line": 178,
          "column": 23,
          "position": 1653
        }
      },
      "secondFile": {
        "name": "index.ts",
        "start": 97,
        "end": 109,
        "startLoc": {
          "line": 97,
          "column": 2,
          "position": 884
        },
        "endLoc": {
          "line": 109,
          "column": 22,
          "position": 1024
        }
      }
    },
    {
      "format": "markup",
      "lines": 11,
      "fragment": "<!doctype html>\n<html lang=\"en\" class=\"overflow-x-hidden\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <link rel=\"icon\" type=\"image/svg+xml\" href=\"https://leznzqfezoofngumpiqf.supabase.co/storage/v1/object/sign/logos/stack%20dash%20metalic%20favicon.svg?token=eyJraWQiOiJzdG9yYWdlLXVybC1zaWduaW5nLWtleV82ZjcyOGVhMS1jMTdjLTQ2MTYtOWFlYS1mZmI3MmEyM2U5Y2EiLCJhbGciOiJIUzI1NiJ9.eyJ1cmwiOiJsb2dvcy9zdGFjayBkYXNoIG1ldGFsaWMgZmF2aWNvbi5zdmciLCJpYXQiOjE3NTI2ODA1MzEsImV4cCI6MTc4NDIxNjUzMX0.hO0sJD4Y2r1tzCqdp5V6g_b4pql7w031aOpIuNWM_NY\" />\n    <link rel=\"alternate icon\" href=\"https://leznzqfezoofngumpiqf.supabase.co/storage/v1/object/sign/logos/stack%20dash%20metalic%20favicon.svg?token=eyJraWQiOiJzdG9yYWdlLXVybC1zaWduaW5nLWtleV82ZjcyOGVhMS1jMTdjLTQ2MTYtOWFlYS1mZmI3MmEyM2U5Y2EiLCJhbGciOiJIUzI1NiJ9.eyJ1cmwiOiJsb2dvcy9zdGFjayBkYXNoIG1ldGFsaWMgZmF2aWNvbi5zdmciLCJpYXQiOjE3NTI2ODA1MzEsImV4cCI6MTc4NDIxNjUzMX0.hO0sJD4Y2r1tzCqdp5V6g_b4pql7w031aOpIuNWM_NY\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no, viewport-fit=cover\" />\n    <meta name=\"apple-mobile-web-app-capable\" content=\"yes\" />\n    <meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black-translucent\" />\n    <meta name=\"theme-color\" content=\"#3b82f6\" />\n    <",
      "tokens": 0,
      "firstFile": {
        "name": "index.html",
        "start": 1,
        "end": 11,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 11,
          "column": 2,
          "position": 150
        }
      },
      "secondFile": {
        "name": "src/index.html",
        "start": 2,
        "end": 12,
        "startLoc": {
          "line": 2,
          "column": 1,
          "position": 6
        },
        "endLoc": {
          "line": 12,
          "column": 2,
          "position": 155
        }
      }
    },
    {
      "format": "markup",
      "lines": 7,
      "fragment": "\" />\n    <link rel=\"manifest\" href=\"/manifest.json\" />\n    <title>Biowell AI - Personal Health Coach</title>\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n    <link href=\"https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n  </",
      "tokens": 0,
      "firstFile": {
        "name": "index.html",
        "start": 10,
        "end": 16,
        "startLoc": {
          "line": 10,
          "column": 8,
          "position": 145
        },
        "endLoc": {
          "line": 16,
          "column": 3,
          "position": 240
        }
      },
      "secondFile": {
        "name": "src/index.html",
        "start": 18,
        "end": 24,
        "startLoc": {
          "line": 18,
          "column": 20,
          "position": 284
        },
        "endLoc": {
          "line": 24,
          "column": 2,
          "position": 378
        }
      }
    },
    {
      "format": "sql",
      "lines": 258,
      "fragment": "DO $$\nBEGIN\n  -- Health & Demographics\n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'age') THEN\n    ALTER TABLE profiles ADD COLUMN age INTEGER;\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'height') THEN\n    ALTER TABLE profiles ADD COLUMN height JSONB;\n    COMMENT ON COLUMN profiles.height IS 'User height stored as JSON with value and unit fields';\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'weight') THEN\n    ALTER TABLE profiles ADD COLUMN weight JSONB;\n    COMMENT ON COLUMN profiles.weight IS 'User weight stored as JSON with value and unit fields';\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'activity_level') THEN\n    ALTER TABLE profiles ADD COLUMN activity_level TEXT;\n  END IF;\n  \n  -- Health Goals & Preferences\n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'primary_health_goals') THEN\n    ALTER TABLE profiles ADD COLUMN primary_health_goals TEXT[];\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'secondary_health_goals') THEN\n    ALTER TABLE profiles ADD COLUMN secondary_health_goals TEXT[];\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'health_concerns') THEN\n    ALTER TABLE profiles ADD COLUMN health_concerns TEXT[];\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'fitness_goals') THEN\n    ALTER TABLE profiles ADD COLUMN fitness_goals TEXT[];\n  END IF;\n  \n  -- Lifestyle Information\n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'sleep_hours') THEN\n    ALTER TABLE profiles ADD COLUMN sleep_hours NUMERIC(3,1);\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'bed_time') THEN\n    ALTER TABLE profiles ADD COLUMN bed_time TIME WITHOUT TIME ZONE;\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'wake_time') THEN\n    ALTER TABLE profiles ADD COLUMN wake_time TIME WITHOUT TIME ZONE;\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'sleep_quality') THEN\n    ALTER TABLE profiles ADD COLUMN sleep_quality TEXT;\n  END IF;\n  \n  -- Exercise & Diet\n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'exercise_frequency') THEN\n    ALTER TABLE profiles ADD COLUMN exercise_frequency TEXT;\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'exercise_types') THEN\n    ALTER TABLE profiles ADD COLUMN exercise_types TEXT[];\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'diet_preference') THEN\n    ALTER TABLE profiles ADD COLUMN diet_preference TEXT;\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'dietary_restrictions') THEN\n    ALTER TABLE profiles ADD COLUMN dietary_restrictions TEXT[];\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'allergies') THEN\n    ALTER TABLE profiles ADD COLUMN allergies TEXT[];\n  END IF;\n  \n  -- Mental Health & Stress\n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'stress_level') THEN\n    ALTER TABLE profiles ADD COLUMN stress_level INTEGER;\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'stress_triggers') THEN\n    ALTER TABLE profiles ADD COLUMN stress_triggers TEXT[];\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'mental_health_goals') THEN\n    ALTER TABLE profiles ADD COLUMN mental_health_goals TEXT[];\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'meditation_experience') THEN\n    ALTER TABLE profiles ADD COLUMN meditation_experience TEXT;\n  END IF;\n  \n  -- Supplement & Medical History\n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'current_supplements') THEN\n    ALTER TABLE profiles ADD COLUMN current_supplements TEXT[];\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'medication_list') THEN\n    ALTER TABLE profiles ADD COLUMN medication_list TEXT[];\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'medical_conditions') THEN\n    ALTER TABLE profiles ADD COLUMN medical_conditions TEXT[];\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'doctor_consultation') THEN\n    ALTER TABLE profiles ADD COLUMN doctor_consultation BOOLEAN DEFAULT false;\n  END IF;\n  \n  -- Preferences & Settings\n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'communication_preferences') THEN\n    ALTER TABLE profiles ADD COLUMN communication_preferences JSONB;\n    COMMENT ON COLUMN profiles.communication_preferences IS 'User communication preferences stored as JSON';\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'privacy_settings') THEN\n    ALTER TABLE profiles ADD COLUMN privacy_settings JSONB;\n    COMMENT ON COLUMN profiles.privacy_settings IS 'User privacy settings stored as JSON';\n  END IF;\n  \n  -- Timestamps\n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'onboarding_completed_at') THEN\n    ALTER TABLE profiles ADD COLUMN onboarding_completed_at TIMESTAMPTZ;\n    COMMENT ON COLUMN profiles.onboarding_completed_at IS 'Timestamp when user completed onboarding process';\n  END IF;\n  \n  -- Add constraints for enum fields\n  ALTER TABLE profiles DROP CONSTRAINT IF EXISTS profiles_activity_level_check;\n  ALTER TABLE profiles ADD CONSTRAINT profiles_activity_level_check \n    CHECK (activity_level = ANY (ARRAY['sedentary', 'lightly-active', 'moderately-active', 'very-active', 'extremely-active']));\n  \n  ALTER TABLE profiles DROP CONSTRAINT IF EXISTS profiles_gender_check;\n  ALTER TABLE profiles ADD CONSTRAINT profiles_gender_check \n    CHECK (gender = ANY (ARRAY['male', 'female', 'non-binary', 'prefer-not-to-say']));\n  \n  ALTER TABLE profiles DROP CONSTRAINT IF EXISTS profiles_diet_preference_check;\n  ALTER TABLE profiles ADD CONSTRAINT profiles_diet_preference_check \n    CHECK (diet_preference = ANY (ARRAY['omnivore', 'vegetarian', 'vegan', 'pescatarian', 'keto', 'paleo', 'mediterranean', 'other']));\n  \n  ALTER TABLE profiles DROP CONSTRAINT IF EXISTS profiles_sleep_quality_check;\n  ALTER TABLE profiles ADD CONSTRAINT profiles_sleep_quality_check \n    CHECK (sleep_quality = ANY (ARRAY['poor', 'fair', 'good', 'excellent']));\n  \n  ALTER TABLE profiles DROP CONSTRAINT IF EXISTS profiles_exercise_frequency_check;\n  ALTER TABLE profiles ADD CONSTRAINT profiles_exercise_frequency_check \n    CHECK (exercise_frequency = ANY (ARRAY['never', 'rarely', '1-2-times', '3-4-times', '5-6-times', 'daily']));\n  \n  ALTER TABLE profiles DROP CONSTRAINT IF EXISTS profiles_meditation_experience_check;\n  ALTER TABLE profiles ADD CONSTRAINT profiles_meditation_experience_check \n    CHECK (meditation_experience = ANY (ARRAY['none', 'beginner', 'intermediate', 'advanced']));\n  \n  ALTER TABLE profiles DROP CONSTRAINT IF EXISTS profiles_stress_level_check;\n  ALTER TABLE profiles ADD CONSTRAINT profiles_stress_level_check \n    CHECK ((stress_level >= 1) AND (stress_level <= 10));\n  \n  -- Create indexes for performance\n  CREATE INDEX IF NOT EXISTS idx_profiles_onboarding_completed ON profiles(onboarding_completed);\n  CREATE INDEX IF NOT EXISTS idx_profiles_primary_health_goals ON profiles USING GIN(primary_health_goals);\n  CREATE INDEX IF NOT EXISTS idx_profiles_fitness_goals ON profiles USING GIN(fitness_goals);\n  CREATE INDEX IF NOT EXISTS idx_profiles_diet_preference ON profiles(diet_preference);\n  CREATE INDEX IF NOT EXISTS idx_profiles_activity_level ON profiles(activity_level);\n  CREATE INDEX IF NOT EXISTS idx_profiles_mobile ON profiles(mobile);\nEND $$;\n\n-- Add corresponding fields to quiz_responses table for backward compatibility\nDO $$\nBEGIN\n  -- Add columns if they don't exist\n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'quiz_responses' AND column_name = 'secondary_health_goals') THEN\n    ALTER TABLE quiz_responses ADD COLUMN secondary_health_goals TEXT[];\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'quiz_responses' AND column_name = 'health_concerns') THEN\n    ALTER TABLE quiz_responses ADD COLUMN health_concerns TEXT[];\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'quiz_responses' AND column_name = 'fitness_goals') THEN\n    ALTER TABLE quiz_responses ADD COLUMN fitness_goals TEXT[];\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'quiz_responses' AND column_name = 'bed_time') THEN\n    ALTER TABLE quiz_responses ADD COLUMN bed_time TIME WITHOUT TIME ZONE;\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'quiz_responses' AND column_name = 'wake_time') THEN\n    ALTER TABLE quiz_responses ADD COLUMN wake_time TIME WITHOUT TIME ZONE;\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'quiz_responses' AND column_name = 'sleep_quality') THEN\n    ALTER TABLE quiz_responses ADD COLUMN sleep_quality TEXT;\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'quiz_responses' AND column_name = 'exercise_types') THEN\n    ALTER TABLE quiz_responses ADD COLUMN exercise_types TEXT[];\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'quiz_responses' AND column_name = 'dietary_restrictions') THEN\n    ALTER TABLE quiz_responses ADD COLUMN dietary_restrictions TEXT[];\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'quiz_responses' AND column_name = 'allergies') THEN\n    ALTER TABLE quiz_responses ADD COLUMN allergies TEXT[];\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'quiz_responses' AND column_name = 'stress_triggers') THEN\n    ALTER TABLE quiz_responses ADD COLUMN stress_triggers TEXT[];\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'quiz_responses' AND column_name = 'mental_health_goals') THEN\n    ALTER TABLE quiz_responses ADD COLUMN mental_health_goals TEXT[];\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'quiz_responses' AND column_name = 'meditation_experience') THEN\n    ALTER TABLE quiz_responses ADD COLUMN meditation_experience TEXT;\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'quiz_responses' AND column_name = 'current_supplements') THEN\n    ALTER TABLE quiz_responses ADD COLUMN current_supplements TEXT[];\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'quiz_responses' AND column_name = 'medication_list') THEN\n    ALTER TABLE quiz_responses ADD COLUMN medication_list TEXT[];\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'quiz_responses' AND column_name = 'medical_conditions') THEN\n    ALTER TABLE quiz_responses ADD COLUMN medical_conditions TEXT[];\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'quiz_responses' AND column_name = 'doctor_consultation') THEN\n    ALTER TABLE quiz_responses ADD COLUMN doctor_consultation BOOLEAN DEFAULT false;\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'quiz_responses' AND column_name = 'height') THEN\n    ALTER TABLE quiz_responses ADD COLUMN height JSONB;\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'quiz_responses' AND column_name = 'weight') THEN\n    ALTER TABLE quiz_responses ADD COLUMN weight JSONB;\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'quiz_responses' AND column_name = 'activity_level') THEN\n    ALTER TABLE quiz_responses ADD COLUMN activity_level TEXT;\n  END IF;\n  \n  -- Add constraints for enum fields\n  ALTER TABLE quiz_responses DROP CONSTRAINT IF EXISTS quiz_responses_activity_level_check;\n  ALTER TABLE quiz_responses ADD CONSTRAINT quiz_responses_activity_level_check \n    CHECK (activity_level = ANY (ARRAY['sedentary', 'lightly-active', 'moderately-active', 'very-active', 'extremely-active']));\n  \n  ALTER TABLE quiz_responses DROP CONSTRAINT IF EXISTS quiz_responses_sleep_quality_check;\n  ALTER TABLE quiz_responses ADD CONSTRAINT quiz_responses_sleep_quality_check \n    CHECK (sleep_quality = ANY (ARRAY['poor', 'fair', 'good', 'excellent']));\n  \n  ALTER TABLE quiz_responses DROP CONSTRAINT IF EXISTS quiz_responses_meditation_experience_check;\n  ALTER TABLE quiz_responses ADD CONSTRAINT quiz_responses_meditation_experience_check \n    CHECK (meditation_experience = ANY (ARRAY['none', 'beginner', 'intermediate', 'advanced']));\nEND $$;",
      "tokens": 0,
      "firstFile": {
        "name": "20250708212920_billowing_cake.sql",
        "start": 18,
        "end": 275,
        "startLoc": {
          "line": 18,
          "column": 1,
          "position": 5
        },
        "endLoc": {
          "line": 275,
          "column": 2,
          "position": 3866
        }
      },
      "secondFile": {
        "name": "20250708215814_foggy_mud.sql",
        "start": 15,
        "end": 272,
        "startLoc": {
          "line": 15,
          "column": 1,
          "position": 5
        },
        "endLoc": {
          "line": 272,
          "column": 2,
          "position": 3866
        }
      }
    },
    {
      "format": "sql",
      "lines": 259,
      "fragment": "-- Add new columns to profiles table for enhanced onboarding if they don't exist\nDO $$\nBEGIN\n  -- Health & Demographics\n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'age') THEN\n    ALTER TABLE profiles ADD COLUMN age INTEGER;\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'height') THEN\n    ALTER TABLE profiles ADD COLUMN height JSONB;\n    COMMENT ON COLUMN profiles.height IS 'User height stored as JSON with value and unit fields';\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'weight') THEN\n    ALTER TABLE profiles ADD COLUMN weight JSONB;\n    COMMENT ON COLUMN profiles.weight IS 'User weight stored as JSON with value and unit fields';\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'activity_level') THEN\n    ALTER TABLE profiles ADD COLUMN activity_level TEXT;\n  END IF;\n  \n  -- Health Goals & Preferences\n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'primary_health_goals') THEN\n    ALTER TABLE profiles ADD COLUMN primary_health_goals TEXT[];\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'secondary_health_goals') THEN\n    ALTER TABLE profiles ADD COLUMN secondary_health_goals TEXT[];\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'health_concerns') THEN\n    ALTER TABLE profiles ADD COLUMN health_concerns TEXT[];\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'fitness_goals') THEN\n    ALTER TABLE profiles ADD COLUMN fitness_goals TEXT[];\n  END IF;\n  \n  -- Lifestyle Information\n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'sleep_hours') THEN\n    ALTER TABLE profiles ADD COLUMN sleep_hours NUMERIC(3,1);\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'bed_time') THEN\n    ALTER TABLE profiles ADD COLUMN bed_time TIME WITHOUT TIME ZONE;\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'wake_time') THEN\n    ALTER TABLE profiles ADD COLUMN wake_time TIME WITHOUT TIME ZONE;\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'sleep_quality') THEN\n    ALTER TABLE profiles ADD COLUMN sleep_quality TEXT;\n  END IF;\n  \n  -- Exercise & Diet\n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'exercise_frequency') THEN\n    ALTER TABLE profiles ADD COLUMN exercise_frequency TEXT;\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'exercise_types') THEN\n    ALTER TABLE profiles ADD COLUMN exercise_types TEXT[];\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'diet_preference') THEN\n    ALTER TABLE profiles ADD COLUMN diet_preference TEXT;\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'dietary_restrictions') THEN\n    ALTER TABLE profiles ADD COLUMN dietary_restrictions TEXT[];\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'allergies') THEN\n    ALTER TABLE profiles ADD COLUMN allergies TEXT[];\n  END IF;\n  \n  -- Mental Health & Stress\n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'stress_level') THEN\n    ALTER TABLE profiles ADD COLUMN stress_level INTEGER;\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'stress_triggers') THEN\n    ALTER TABLE profiles ADD COLUMN stress_triggers TEXT[];\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'mental_health_goals') THEN\n    ALTER TABLE profiles ADD COLUMN mental_health_goals TEXT[];\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'meditation_experience') THEN\n    ALTER TABLE profiles ADD COLUMN meditation_experience TEXT;\n  END IF;\n  \n  -- Supplement & Medical History\n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'current_supplements') THEN\n    ALTER TABLE profiles ADD COLUMN current_supplements TEXT[];\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'medication_list') THEN\n    ALTER TABLE profiles ADD COLUMN medication_list TEXT[];\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'medical_conditions') THEN\n    ALTER TABLE profiles ADD COLUMN medical_conditions TEXT[];\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'doctor_consultation') THEN\n    ALTER TABLE profiles ADD COLUMN doctor_consultation BOOLEAN DEFAULT false;\n  END IF;\n  \n  -- Preferences & Settings\n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'communication_preferences') THEN\n    ALTER TABLE profiles ADD COLUMN communication_preferences JSONB;\n    COMMENT ON COLUMN profiles.communication_preferences IS 'User communication preferences stored as JSON';\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'privacy_settings') THEN\n    ALTER TABLE profiles ADD COLUMN privacy_settings JSONB;\n    COMMENT ON COLUMN profiles.privacy_settings IS 'User privacy settings stored as JSON';\n  END IF;\n  \n  -- Timestamps\n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'onboarding_completed_at') THEN\n    ALTER TABLE profiles ADD COLUMN onboarding_completed_at TIMESTAMPTZ;\n    COMMENT ON COLUMN profiles.onboarding_completed_at IS 'Timestamp when user completed onboarding process';\n  END IF;\n  \n  -- Add constraints for enum fields\n  ALTER TABLE profiles DROP CONSTRAINT IF EXISTS profiles_activity_level_check;\n  ALTER TABLE profiles ADD CONSTRAINT profiles_activity_level_check \n    CHECK (activity_level = ANY (ARRAY['sedentary', 'lightly-active', 'moderately-active', 'very-active', 'extremely-active']));\n  \n  ALTER TABLE profiles DROP CONSTRAINT IF EXISTS profiles_gender_check;\n  ALTER TABLE profiles ADD CONSTRAINT profiles_gender_check \n    CHECK (gender = ANY (ARRAY['male', 'female', 'non-binary', 'prefer-not-to-say']));\n  \n  ALTER TABLE profiles DROP CONSTRAINT IF EXISTS profiles_diet_preference_check;\n  ALTER TABLE profiles ADD CONSTRAINT profiles_diet_preference_check \n    CHECK (diet_preference = ANY (ARRAY['omnivore', 'vegetarian', 'vegan', 'pescatarian', 'keto', 'paleo', 'mediterranean', 'other']));\n  \n  ALTER TABLE profiles DROP CONSTRAINT IF EXISTS profiles_sleep_quality_check;\n  ALTER TABLE profiles ADD CONSTRAINT profiles_sleep_quality_check \n    CHECK (sleep_quality = ANY (ARRAY['poor', 'fair', 'good', 'excellent']));\n  \n  ALTER TABLE profiles DROP CONSTRAINT IF EXISTS profiles_exercise_frequency_check;\n  ALTER TABLE profiles ADD CONSTRAINT profiles_exercise_frequency_check \n    CHECK (exercise_frequency = ANY (ARRAY['never', 'rarely', '1-2-times', '3-4-times', '5-6-times', 'daily']));\n  \n  ALTER TABLE profiles DROP CONSTRAINT IF EXISTS profiles_meditation_experience_check;\n  ALTER TABLE profiles ADD CONSTRAINT profiles_meditation_experience_check \n    CHECK (meditation_experience = ANY (ARRAY['none', 'beginner', 'intermediate', 'advanced']));\n  \n  ALTER TABLE profiles DROP CONSTRAINT IF EXISTS profiles_stress_level_check;\n  ALTER TABLE profiles ADD CONSTRAINT profiles_stress_level_check \n    CHECK ((stress_level >= 1) AND (stress_level <= 10));\n  \n  -- Create indexes for performance\n  CREATE INDEX IF NOT EXISTS idx_profiles_onboarding_completed ON profiles(onboarding_completed);\n  CREATE INDEX IF NOT EXISTS idx_profiles_primary_health_goals ON profiles USING GIN(primary_health_goals);\n  CREATE INDEX IF NOT EXISTS idx_profiles_fitness_goals ON profiles USING GIN(fitness_goals);\n  CREATE INDEX IF NOT EXISTS idx_profiles_diet_preference ON profiles(diet_preference);\n  CREATE INDEX IF NOT EXISTS idx_profiles_activity_level ON profiles(activity_level);\n  CREATE INDEX IF NOT EXISTS idx_profiles_mobile ON profiles(mobile);\nEND $$;\n\n-- Add corresponding fields to quiz_responses table for backward compatibility\nDO $$\nBEGIN\n  -- Add columns if they don't exist\n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'quiz_responses' AND column_name = 'secondary_health_goals') THEN\n    ALTER TABLE quiz_responses ADD COLUMN secondary_health_goals TEXT[];\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'quiz_responses' AND column_name = 'health_concerns') THEN\n    ALTER TABLE quiz_responses ADD COLUMN health_concerns TEXT[];\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'quiz_responses' AND column_name = 'fitness_goals') THEN\n    ALTER TABLE quiz_responses ADD COLUMN fitness_goals TEXT[];\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'quiz_responses' AND column_name = 'bed_time') THEN\n    ALTER TABLE quiz_responses ADD COLUMN bed_time TIME WITHOUT TIME ZONE;\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'quiz_responses' AND column_name = 'wake_time') THEN\n    ALTER TABLE quiz_responses ADD COLUMN wake_time TIME WITHOUT TIME ZONE;\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'quiz_responses' AND column_name = 'sleep_quality') THEN\n    ALTER TABLE quiz_responses ADD COLUMN sleep_quality TEXT;\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'quiz_responses' AND column_name = 'exercise_types') THEN\n    ALTER TABLE quiz_responses ADD COLUMN exercise_types TEXT[];\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'quiz_responses' AND column_name = 'dietary_restrictions') THEN\n    ALTER TABLE quiz_responses ADD COLUMN dietary_restrictions TEXT[];\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'quiz_responses' AND column_name = 'allergies') THEN\n    ALTER TABLE quiz_responses ADD COLUMN allergies TEXT[];\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'quiz_responses' AND column_name = 'stress_triggers') THEN\n    ALTER TABLE quiz_responses ADD COLUMN stress_triggers TEXT[];\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'quiz_responses' AND column_name = 'mental_health_goals') THEN\n    ALTER TABLE quiz_responses ADD COLUMN mental_health_goals TEXT[];\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'quiz_responses' AND column_name = 'meditation_experience') THEN\n    ALTER TABLE quiz_responses ADD COLUMN meditation_experience TEXT;\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'quiz_responses' AND column_name = 'current_supplements') THEN\n    ALTER TABLE quiz_responses ADD COLUMN current_supplements TEXT[];\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'quiz_responses' AND column_name = 'medication_list') THEN\n    ALTER TABLE quiz_responses ADD COLUMN medication_list TEXT[];\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'quiz_responses' AND column_name = 'medical_conditions') THEN\n    ALTER TABLE quiz_responses ADD COLUMN medical_conditions TEXT[];\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'quiz_responses' AND column_name = 'doctor_consultation') THEN\n    ALTER TABLE quiz_responses ADD COLUMN doctor_consultation BOOLEAN DEFAULT false;\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'quiz_responses' AND column_name = 'height') THEN\n    ALTER TABLE quiz_responses ADD COLUMN height JSONB;\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'quiz_responses' AND column_name = 'weight') THEN\n    ALTER TABLE quiz_responses ADD COLUMN weight JSONB;\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'quiz_responses' AND column_name = 'activity_level') THEN\n    ALTER TABLE quiz_responses ADD COLUMN activity_level TEXT;\n  END IF;\n  \n  -- Add constraints for enum fields\n  ALTER TABLE quiz_responses DROP CONSTRAINT IF EXISTS quiz_responses_activity_level_check;\n  ALTER TABLE quiz_responses ADD CONSTRAINT quiz_responses_activity_level_check \n    CHECK (activity_level = ANY (ARRAY['sedentary', 'lightly-active', 'moderately-active', 'very-active', 'extremely-active']));\n  \n  ALTER TABLE quiz_responses DROP CONSTRAINT IF EXISTS quiz_responses_sleep_quality_check;\n  ALTER TABLE quiz_responses ADD CONSTRAINT quiz_responses_sleep_quality_check \n    CHECK (sleep_quality = ANY (ARRAY['poor', 'fair', 'good', 'excellent']));\n  \n  ALTER TABLE quiz_responses DROP CONSTRAINT IF EXISTS quiz_responses_meditation_experience_check;\n  ALTER TABLE quiz_responses ADD CONSTRAINT quiz_responses_meditation_experience_check \n    CHECK (meditation_experience = ANY (ARRAY['none', 'beginner', 'intermediate', 'advanced']));\nEND $$;",
      "tokens": 0,
      "firstFile": {
        "name": "20250708205359_bright_leaf.sql",
        "start": 18,
        "end": 276,
        "startLoc": {
          "line": 18,
          "column": 1,
          "position": 3
        },
        "endLoc": {
          "line": 276,
          "column": 2,
          "position": 3866
        }
      },
      "secondFile": {
        "name": "20250708212920_billowing_cake.sql",
        "start": 17,
        "end": 272,
        "startLoc": {
          "line": 17,
          "column": 1,
          "position": 3
        },
        "endLoc": {
          "line": 272,
          "column": 2,
          "position": 3866
        }
      }
    },
    {
      "format": "sql",
      "lines": 259,
      "fragment": "-- Add new columns to profiles table for enhanced onboarding if they don't exist\nDO $$\nBEGIN\n  -- Health & Demographics\n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'age') THEN\n    ALTER TABLE profiles ADD COLUMN age INTEGER;\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'height') THEN\n    ALTER TABLE profiles ADD COLUMN height JSONB;\n    COMMENT ON COLUMN profiles.height IS 'User height stored as JSON with value and unit fields';\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'weight') THEN\n    ALTER TABLE profiles ADD COLUMN weight JSONB;\n    COMMENT ON COLUMN profiles.weight IS 'User weight stored as JSON with value and unit fields';\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'activity_level') THEN\n    ALTER TABLE profiles ADD COLUMN activity_level TEXT;\n  END IF;\n  \n  -- Health Goals & Preferences\n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'primary_health_goals') THEN\n    ALTER TABLE profiles ADD COLUMN primary_health_goals TEXT[];\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'secondary_health_goals') THEN\n    ALTER TABLE profiles ADD COLUMN secondary_health_goals TEXT[];\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'health_concerns') THEN\n    ALTER TABLE profiles ADD COLUMN health_concerns TEXT[];\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'fitness_goals') THEN\n    ALTER TABLE profiles ADD COLUMN fitness_goals TEXT[];\n  END IF;\n  \n  -- Lifestyle Information\n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'sleep_hours') THEN\n    ALTER TABLE profiles ADD COLUMN sleep_hours NUMERIC(3,1);\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'bed_time') THEN\n    ALTER TABLE profiles ADD COLUMN bed_time TIME WITHOUT TIME ZONE;\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'wake_time') THEN\n    ALTER TABLE profiles ADD COLUMN wake_time TIME WITHOUT TIME ZONE;\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'sleep_quality') THEN\n    ALTER TABLE profiles ADD COLUMN sleep_quality TEXT;\n  END IF;\n  \n  -- Exercise & Diet\n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'exercise_frequency') THEN\n    ALTER TABLE profiles ADD COLUMN exercise_frequency TEXT;\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'exercise_types') THEN\n    ALTER TABLE profiles ADD COLUMN exercise_types TEXT[];\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'diet_preference') THEN\n    ALTER TABLE profiles ADD COLUMN diet_preference TEXT;\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'dietary_restrictions') THEN\n    ALTER TABLE profiles ADD COLUMN dietary_restrictions TEXT[];\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'allergies') THEN\n    ALTER TABLE profiles ADD COLUMN allergies TEXT[];\n  END IF;\n  \n  -- Mental Health & Stress\n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'stress_level') THEN\n    ALTER TABLE profiles ADD COLUMN stress_level INTEGER;\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'stress_triggers') THEN\n    ALTER TABLE profiles ADD COLUMN stress_triggers TEXT[];\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'mental_health_goals') THEN\n    ALTER TABLE profiles ADD COLUMN mental_health_goals TEXT[];\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'meditation_experience') THEN\n    ALTER TABLE profiles ADD COLUMN meditation_experience TEXT;\n  END IF;\n  \n  -- Supplement & Medical History\n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'current_supplements') THEN\n    ALTER TABLE profiles ADD COLUMN current_supplements TEXT[];\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'medication_list') THEN\n    ALTER TABLE profiles ADD COLUMN medication_list TEXT[];\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'medical_conditions') THEN\n    ALTER TABLE profiles ADD COLUMN medical_conditions TEXT[];\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'doctor_consultation') THEN\n    ALTER TABLE profiles ADD COLUMN doctor_consultation BOOLEAN DEFAULT false;\n  END IF;\n  \n  -- Preferences & Settings\n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'communication_preferences') THEN\n    ALTER TABLE profiles ADD COLUMN communication_preferences JSONB;\n    COMMENT ON COLUMN profiles.communication_preferences IS 'User communication preferences stored as JSON';\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'privacy_settings') THEN\n    ALTER TABLE profiles ADD COLUMN privacy_settings JSONB;\n    COMMENT ON COLUMN profiles.privacy_settings IS 'User privacy settings stored as JSON';\n  END IF;\n  \n  -- Timestamps\n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'profiles' AND column_name = 'onboarding_completed_at') THEN\n    ALTER TABLE profiles ADD COLUMN onboarding_completed_at TIMESTAMPTZ;\n    COMMENT ON COLUMN profiles.onboarding_completed_at IS 'Timestamp when user completed onboarding process';\n  END IF;\n  \n  -- Add constraints for enum fields\n  ALTER TABLE profiles DROP CONSTRAINT IF EXISTS profiles_activity_level_check;\n  ALTER TABLE profiles ADD CONSTRAINT profiles_activity_level_check \n    CHECK (activity_level = ANY (ARRAY['sedentary', 'lightly-active', 'moderately-active', 'very-active', 'extremely-active']));\n  \n  ALTER TABLE profiles DROP CONSTRAINT IF EXISTS profiles_gender_check;\n  ALTER TABLE profiles ADD CONSTRAINT profiles_gender_check \n    CHECK (gender = ANY (ARRAY['male', 'female', 'non-binary', 'prefer-not-to-say']));\n  \n  ALTER TABLE profiles DROP CONSTRAINT IF EXISTS profiles_diet_preference_check;\n  ALTER TABLE profiles ADD CONSTRAINT profiles_diet_preference_check \n    CHECK (diet_preference = ANY (ARRAY['omnivore', 'vegetarian', 'vegan', 'pescatarian', 'keto', 'paleo', 'mediterranean', 'other']));\n  \n  ALTER TABLE profiles DROP CONSTRAINT IF EXISTS profiles_sleep_quality_check;\n  ALTER TABLE profiles ADD CONSTRAINT profiles_sleep_quality_check \n    CHECK (sleep_quality = ANY (ARRAY['poor', 'fair', 'good', 'excellent']));\n  \n  ALTER TABLE profiles DROP CONSTRAINT IF EXISTS profiles_exercise_frequency_check;\n  ALTER TABLE profiles ADD CONSTRAINT profiles_exercise_frequency_check \n    CHECK (exercise_frequency = ANY (ARRAY['never', 'rarely', '1-2-times', '3-4-times', '5-6-times', 'daily']));\n  \n  ALTER TABLE profiles DROP CONSTRAINT IF EXISTS profiles_meditation_experience_check;\n  ALTER TABLE profiles ADD CONSTRAINT profiles_meditation_experience_check \n    CHECK (meditation_experience = ANY (ARRAY['none', 'beginner', 'intermediate', 'advanced']));\n  \n  ALTER TABLE profiles DROP CONSTRAINT IF EXISTS profiles_stress_level_check;\n  ALTER TABLE profiles ADD CONSTRAINT profiles_stress_level_check \n    CHECK ((stress_level >= 1) AND (stress_level <= 10));\n  \n  -- Create indexes for performance\n  CREATE INDEX IF NOT EXISTS idx_profiles_onboarding_completed ON profiles(onboarding_completed);\n  CREATE INDEX IF NOT EXISTS idx_profiles_primary_health_goals ON profiles USING GIN(primary_health_goals);\n  CREATE INDEX IF NOT EXISTS idx_profiles_fitness_goals ON profiles USING GIN(fitness_goals);\n  CREATE INDEX IF NOT EXISTS idx_profiles_diet_preference ON profiles(diet_preference);\n  CREATE INDEX IF NOT EXISTS idx_profiles_activity_level ON profiles(activity_level);\n  CREATE INDEX IF NOT EXISTS idx_profiles_mobile ON profiles(mobile);\nEND $$;\n\n-- Add corresponding fields to quiz_responses table for backward compatibility\nDO $$\nBEGIN\n  -- Add columns if they don't exist\n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'quiz_responses' AND column_name = 'secondary_health_goals') THEN\n    ALTER TABLE quiz_responses ADD COLUMN secondary_health_goals TEXT[];\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'quiz_responses' AND column_name = 'health_concerns') THEN\n    ALTER TABLE quiz_responses ADD COLUMN health_concerns TEXT[];\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'quiz_responses' AND column_name = 'fitness_goals') THEN\n    ALTER TABLE quiz_responses ADD COLUMN fitness_goals TEXT[];\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'quiz_responses' AND column_name = 'bed_time') THEN\n    ALTER TABLE quiz_responses ADD COLUMN bed_time TIME WITHOUT TIME ZONE;\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'quiz_responses' AND column_name = 'wake_time') THEN\n    ALTER TABLE quiz_responses ADD COLUMN wake_time TIME WITHOUT TIME ZONE;\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'quiz_responses' AND column_name = 'sleep_quality') THEN\n    ALTER TABLE quiz_responses ADD COLUMN sleep_quality TEXT;\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'quiz_responses' AND column_name = 'exercise_types') THEN\n    ALTER TABLE quiz_responses ADD COLUMN exercise_types TEXT[];\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'quiz_responses' AND column_name = 'dietary_restrictions') THEN\n    ALTER TABLE quiz_responses ADD COLUMN dietary_restrictions TEXT[];\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'quiz_responses' AND column_name = 'allergies') THEN\n    ALTER TABLE quiz_responses ADD COLUMN allergies TEXT[];\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'quiz_responses' AND column_name = 'stress_triggers') THEN\n    ALTER TABLE quiz_responses ADD COLUMN stress_triggers TEXT[];\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'quiz_responses' AND column_name = 'mental_health_goals') THEN\n    ALTER TABLE quiz_responses ADD COLUMN mental_health_goals TEXT[];\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'quiz_responses' AND column_name = 'meditation_experience') THEN\n    ALTER TABLE quiz_responses ADD COLUMN meditation_experience TEXT;\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'quiz_responses' AND column_name = 'current_supplements') THEN\n    ALTER TABLE quiz_responses ADD COLUMN current_supplements TEXT[];\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'quiz_responses' AND column_name = 'medication_list') THEN\n    ALTER TABLE quiz_responses ADD COLUMN medication_list TEXT[];\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'quiz_responses' AND column_name = 'medical_conditions') THEN\n    ALTER TABLE quiz_responses ADD COLUMN medical_conditions TEXT[];\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'quiz_responses' AND column_name = 'doctor_consultation') THEN\n    ALTER TABLE quiz_responses ADD COLUMN doctor_consultation BOOLEAN DEFAULT false;\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'quiz_responses' AND column_name = 'height') THEN\n    ALTER TABLE quiz_responses ADD COLUMN height JSONB;\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'quiz_responses' AND column_name = 'weight') THEN\n    ALTER TABLE quiz_responses ADD COLUMN weight JSONB;\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'quiz_responses' AND column_name = 'activity_level') THEN\n    ALTER TABLE quiz_responses ADD COLUMN activity_level TEXT;\n  END IF;\n  \n  -- Add constraints for enum fields\n  ALTER TABLE quiz_responses DROP CONSTRAINT IF EXISTS quiz_responses_activity_level_check;\n  ALTER TABLE quiz_responses ADD CONSTRAINT quiz_responses_activity_level_check \n    CHECK (activity_level = ANY (ARRAY['sedentary', 'lightly-active', 'moderately-active', 'very-active', 'extremely-active']));\n  \n  ALTER TABLE quiz_responses DROP CONSTRAINT IF EXISTS quiz_responses_sleep_quality_check;\n  ALTER TABLE quiz_responses ADD CONSTRAINT quiz_responses_sleep_quality_check \n    CHECK (sleep_quality = ANY (ARRAY['poor', 'fair', 'good', 'excellent']));\n  \n  ALTER TABLE quiz_responses DROP CONSTRAINT IF EXISTS quiz_responses_meditation_experience_check;\n  ALTER TABLE quiz_responses ADD CONSTRAINT quiz_responses_meditation_experience_check \n    CHECK (meditation_experience = ANY (ARRAY['none', 'beginner', 'intermediate', 'advanced']));\nEND $$;",
      "tokens": 0,
      "firstFile": {
        "name": "20250708204221_soft_king.sql",
        "start": 16,
        "end": 274,
        "startLoc": {
          "line": 16,
          "column": 1,
          "position": 3
        },
        "endLoc": {
          "line": 274,
          "column": 2,
          "position": 3866
        }
      },
      "secondFile": {
        "name": "20250708212920_billowing_cake.sql",
        "start": 17,
        "end": 272,
        "startLoc": {
          "line": 17,
          "column": 1,
          "position": 3
        },
        "endLoc": {
          "line": 272,
          "column": 2,
          "position": 3866
        }
      }
    },
    {
      "format": "sql",
      "lines": 9,
      "fragment": ",\nADD COLUMN IF NOT EXISTS stress_triggers TEXT[],\nADD COLUMN IF NOT EXISTS mental_health_goals TEXT[],\nADD COLUMN IF NOT EXISTS meditation_experience TEXT CHECK (meditation_experience IN ('none', 'beginner', 'intermediate', 'advanced')),\nADD COLUMN IF NOT EXISTS current_supplements TEXT[],\nADD COLUMN IF NOT EXISTS medication_list TEXT[],\nADD COLUMN IF NOT EXISTS medical_conditions TEXT[],\nADD COLUMN IF NOT EXISTS doctor_consultation BOOLEAN DEFAULT FALSE,\nADD COLUMN IF NOT EXISTS height",
      "tokens": 0,
      "firstFile": {
        "name": "20250627000000_enhanced_user_profile.sql",
        "start": 61,
        "end": 69,
        "startLoc": {
          "line": 61,
          "column": 2,
          "position": 846
        },
        "endLoc": {
          "line": 69,
          "column": 7,
          "position": 998
        }
      },
      "secondFile": {
        "name": "20250627000000_enhanced_user_profile.sql",
        "start": 39,
        "end": 47,
        "startLoc": {
          "line": 39,
          "column": 2,
          "position": 484
        },
        "endLoc": {
          "line": 47,
          "column": 26,
          "position": 636
        }
      }
    },
    {
      "format": "sql",
      "lines": 10,
      "fragment": "));\n\n-- Create indexes for performance\nCREATE INDEX IF NOT EXISTS idx_profiles_onboarding_completed ON profiles(onboarding_completed);\nCREATE INDEX IF NOT EXISTS idx_profiles_primary_health_goals ON profiles USING GIN(primary_health_goals);\nCREATE INDEX IF NOT EXISTS idx_profiles_fitness_goals ON profiles USING GIN(fitness_goals);\nCREATE INDEX IF NOT EXISTS idx_profiles_diet_preference ON profiles(diet_preference);\nCREATE INDEX IF NOT EXISTS idx_profiles_activity_level ON profiles(activity_level);\n\n-- Add comments for documentation",
      "tokens": 0,
      "firstFile": {
        "name": "20250627000000_enhanced_user_profile.sql",
        "start": 71,
        "end": 80,
        "startLoc": {
          "line": 71,
          "column": 19,
          "position": 1053
        },
        "endLoc": {
          "line": 80,
          "column": 34,
          "position": 1169
        }
      },
      "secondFile": {
        "name": "20250708215814_foggy_mud.sql",
        "start": 169,
        "end": 177,
        "startLoc": {
          "line": 169,
          "column": 3,
          "position": 2316
        },
        "endLoc": {
          "line": 177,
          "column": 7,
          "position": 2439
        }
      }
    },
    {
      "format": "sql",
      "lines": 12,
      "fragment": "-- Create audio_cache table if it doesn't exist\nCREATE TABLE IF NOT EXISTS audio_cache (\n  id uuid PRIMARY KEY DEFAULT gen_random_uuid(),\n  user_id uuid NOT NULL REFERENCES auth.users(id) ON DELETE CASCADE,\n  cache_key text NOT NULL,\n  audio_data bytea NOT NULL,\n  content_type text NOT NULL DEFAULT 'audio/mpeg',\n  created_at timestamptz DEFAULT now(),\n  expires_at timestamptz NOT NULL\n);\n\n-- Unique constraint for user_id and cache_key",
      "tokens": 0,
      "firstFile": {
        "name": "20250611130000_resolve_audio_cache.sql",
        "start": 14,
        "end": 25,
        "startLoc": {
          "line": 14,
          "column": 1,
          "position": 3
        },
        "endLoc": {
          "line": 25,
          "column": 47,
          "position": 119
        }
      },
      "secondFile": {
        "name": ".bolt/supabase_discarded_migrations/20250717071545_broken_stream.sql",
        "start": 22,
        "end": 33,
        "startLoc": {
          "line": 22,
          "column": 1,
          "position": 3
        },
        "endLoc": {
          "line": 33,
          "column": 48,
          "position": 119
        }
      }
    },
    {
      "format": "sql",
      "lines": 18,
      "fragment": "-- Create audio_cache table if it doesn't exist\nCREATE TABLE IF NOT EXISTS audio_cache (\n  id uuid PRIMARY KEY DEFAULT gen_random_uuid(),\n  user_id uuid NOT NULL REFERENCES auth.users(id) ON DELETE CASCADE,\n  cache_key text NOT NULL,\n  audio_data bytea NOT NULL,\n  content_type text NOT NULL DEFAULT 'audio/mpeg',\n  created_at timestamptz DEFAULT now(),\n  expires_at timestamptz NOT NULL\n);\n\n-- Create unique index on user_id and cache_key\nCREATE UNIQUE INDEX IF NOT EXISTS audio_cache_user_id_cache_key_idx ON audio_cache (user_id, cache_key);\n\n-- Create index on expires_at for cleanup operations\nCREATE INDEX IF NOT EXISTS audio_cache_expires_at_idx ON audio_cache (expires_at);\n\n-- Enable Row Level Security",
      "tokens": 0,
      "firstFile": {
        "name": "20250611125453_nameless_field.sql",
        "start": 15,
        "end": 32,
        "startLoc": {
          "line": 15,
          "column": 1,
          "position": 3
        },
        "endLoc": {
          "line": 32,
          "column": 29,
          "position": 172
        }
      },
      "secondFile": {
        "name": ".bolt/supabase_discarded_migrations/20250717071545_broken_stream.sql",
        "start": 22,
        "end": 39,
        "startLoc": {
          "line": 22,
          "column": 1,
          "position": 3
        },
        "endLoc": {
          "line": 39,
          "column": 40,
          "position": 172
        }
      }
    },
    {
      "format": "sql",
      "lines": 64,
      "fragment": "ALTER TABLE audio_cache ENABLE ROW LEVEL SECURITY;\n\nDO $$\nBEGIN\n    IF NOT EXISTS (\n        SELECT 1 FROM pg_policies\n        WHERE policyname = 'Users can read their own audio cache'\n          AND tablename = 'audio_cache'\n    ) THEN\n        CREATE POLICY \"Users can read their own audio cache\"\n            ON audio_cache\n            FOR SELECT\n            TO authenticated\n            USING (auth.uid() = user_id);\n    END IF;\nEND$$;\n\nDO $$\nBEGIN\n    IF NOT EXISTS (\n        SELECT 1 FROM pg_policies\n        WHERE policyname = 'Users can insert their own audio cache'\n          AND tablename = 'audio_cache'\n    ) THEN\n        CREATE POLICY \"Users can insert their own audio cache\"\n            ON audio_cache\n            FOR INSERT\n            TO authenticated\n            WITH CHECK (auth.uid() = user_id);\n    END IF;\nEND$$;\n\nDO $$\nBEGIN\n    IF NOT EXISTS (\n        SELECT 1 FROM pg_policies\n        WHERE policyname = 'Users can update their own audio cache'\n          AND tablename = 'audio_cache'\n    ) THEN\n        CREATE POLICY \"Users can update their own audio cache\"\n            ON audio_cache\n            FOR UPDATE\n            TO authenticated\n            USING (auth.uid() = user_id)\n            WITH CHECK (auth.uid() = user_id);\n    END IF;\nEND$$;\n\nDO $$\nBEGIN\n    IF NOT EXISTS (\n        SELECT 1 FROM pg_policies\n        WHERE policyname = 'Users can delete their own audio cache'\n          AND tablename = 'audio_cache'\n    ) THEN\n        CREATE POLICY \"Users can delete their own audio cache\"\n            ON audio_cache\n            FOR DELETE\n            TO authenticated\n            USING (auth.uid() = user_id);\n    END IF;\nEND$$;\n\n-- Create function to clean up expired cache entries",
      "tokens": 0,
      "firstFile": {
        "name": "20250611125453_nameless_field.sql",
        "start": 33,
        "end": 96,
        "startLoc": {
          "line": 33,
          "column": 1,
          "position": 174
        },
        "endLoc": {
          "line": 96,
          "column": 53,
          "position": 593
        }
      },
      "secondFile": {
        "name": "20250611130000_resolve_audio_cache.sql",
        "start": 34,
        "end": 97,
        "startLoc": {
          "line": 34,
          "column": 1,
          "position": 176
        },
        "endLoc": {
          "line": 97,
          "column": 38,
          "position": 595
        }
      }
    },
    {
      "format": "sql",
      "lines": 33,
      "fragment": "/*\n  # Audio Cache System\n\n  1. New Tables\n    - `audio_cache`: Stores cached audio data for text-to-speech responses\n      - `id` (uuid, primary key)\n      - `user_id` (uuid, references auth.users)\n      - `cache_key` (text)\n      - `audio_data` (bytea)\n      - `content_type` (text)\n      - `created_at` (timestamptz)\n      - `expires_at` (timestamptz)\n  \n  2. Security\n    - Enable RLS on `audio_cache` table\n    - Add policies for authenticated users to manage their own audio cache\n  \n  3. Maintenance\n    - Add function and trigger for automatic cleanup of expired cache entries\n*/\n\n-- Create audio_cache table if it doesn't exist\nCREATE TABLE IF NOT EXISTS audio_cache (\n  id uuid PRIMARY KEY DEFAULT gen_random_uuid(),\n  user_id uuid NOT NULL REFERENCES auth.users(id) ON DELETE CASCADE,\n  cache_key text NOT NULL,\n  audio_data bytea NOT NULL,\n  content_type text NOT NULL DEFAULT 'audio/mpeg',\n  created_at timestamptz DEFAULT now(),\n  expires_at timestamptz NOT NULL\n);\n\n-- Create unique index on user_id and cache_key if it doesn't exist",
      "tokens": 0,
      "firstFile": {
        "name": "20250609010758_dark_pebble.sql",
        "start": 1,
        "end": 33,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 33,
          "column": 68,
          "position": 119
        }
      },
      "secondFile": {
        "name": ".bolt/supabase_discarded_migrations/20250717071545_broken_stream.sql",
        "start": 1,
        "end": 33,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 33,
          "column": 48,
          "position": 119
        }
      }
    },
    {
      "format": "sql",
      "lines": 21,
      "fragment": "-- Create audio_cache table\nCREATE TABLE IF NOT EXISTS audio_cache (\n  id uuid PRIMARY KEY DEFAULT gen_random_uuid(),\n  user_id uuid NOT NULL REFERENCES auth.users(id) ON DELETE CASCADE,\n  cache_key text NOT NULL,\n  audio_data bytea NOT NULL,\n  content_type text NOT NULL DEFAULT 'audio/mpeg',\n  created_at timestamptz DEFAULT now(),\n  expires_at timestamptz NOT NULL\n);\n\n-- Create unique index on user_id and cache_key\nCREATE UNIQUE INDEX IF NOT EXISTS audio_cache_user_id_cache_key_idx ON audio_cache (user_id, cache_key);\n\n-- Create index on expires_at for cleanup operations\nCREATE INDEX IF NOT EXISTS audio_cache_expires_at_idx ON audio_cache (expires_at);\n\n-- Enable Row Level Security\nALTER TABLE audio_cache ENABLE ROW LEVEL SECURITY;\n\n-- Create policies for authenticated users",
      "tokens": 0,
      "firstFile": {
        "name": "20250609005139_spring_palace.sql",
        "start": 22,
        "end": 42,
        "startLoc": {
          "line": 22,
          "column": 1,
          "position": 3
        },
        "endLoc": {
          "line": 42,
          "column": 43,
          "position": 190
        }
      },
      "secondFile": {
        "name": "supabase/migrations/20250717071214_steep_desert.sql",
        "start": 22,
        "end": 35,
        "startLoc": {
          "line": 22,
          "column": 1,
          "position": 3
        },
        "endLoc": {
          "line": 35,
          "column": 3,
          "position": 190
        }
      }
    },
    {
      "format": "sql",
      "lines": 27,
      "fragment": ";\n\n-- Create function to clean up expired cache entries\nCREATE OR REPLACE FUNCTION cleanup_expired_audio_cache()\nRETURNS void\nLANGUAGE plpgsql\nSECURITY DEFINER\nAS $$\nBEGIN\n  DELETE FROM audio_cache\n  WHERE expires_at < now();\nEND;\n$$;\n\n-- Create a trigger to automatically clean up expired entries\nCREATE OR REPLACE FUNCTION trigger_cleanup_expired_audio_cache()\nRETURNS trigger\nLANGUAGE plpgsql\nSECURITY DEFINER\nAS $$\nBEGIN\n  PERFORM cleanup_expired_audio_cache();\n  RETURN NEW;\nEND;\n$$;\n\n-- Create a trigger that runs the cleanup function periodically",
      "tokens": 0,
      "firstFile": {
        "name": "20250609005139_spring_palace.sql",
        "start": 66,
        "end": 92,
        "startLoc": {
          "line": 66,
          "column": 2,
          "position": 360
        },
        "endLoc": {
          "line": 92,
          "column": 64,
          "position": 474
        }
      },
      "secondFile": {
        "name": "20250611125453_nameless_field.sql",
        "start": 94,
        "end": 120,
        "startLoc": {
          "line": 94,
          "column": 3,
          "position": 590
        },
        "endLoc": {
          "line": 120,
          "column": 65,
          "position": 704
        }
      }
    },
    {
      "format": "sql",
      "lines": 54,
      "fragment": "-- Create or replace the function to handle new user profile creation\nCREATE OR REPLACE FUNCTION public.create_profile_for_new_user()\nRETURNS TRIGGER AS $$\nDECLARE\n  user_email TEXT;\nBEGIN\n  -- Get the email from the new user record\n  user_email := NEW.email;\n  \n  -- Insert profile with proper error handling\n  BEGIN\n    INSERT INTO public.profiles (\n      id,\n      email,\n      created_at,\n      updated_at\n    ) VALUES (\n      NEW.id,\n      user_email,\n      NOW(),\n      NOW()\n    );\n  EXCEPTION WHEN OTHERS THEN\n    -- Log the error but don't fail the transaction\n    RAISE NOTICE 'Error creating profile for user %: %', NEW.id, SQLERRM;\n  END;\n  \n  RETURN NEW;\nEND;\n$$ LANGUAGE plpgsql SECURITY DEFINER;\n\n-- Add a policy to allow the service role to create profiles\nDO $$\nBEGIN\n  IF NOT EXISTS (\n    SELECT 1 FROM pg_policies \n    WHERE tablename = 'profiles' AND policyname = 'Service role has full access to profiles'\n  ) THEN\n    CREATE POLICY \"Service role has full access to profiles\"\n      ON profiles FOR ALL\n      TO service_role\n      USING (true)\n      WITH CHECK (true);\n  END IF;\nEND $$;\n\n-- Note: The trigger on auth.users will be created through the Supabase dashboard\n-- or using the Supabase CLI, as direct SQL migrations cannot modify the auth schema\n-- through the REST API.\n\n-- Instead, we'll create a comment to document this requirement\nCOMMENT ON FUNCTION public.create_profile_for_new_user() IS \n  'This function should be attached as a trigger AFTER INSERT ON auth.users. \n   Please create this trigger manually through the Supabase dashboard or CLI.';",
      "tokens": 0,
      "firstFile": {
        "name": "20250515063539_jolly_hill.sql",
        "start": 14,
        "end": 67,
        "startLoc": {
          "line": 14,
          "column": 1,
          "position": 3
        },
        "endLoc": {
          "line": 67,
          "column": 2,
          "position": 297
        }
      },
      "secondFile": {
        "name": "20250515064147_emerald_wood.sql",
        "start": 14,
        "end": 67,
        "startLoc": {
          "line": 14,
          "column": 1,
          "position": 3
        },
        "endLoc": {
          "line": 67,
          "column": 2,
          "position": 297
        }
      }
    },
    {
      "format": "sql",
      "lines": 47,
      "fragment": "-- Create deployments table if it doesn't exist\nCREATE TABLE IF NOT EXISTS deployments (\n  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n  status TEXT NOT NULL,\n  url TEXT,\n  error_message TEXT,\n  created_at TIMESTAMPTZ DEFAULT NOW(),\n  updated_at TIMESTAMPTZ DEFAULT NOW()\n);\n\n-- Enable RLS\nALTER TABLE deployments ENABLE ROW LEVEL SECURITY;\n\n-- Add RLS policies only if they don't exist\nDO $$\nBEGIN\n  IF NOT EXISTS (\n    SELECT 1 FROM pg_policies \n    WHERE tablename = 'deployments' AND policyname = 'Allow authenticated users to read deployments'\n  ) THEN\n    CREATE POLICY \"Allow authenticated users to read deployments\"\n      ON deployments FOR SELECT\n      USING (true);\n  END IF;\nEND $$;\n\n-- Create trigger function if it doesn't exist\nCREATE OR REPLACE FUNCTION update_updated_at_column()\nRETURNS TRIGGER AS $$\nBEGIN\n    NEW.updated_at = now();\n    RETURN NEW;\nEND;\n$$ language 'plpgsql';\n\n-- Add trigger to deployments table\nDROP TRIGGER IF EXISTS update_deployments_updated_at ON deployments;\nCREATE TRIGGER update_deployments_updated_at\n    BEFORE UPDATE ON deployments\n    FOR EACH ROW\n    EXECUTE FUNCTION update_updated_at_column();\n\n-- Insert sample deployment data\nINSERT INTO deployments (status, url, created_at)\nVALUES \n  ('deployed', 'https://biowell-app.netlify.app', NOW())\nON CONFLICT (id) DO NOTHING;",
      "tokens": 0,
      "firstFile": {
        "name": "20250515035013_raspy_flame.sql",
        "start": 1,
        "end": 47,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 47,
          "column": 2,
          "position": 328
        }
      },
      "secondFile": {
        "name": "20250515054433_bold_mouse.sql",
        "start": 1,
        "end": 47,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 47,
          "column": 2,
          "position": 328
        }
      }
    },
    {
      "format": "sql",
      "lines": 14,
      "fragment": "-- Create deployments table if it doesn't exist\nCREATE TABLE IF NOT EXISTS deployments (\n  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n  status TEXT NOT NULL,\n  url TEXT,\n  error_message TEXT,\n  created_at TIMESTAMPTZ DEFAULT NOW(),\n  updated_at TIMESTAMPTZ DEFAULT NOW()\n);\n\n-- Enable RLS\nALTER TABLE deployments ENABLE ROW LEVEL SECURITY;\n\n-- Add RLS policies",
      "tokens": 0,
      "firstFile": {
        "name": "20250515034253_humble_canyon.sql",
        "start": 18,
        "end": 31,
        "startLoc": {
          "line": 18,
          "column": 1,
          "position": 3
        },
        "endLoc": {
          "line": 31,
          "column": 20,
          "position": 102
        }
      },
      "secondFile": {
        "name": "20250515054433_bold_mouse.sql",
        "start": 1,
        "end": 14,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 14,
          "column": 45,
          "position": 99
        }
      }
    },
    {
      "format": "sql",
      "lines": 20,
      "fragment": "CREATE OR REPLACE FUNCTION update_updated_at_column()\nRETURNS TRIGGER AS $$\nBEGIN\n    NEW.updated_at = now();\n    RETURN NEW;\nEND;\n$$ language 'plpgsql';\n\n-- Add trigger to deployments table\nDROP TRIGGER IF EXISTS update_deployments_updated_at ON deployments;\nCREATE TRIGGER update_deployments_updated_at\n    BEFORE UPDATE ON deployments\n    FOR EACH ROW\n    EXECUTE FUNCTION update_updated_at_column();\n\n-- Insert sample deployment data\nINSERT INTO deployments (status, url, created_at)\nVALUES \n  ('deployed', 'https://biowell-app.netlify.app', NOW())\nON CONFLICT (id) DO NOTHING;",
      "tokens": 0,
      "firstFile": {
        "name": "20250515034253_humble_canyon.sql",
        "start": 37,
        "end": 56,
        "startLoc": {
          "line": 37,
          "column": 1,
          "position": 130
        },
        "endLoc": {
          "line": 56,
          "column": 2,
          "position": 272
        }
      },
      "secondFile": {
        "name": "20250515054433_bold_mouse.sql",
        "start": 28,
        "end": 47,
        "startLoc": {
          "line": 28,
          "column": 1,
          "position": 186
        },
        "endLoc": {
          "line": 47,
          "column": 2,
          "position": 328
        }
      }
    },
    {
      "format": "sql",
      "lines": 91,
      "fragment": "-- Check if supplement_forms table exists before creating\nDO $$\nBEGIN\n  IF NOT EXISTS (SELECT 1 FROM pg_tables WHERE tablename = 'supplement_forms') THEN\n    -- Create supplement_forms table\n    CREATE TABLE supplement_forms (\n      form_type TEXT PRIMARY KEY,\n      image_url TEXT NOT NULL,\n      used_for TEXT NOT NULL,\n      created_at TIMESTAMPTZ DEFAULT now(),\n      updated_at TIMESTAMPTZ DEFAULT now()\n    );\n\n    -- Enable RLS\n    ALTER TABLE supplement_forms ENABLE ROW LEVEL SECURITY;\n\n    -- Insert form types\n    INSERT INTO supplement_forms (form_type, image_url, used_for) VALUES\n      ('softgel', 'https://leznzqfezoofngumpiqf.supabase.co/storage/v1/object/sign/supplements/gel%20capsule%20ChatGPT%20Image%20May%204,%202025,%2006_50_42%20AM.png?token=7LqcdP_VcICkC1b-0Y4uFq9iapjjnU32JUEitEp3OTY', 'Omega-3, Vitamin D3, CoQ10, Krill Oil'),\n      ('capsule_solid', 'https://leznzqfezoofngumpiqf.supabase.co/storage/v1/object/sign/supplements/hard%20capsule.png?token=zstccXQIPhIofjVDRe1DlNtc1sw3VCLyjz4vxjIJkV8', 'Zinc, Magnesium, Vitamin B Complex'),\n      ('capsule_powder', 'https://leznzqfezoofngumpiqf.supabase.co/storage/v1/object/sign/supplements/powder%20capsule.png?token=XnuWlyUiL0oHpK4rr0Ej79FjlAGLwAoyoLGdNNSHtIo', 'Rhodiola, Ashwagandha, Tongkat Ali, Berberine'),\n      ('powder_large', 'https://leznzqfezoofngumpiqf.supabase.co/storage/v1/object/sign/supplements/protein%20generic%20gpt%20transoarent%20bg.png?token=D9gHlznz7L95OpBe14-v4Hm1Dr0nE71eaN94pd2jfKU', 'Whey Protein, Casein, Meal Replacement'),\n      ('powder_fine', 'https://leznzqfezoofngumpiqf.supabase.co/storage/v1/object/sign/supplements/creatine%20and%20other.png?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1cmwiOiJzdXBwbGVtZW50cy9jcmVhdGluZSBhbmQgb3RoZXIucG5nIiwiaWF0IjoxNzE0NzY4MzIzLCJleHAiOjE3NzgwNDgzMjN9.8JwY9hZJdCNHeWOGRzUBo5tGKBdVKT5eJ5lYpyLLTkU', 'Creatine, Beta-Alanine, L-Glutamine'),\n      ('liquid_bottle', 'https://leznzqfezoofngumpiqf.supabase.co/storage/v1/object/sign/supplements/drops%20bottle.png?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1cmwiOiJzdXBwbGVtZW50cy9kcm9wcyBib3R0bGUucG5nIiwiaWF0IjoxNzE0NzY4MzIzLCJleHAiOjE3NzgwNDgzMjN9.8JwY9hZJdCNHeWOGRzUBo5tGKBdVKT5eJ5lYpyLLTkU', 'CBD, Vitamin D3 Drops, Melatonin Drops'),\n      ('gummy', 'https://leznzqfezoofngumpiqf.supabase.co/storage/v1/object/sign/supplements/gummies.png?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1cmwiOiJzdXBwbGVtZW50cy9ndW1taWVzLnBuZyIsImlhdCI6MTcxNDc2ODMyMywiZXhwIjoxNzc4MDQ4MzIzfQ.8JwY9hZJdCNHeWOGRzUBo5tGKBdVKT5eJ5lYpyLLTkU', 'Multivitamin Gummies, Biotin, Melatonin, Kids Vitamins'),\n      ('stick_pack', 'https://leznzqfezoofngumpiqf.supabase.co/storage/v1/object/sign/supplements/stick%20packs.png?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1cmwiOiJzdXBwbGVtZW50cy9zdGljayBwYWNrcy5wbmciLCJpYXQiOjE3MTQ3NjgzMjMsImV4cCI6MTc3ODA0ODMyM30.8JwY9hZJdCNHeWOGRzUBo5tGKBdVKT5eJ5lYpyLLTkU', 'Electrolytes, Greens Powder, Collagen Peptides, Pre-Workout'),\n      ('effervescent', 'https://leznzqfezoofngumpiqf.supabase.co/storage/v1/object/sign/supplements/effervesent.png?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1cmwiOiJzdXBwbGVtZW50cy9lZmZlcnZlc2VudC5wbmciLCJpYXQiOjE3MTQ3NjgzMjMsImV4cCI6MTc3ODA0ODMyM30.8JwY9hZJdCNHeWOGRzUBo5tGKBdVKT5eJ5lYpyLLTkU', 'Vitamin C, Magnesium Efferv., Hydration Tablets');\n  END IF;\nEND $$;\n\n-- Add form columns to supplements table if they don't exist\nDO $$\nBEGIN\n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'supplements' AND column_name = 'form_type') THEN\n    ALTER TABLE supplements ADD COLUMN form_type TEXT REFERENCES supplement_forms(form_type);\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'supplements' AND column_name = 'form_image_url') THEN\n    ALTER TABLE supplements ADD COLUMN form_image_url TEXT;\n  END IF;\nEND $$;\n\n-- Assign default form types based on supplement names and descriptions\nUPDATE supplements SET form_type = \n  CASE \n    WHEN LOWER(name) LIKE '%oil%' OR LOWER(name) LIKE '%vitamin d%' OR LOWER(name) LIKE '%coq10%' THEN 'softgel'\n    WHEN LOWER(name) LIKE '%powder%' OR LOWER(name) LIKE '%creatine%' OR LOWER(name) LIKE '%protein%' THEN 'powder_large'\n    WHEN LOWER(name) LIKE '%gummy%' OR LOWER(name) LIKE '%gummies%' THEN 'gummy'\n    WHEN LOWER(name) LIKE '%liquid%' OR LOWER(name) LIKE '%drops%' THEN 'liquid_bottle'\n    WHEN LOWER(name) LIKE '%pack%' OR LOWER(name) LIKE '%sachet%' THEN 'stick_pack'\n    WHEN LOWER(name) LIKE '%effervescent%' OR LOWER(name) LIKE '%tablet%' THEN 'effervescent'\n    ELSE 'capsule_powder'\n  END\nWHERE form_type IS NULL;\n\n-- Update form_image_url based on form_type\nUPDATE supplements SET form_image_url = (\n  SELECT image_url FROM supplement_forms WHERE supplement_forms.form_type = supplements.form_type\n)\nWHERE form_type IS NOT NULL AND form_image_url IS NULL;\n\n-- Create or replace trigger function\nCREATE OR REPLACE FUNCTION update_form_image_url()\nRETURNS TRIGGER AS $$\nBEGIN\n  IF NEW.form_type IS NOT NULL THEN\n    SELECT image_url INTO NEW.form_image_url \n    FROM supplement_forms \n    WHERE form_type = NEW.form_type;\n  END IF;\n  RETURN NEW;\nEND;\n$$ LANGUAGE plpgsql;\n\n-- Drop existing trigger if it exists\nDROP TRIGGER IF EXISTS update_supplement_form_image ON supplements;\n\n-- Create trigger\nCREATE TRIGGER update_supplement_form_image\nBEFORE INSERT OR UPDATE OF form_type ON supplements\nFOR EACH ROW\nEXECUTE FUNCTION update_form_image_url();\n\n-- Create RLS policy only if it doesn't exist\nDO $$\nBEGIN\n  IF NOT EXISTS (\n    SELECT 1 FROM pg_policies \n    WHERE tablename = 'supplement_forms' AND policyname = 'Anyone can view supplement forms'\n  ) THEN\n    CREATE",
      "tokens": 0,
      "firstFile": {
        "name": "20250504051757_hidden_term.sql",
        "start": 1,
        "end": 91,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 91,
          "column": 7,
          "position": 894
        }
      },
      "secondFile": {
        "name": "20250504053757_mellow_pebble.sql",
        "start": 1,
        "end": 91,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 91,
          "column": 52,
          "position": 894
        }
      }
    },
    {
      "format": "sql",
      "lines": 95,
      "fragment": "-- Check if supplement_forms table exists before creating\nDO $$\nBEGIN\n  IF NOT EXISTS (SELECT 1 FROM pg_tables WHERE tablename = 'supplement_forms') THEN\n    -- Create supplement_forms table\n    CREATE TABLE supplement_forms (\n      form_type TEXT PRIMARY KEY,\n      image_url TEXT NOT NULL,\n      used_for TEXT NOT NULL,\n      created_at TIMESTAMPTZ DEFAULT now(),\n      updated_at TIMESTAMPTZ DEFAULT now()\n    );\n\n    -- Enable RLS\n    ALTER TABLE supplement_forms ENABLE ROW LEVEL SECURITY;\n\n    -- Insert form types\n    INSERT INTO supplement_forms (form_type, image_url, used_for) VALUES\n      ('softgel', 'https://leznzqfezoofngumpiqf.supabase.co/storage/v1/object/sign/supplements/gel%20capsule%20ChatGPT%20Image%20May%204,%202025,%2006_50_42%20AM.png?token=7LqcdP_VcICkC1b-0Y4uFq9iapjjnU32JUEitEp3OTY', 'Omega-3, Vitamin D3, CoQ10, Krill Oil'),\n      ('capsule_solid', 'https://leznzqfezoofngumpiqf.supabase.co/storage/v1/object/sign/supplements/hard%20capsule.png?token=zstccXQIPhIofjVDRe1DlNtc1sw3VCLyjz4vxjIJkV8', 'Zinc, Magnesium, Vitamin B Complex'),\n      ('capsule_powder', 'https://leznzqfezoofngumpiqf.supabase.co/storage/v1/object/sign/supplements/powder%20capsule.png?token=XnuWlyUiL0oHpK4rr0Ej79FjlAGLwAoyoLGdNNSHtIo', 'Rhodiola, Ashwagandha, Tongkat Ali, Berberine'),\n      ('powder_large', 'https://leznzqfezoofngumpiqf.supabase.co/storage/v1/object/sign/supplements/protein%20generic%20gpt%20transoarent%20bg.png?token=D9gHlznz7L95OpBe14-v4Hm1Dr0nE71eaN94pd2jfKU', 'Whey Protein, Casein, Meal Replacement'),\n      ('powder_fine', 'https://leznzqfezoofngumpiqf.supabase.co/storage/v1/object/sign/supplements/creatine%20and%20other.png?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1cmwiOiJzdXBwbGVtZW50cy9jcmVhdGluZSBhbmQgb3RoZXIucG5nIiwiaWF0IjoxNzE0NzY4MzIzLCJleHAiOjE3NzgwNDgzMjN9.8JwY9hZJdCNHeWOGRzUBo5tGKBdVKT5eJ5lYpyLLTkU', 'Creatine, Beta-Alanine, L-Glutamine'),\n      ('liquid_bottle', 'https://leznzqfezoofngumpiqf.supabase.co/storage/v1/object/sign/supplements/drops%20bottle.png?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1cmwiOiJzdXBwbGVtZW50cy9kcm9wcyBib3R0bGUucG5nIiwiaWF0IjoxNzE0NzY4MzIzLCJleHAiOjE3NzgwNDgzMjN9.8JwY9hZJdCNHeWOGRzUBo5tGKBdVKT5eJ5lYpyLLTkU', 'CBD, Vitamin D3 Drops, Melatonin Drops'),\n      ('gummy', 'https://leznzqfezoofngumpiqf.supabase.co/storage/v1/object/sign/supplements/gummies.png?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1cmwiOiJzdXBwbGVtZW50cy9ndW1taWVzLnBuZyIsImlhdCI6MTcxNDc2ODMyMywiZXhwIjoxNzc4MDQ4MzIzfQ.8JwY9hZJdCNHeWOGRzUBo5tGKBdVKT5eJ5lYpyLLTkU', 'Multivitamin Gummies, Biotin, Melatonin, Kids Vitamins'),\n      ('stick_pack', 'https://leznzqfezoofngumpiqf.supabase.co/storage/v1/object/sign/supplements/stick%20packs.png?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1cmwiOiJzdXBwbGVtZW50cy9zdGljayBwYWNrcy5wbmciLCJpYXQiOjE3MTQ3NjgzMjMsImV4cCI6MTc3ODA0ODMyM30.8JwY9hZJdCNHeWOGRzUBo5tGKBdVKT5eJ5lYpyLLTkU', 'Electrolytes, Greens Powder, Collagen Peptides, Pre-Workout'),\n      ('effervescent', 'https://leznzqfezoofngumpiqf.supabase.co/storage/v1/object/sign/supplements/effervesent.png?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1cmwiOiJzdXBwbGVtZW50cy9lZmZlcnZlc2VudC5wbmciLCJpYXQiOjE3MTQ3NjgzMjMsImV4cCI6MTc3ODA0ODMyM30.8JwY9hZJdCNHeWOGRzUBo5tGKBdVKT5eJ5lYpyLLTkU', 'Vitamin C, Magnesium Efferv., Hydration Tablets');\n  END IF;\nEND $$;\n\n-- Add form columns to supplements table if they don't exist\nDO $$\nBEGIN\n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'supplements' AND column_name = 'form_type') THEN\n    ALTER TABLE supplements ADD COLUMN form_type TEXT REFERENCES supplement_forms(form_type);\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'supplements' AND column_name = 'form_image_url') THEN\n    ALTER TABLE supplements ADD COLUMN form_image_url TEXT;\n  END IF;\nEND $$;\n\n-- Assign default form types based on supplement names and descriptions\nUPDATE supplements SET form_type = \n  CASE \n    WHEN LOWER(name) LIKE '%oil%' OR LOWER(name) LIKE '%vitamin d%' OR LOWER(name) LIKE '%coq10%' THEN 'softgel'\n    WHEN LOWER(name) LIKE '%powder%' OR LOWER(name) LIKE '%creatine%' OR LOWER(name) LIKE '%protein%' THEN 'powder_large'\n    WHEN LOWER(name) LIKE '%gummy%' OR LOWER(name) LIKE '%gummies%' THEN 'gummy'\n    WHEN LOWER(name) LIKE '%liquid%' OR LOWER(name) LIKE '%drops%' THEN 'liquid_bottle'\n    WHEN LOWER(name) LIKE '%pack%' OR LOWER(name) LIKE '%sachet%' THEN 'stick_pack'\n    WHEN LOWER(name) LIKE '%effervescent%' OR LOWER(name) LIKE '%tablet%' THEN 'effervescent'\n    ELSE 'capsule_powder'\n  END\nWHERE form_type IS NULL;\n\n-- Update form_image_url based on form_type\nUPDATE supplements SET form_image_url = (\n  SELECT image_url FROM supplement_forms WHERE supplement_forms.form_type = supplements.form_type\n)\nWHERE form_type IS NOT NULL AND form_image_url IS NULL;\n\n-- Create or replace trigger function\nCREATE OR REPLACE FUNCTION update_form_image_url()\nRETURNS TRIGGER AS $$\nBEGIN\n  IF NEW.form_type IS NOT NULL THEN\n    SELECT image_url INTO NEW.form_image_url \n    FROM supplement_forms \n    WHERE form_type = NEW.form_type;\n  END IF;\n  RETURN NEW;\nEND;\n$$ LANGUAGE plpgsql;\n\n-- Drop existing trigger if it exists\nDROP TRIGGER IF EXISTS update_supplement_form_image ON supplements;\n\n-- Create trigger\nCREATE TRIGGER update_supplement_form_image\nBEFORE INSERT OR UPDATE OF form_type ON supplements\nFOR EACH ROW\nEXECUTE FUNCTION update_form_image_url();\n\n-- Create RLS policy only if it doesn't exist\nDO $$\nBEGIN\n  IF NOT EXISTS (\n    SELECT 1 FROM pg_policies \n    WHERE tablename = 'supplement_forms' AND policyname = 'Anyone can view supplement forms'\n  ) THEN\n    CREATE POLICY \"Anyone can view supplement forms\"\n      ON supplement_forms FOR SELECT\n      USING (true);\n  END IF;\nEND $$;",
      "tokens": 0,
      "firstFile": {
        "name": "20250504050506_dawn_portal.sql",
        "start": 1,
        "end": 95,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 95,
          "column": 2,
          "position": 926
        }
      },
      "secondFile": {
        "name": "20250504053757_mellow_pebble.sql",
        "start": 1,
        "end": 95,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 95,
          "column": 2,
          "position": 926
        }
      }
    },
    {
      "format": "sql",
      "lines": 17,
      "fragment": "-- Check if supplement_forms table exists before creating\nDO $$\nBEGIN\n  IF NOT EXISTS (SELECT 1 FROM pg_tables WHERE tablename = 'supplement_forms') THEN\n    -- Create supplement_forms table\n    CREATE TABLE supplement_forms (\n      form_type TEXT PRIMARY KEY,\n      image_url TEXT NOT NULL,\n      used_for TEXT NOT NULL,\n      created_at TIMESTAMPTZ DEFAULT now(),\n      updated_at TIMESTAMPTZ DEFAULT now()\n    );\n\n    -- Enable RLS\n    ALTER TABLE supplement_forms ENABLE ROW LEVEL SECURITY;\n\n    -- Add RLS policies",
      "tokens": 0,
      "firstFile": {
        "name": "20250504045606_heavy_villa.sql",
        "start": 25,
        "end": 41,
        "startLoc": {
          "line": 25,
          "column": 1,
          "position": 3
        },
        "endLoc": {
          "line": 41,
          "column": 20,
          "position": 129
        }
      },
      "secondFile": {
        "name": "20250504053757_mellow_pebble.sql",
        "start": 1,
        "end": 17,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 17,
          "column": 21,
          "position": 126
        }
      }
    },
    {
      "format": "sql",
      "lines": 68,
      "fragment": ";\n\n    -- Insert form types\n    INSERT INTO supplement_forms (form_type, image_url, used_for) VALUES\n      ('softgel', 'https://leznzqfezoofngumpiqf.supabase.co/storage/v1/object/sign/supplements/gel%20capsule%20ChatGPT%20Image%20May%204,%202025,%2006_50_42%20AM.png?token=7LqcdP_VcICkC1b-0Y4uFq9iapjjnU32JUEitEp3OTY', 'Omega-3, Vitamin D3, CoQ10, Krill Oil'),\n      ('capsule_solid', 'https://leznzqfezoofngumpiqf.supabase.co/storage/v1/object/sign/supplements/hard%20capsule.png?token=zstccXQIPhIofjVDRe1DlNtc1sw3VCLyjz4vxjIJkV8', 'Zinc, Magnesium, Vitamin B Complex'),\n      ('capsule_powder', 'https://leznzqfezoofngumpiqf.supabase.co/storage/v1/object/sign/supplements/powder%20capsule.png?token=XnuWlyUiL0oHpK4rr0Ej79FjlAGLwAoyoLGdNNSHtIo', 'Rhodiola, Ashwagandha, Tongkat Ali, Berberine'),\n      ('powder_large', 'https://leznzqfezoofngumpiqf.supabase.co/storage/v1/object/sign/supplements/protein%20generic%20gpt%20transoarent%20bg.png?token=D9gHlznz7L95OpBe14-v4Hm1Dr0nE71eaN94pd2jfKU', 'Whey Protein, Casein, Meal Replacement'),\n      ('powder_fine', 'https://leznzqfezoofngumpiqf.supabase.co/storage/v1/object/sign/supplements/creatine%20and%20other.png?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1cmwiOiJzdXBwbGVtZW50cy9jcmVhdGluZSBhbmQgb3RoZXIucG5nIiwiaWF0IjoxNzE0NzY4MzIzLCJleHAiOjE3NzgwNDgzMjN9.8JwY9hZJdCNHeWOGRzUBo5tGKBdVKT5eJ5lYpyLLTkU', 'Creatine, Beta-Alanine, L-Glutamine'),\n      ('liquid_bottle', 'https://leznzqfezoofngumpiqf.supabase.co/storage/v1/object/sign/supplements/drops%20bottle.png?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1cmwiOiJzdXBwbGVtZW50cy9kcm9wcyBib3R0bGUucG5nIiwiaWF0IjoxNzE0NzY4MzIzLCJleHAiOjE3NzgwNDgzMjN9.8JwY9hZJdCNHeWOGRzUBo5tGKBdVKT5eJ5lYpyLLTkU', 'CBD, Vitamin D3 Drops, Melatonin Drops'),\n      ('gummy', 'https://leznzqfezoofngumpiqf.supabase.co/storage/v1/object/sign/supplements/gummies.png?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1cmwiOiJzdXBwbGVtZW50cy9ndW1taWVzLnBuZyIsImlhdCI6MTcxNDc2ODMyMywiZXhwIjoxNzc4MDQ4MzIzfQ.8JwY9hZJdCNHeWOGRzUBo5tGKBdVKT5eJ5lYpyLLTkU', 'Multivitamin Gummies, Biotin, Melatonin, Kids Vitamins'),\n      ('stick_pack', 'https://leznzqfezoofngumpiqf.supabase.co/storage/v1/object/sign/supplements/stick%20packs.png?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1cmwiOiJzdXBwbGVtZW50cy9zdGljayBwYWNrcy5wbmciLCJpYXQiOjE3MTQ3NjgzMjMsImV4cCI6MTc3ODA0ODMyM30.8JwY9hZJdCNHeWOGRzUBo5tGKBdVKT5eJ5lYpyLLTkU', 'Electrolytes, Greens Powder, Collagen Peptides, Pre-Workout'),\n      ('effervescent', 'https://leznzqfezoofngumpiqf.supabase.co/storage/v1/object/sign/supplements/effervesent.png?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1cmwiOiJzdXBwbGVtZW50cy9lZmZlcnZlc2VudC5wbmciLCJpYXQiOjE3MTQ3NjgzMjMsImV4cCI6MTc3ODA0ODMyM30.8JwY9hZJdCNHeWOGRzUBo5tGKBdVKT5eJ5lYpyLLTkU', 'Vitamin C, Magnesium Efferv., Hydration Tablets');\n  END IF;\nEND $$;\n\n-- Add form columns to supplements table if they don't exist\nDO $$\nBEGIN\n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'supplements' AND column_name = 'form_type') THEN\n    ALTER TABLE supplements ADD COLUMN form_type TEXT REFERENCES supplement_forms(form_type);\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'supplements' AND column_name = 'form_image_url') THEN\n    ALTER TABLE supplements ADD COLUMN form_image_url TEXT;\n  END IF;\nEND $$;\n\n-- Assign default form types based on supplement names and descriptions\nUPDATE supplements SET form_type = \n  CASE \n    WHEN LOWER(name) LIKE '%oil%' OR LOWER(name) LIKE '%vitamin d%' OR LOWER(name) LIKE '%coq10%' THEN 'softgel'\n    WHEN LOWER(name) LIKE '%powder%' OR LOWER(name) LIKE '%creatine%' OR LOWER(name) LIKE '%protein%' THEN 'powder_large'\n    WHEN LOWER(name) LIKE '%gummy%' OR LOWER(name) LIKE '%gummies%' THEN 'gummy'\n    WHEN LOWER(name) LIKE '%liquid%' OR LOWER(name) LIKE '%drops%' THEN 'liquid_bottle'\n    WHEN LOWER(name) LIKE '%pack%' OR LOWER(name) LIKE '%sachet%' THEN 'stick_pack'\n    WHEN LOWER(name) LIKE '%effervescent%' OR LOWER(name) LIKE '%tablet%' THEN 'effervescent'\n    ELSE 'capsule_powder'\n  END\nWHERE form_type IS NULL;\n\n-- Update form_image_url based on form_type\nUPDATE supplements SET form_image_url = (\n  SELECT image_url FROM supplement_forms WHERE supplement_forms.form_type = supplements.form_type\n)\nWHERE form_type IS NOT NULL AND form_image_url IS NULL;\n\n-- Create or replace trigger function\nCREATE OR REPLACE FUNCTION update_form_image_url()\nRETURNS TRIGGER AS $$\nBEGIN\n  IF NEW.form_type IS NOT NULL THEN\n    SELECT image_url INTO NEW.form_image_url \n    FROM supplement_forms \n    WHERE form_type = NEW.form_type;\n  END IF;\n  RETURN NEW;\nEND;\n$$ LANGUAGE plpgsql;\n\n-- Drop existing trigger if it exists\nDROP TRIGGER IF EXISTS update_supplement_form_image ON supplements;\n\n-- Create trigger\nCREATE TRIGGER update_supplement_form_image\nBEFORE INSERT OR UPDATE OF form_type ON supplements\nFOR EACH ROW\nEXECUTE FUNCTION update_form_image_url();",
      "tokens": 0,
      "firstFile": {
        "name": "20250504045606_heavy_villa.sql",
        "start": 44,
        "end": 111,
        "startLoc": {
          "line": 44,
          "column": 2,
          "position": 153
        },
        "endLoc": {
          "line": 111,
          "column": 2,
          "position": 872
        }
      },
      "secondFile": {
        "name": "20250504053757_mellow_pebble.sql",
        "start": 15,
        "end": 82,
        "startLoc": {
          "line": 15,
          "column": 9,
          "position": 122
        },
        "endLoc": {
          "line": 82,
          "column": 2,
          "position": 841
        }
      }
    },
    {
      "format": "sql",
      "lines": 87,
      "fragment": "-- Check if supplement_forms table exists before creating\nDO $$\nBEGIN\n  IF NOT EXISTS (SELECT 1 FROM pg_tables WHERE tablename = 'supplement_forms') THEN\n    -- Create supplement_forms table\n    CREATE TABLE supplement_forms (\n      form_type TEXT PRIMARY KEY,\n      image_url TEXT NOT NULL,\n      used_for TEXT NOT NULL,\n      created_at TIMESTAMPTZ DEFAULT now(),\n      updated_at TIMESTAMPTZ DEFAULT now()\n    );\n\n    -- Enable RLS\n    ALTER TABLE supplement_forms ENABLE ROW LEVEL SECURITY;\n\n    -- Add RLS policies\n    CREATE POLICY \"Anyone can view supplement forms\"\n      ON supplement_forms FOR SELECT\n      USING (true);\n\n    -- Insert form types\n    INSERT INTO supplement_forms (form_type, image_url, used_for) VALUES\n      ('softgel', 'https://leznzqfezoofngumpiqf.supabase.co/storage/v1/object/sign/supplements/gel%20capsule%20ChatGPT%20Image%20May%204,%202025,%2006_50_42%20AM.png?token=7LqcdP_VcICkC1b-0Y4uFq9iapjjnU32JUEitEp3OTY', 'Omega-3, Vitamin D3, CoQ10, Krill Oil'),\n      ('capsule_solid', 'https://leznzqfezoofngumpiqf.supabase.co/storage/v1/object/sign/supplements/hard%20capsule.png?token=zstccXQIPhIofjVDRe1DlNtc1sw3VCLyjz4vxjIJkV8', 'Zinc, Magnesium, Vitamin B Complex'),\n      ('capsule_powder', 'https://leznzqfezoofngumpiqf.supabase.co/storage/v1/object/sign/supplements/powder%20capsule.png?token=XnuWlyUiL0oHpK4rr0Ej79FjlAGLwAoyoLGdNNSHtIo', 'Rhodiola, Ashwagandha, Tongkat Ali, Berberine'),\n      ('powder_large', 'https://leznzqfezoofngumpiqf.supabase.co/storage/v1/object/sign/supplements/protein%20generic%20gpt%20transoarent%20bg.png?token=D9gHlznz7L95OpBe14-v4Hm1Dr0nE71eaN94pd2jfKU', 'Whey Protein, Casein, Meal Replacement'),\n      ('powder_fine', 'https://leznzqfezoofngumpiqf.supabase.co/storage/v1/object/sign/supplements/creatine%20and%20other.png?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1cmwiOiJzdXBwbGVtZW50cy9jcmVhdGluZSBhbmQgb3RoZXIucG5nIiwiaWF0IjoxNzE0NzY4MzIzLCJleHAiOjE3NzgwNDgzMjN9.8JwY9hZJdCNHeWOGRzUBo5tGKBdVKT5eJ5lYpyLLTkU', 'Creatine, Beta-Alanine, L-Glutamine'),\n      ('liquid_bottle', 'https://leznzqfezoofngumpiqf.supabase.co/storage/v1/object/sign/supplements/drops%20bottle.png?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1cmwiOiJzdXBwbGVtZW50cy9kcm9wcyBib3R0bGUucG5nIiwiaWF0IjoxNzE0NzY4MzIzLCJleHAiOjE3NzgwNDgzMjN9.8JwY9hZJdCNHeWOGRzUBo5tGKBdVKT5eJ5lYpyLLTkU', 'CBD, Vitamin D3 Drops, Melatonin Drops'),\n      ('gummy', 'https://leznzqfezoofngumpiqf.supabase.co/storage/v1/object/sign/supplements/gummies.png?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1cmwiOiJzdXBwbGVtZW50cy9ndW1taWVzLnBuZyIsImlhdCI6MTcxNDc2ODMyMywiZXhwIjoxNzc4MDQ4MzIzfQ.8JwY9hZJdCNHeWOGRzUBo5tGKBdVKT5eJ5lYpyLLTkU', 'Multivitamin Gummies, Biotin, Melatonin, Kids Vitamins'),\n      ('stick_pack', 'https://leznzqfezoofngumpiqf.supabase.co/storage/v1/object/sign/supplements/stick%20packs.png?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1cmwiOiJzdXBwbGVtZW50cy9zdGljayBwYWNrcy5wbmciLCJpYXQiOjE3MTQ3NjgzMjMsImV4cCI6MTc3ODA0ODMyM30.8JwY9hZJdCNHeWOGRzUBo5tGKBdVKT5eJ5lYpyLLTkU', 'Electrolytes, Greens Powder, Collagen Peptides, Pre-Workout'),\n      ('effervescent', 'https://leznzqfezoofngumpiqf.supabase.co/storage/v1/object/sign/supplements/effervesent.png?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1cmwiOiJzdXBwbGVtZW50cy9lZmZlcnZlc2VudC5wbmciLCJpYXQiOjE3MTQ3NjgzMjMsImV4cCI6MTc3ODA0ODMyM30.8JwY9hZJdCNHeWOGRzUBo5tGKBdVKT5eJ5lYpyLLTkU', 'Vitamin C, Magnesium Efferv., Hydration Tablets');\n  END IF;\nEND $$;\n\n-- Add form columns to supplements table if they don't exist\nDO $$\nBEGIN\n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'supplements' AND column_name = 'form_type') THEN\n    ALTER TABLE supplements ADD COLUMN form_type TEXT REFERENCES supplement_forms(form_type);\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'supplements' AND column_name = 'form_image_url') THEN\n    ALTER TABLE supplements ADD COLUMN form_image_url TEXT;\n  END IF;\nEND $$;\n\n-- Assign default form types based on supplement names and descriptions\nUPDATE supplements SET form_type = \n  CASE \n    WHEN LOWER(name) LIKE '%oil%' OR LOWER(name) LIKE '%vitamin d%' OR LOWER(name) LIKE '%coq10%' THEN 'softgel'\n    WHEN LOWER(name) LIKE '%powder%' OR LOWER(name) LIKE '%creatine%' OR LOWER(name) LIKE '%protein%' THEN 'powder_large'\n    WHEN LOWER(name) LIKE '%gummy%' OR LOWER(name) LIKE '%gummies%' THEN 'gummy'\n    WHEN LOWER(name) LIKE '%liquid%' OR LOWER(name) LIKE '%drops%' THEN 'liquid_bottle'\n    WHEN LOWER(name) LIKE '%pack%' OR LOWER(name) LIKE '%sachet%' THEN 'stick_pack'\n    WHEN LOWER(name) LIKE '%effervescent%' OR LOWER(name) LIKE '%tablet%' THEN 'effervescent'\n    ELSE 'capsule_powder'\n  END\nWHERE form_type IS NULL;\n\n-- Update form_image_url based on form_type\nUPDATE supplements SET form_image_url = (\n  SELECT image_url FROM supplement_forms WHERE supplement_forms.form_type = supplements.form_type\n)\nWHERE form_type IS NOT NULL AND form_image_url IS NULL;\n\n-- Create or replace trigger function\nCREATE OR REPLACE FUNCTION update_form_image_url()\nRETURNS TRIGGER AS $$\nBEGIN\n  IF NEW.form_type IS NOT NULL THEN\n    SELECT image_url INTO NEW.form_image_url \n    FROM supplement_forms \n    WHERE form_type = NEW.form_type;\n  END IF;\n  RETURN NEW;\nEND;\n$$ LANGUAGE plpgsql;\n\n-- Drop existing trigger if it exists\nDROP TRIGGER IF EXISTS update_supplement_form_image ON supplements;\n\n-- Create trigger\nCREATE TRIGGER update_supplement_form_image\nBEFORE INSERT OR UPDATE OF form_type ON supplements\nFOR EACH ROW\nEXECUTE FUNCTION update_form_image_url();",
      "tokens": 0,
      "firstFile": {
        "name": "20250504044000_rustic_breeze.sql",
        "start": 15,
        "end": 101,
        "startLoc": {
          "line": 15,
          "column": 1,
          "position": 3
        },
        "endLoc": {
          "line": 101,
          "column": 2,
          "position": 872
        }
      },
      "secondFile": {
        "name": "20250504053757_mellow_pebble.sql",
        "start": 1,
        "end": 82,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 82,
          "column": 2,
          "position": 841
        }
      }
    },
    {
      "format": "sql",
      "lines": 87,
      "fragment": "-- Check if supplement_forms table exists before creating\nDO $$\nBEGIN\n  IF NOT EXISTS (SELECT 1 FROM pg_tables WHERE tablename = 'supplement_forms') THEN\n    -- Create supplement_forms table\n    CREATE TABLE supplement_forms (\n      form_type TEXT PRIMARY KEY,\n      image_url TEXT NOT NULL,\n      used_for TEXT NOT NULL,\n      created_at TIMESTAMPTZ DEFAULT now(),\n      updated_at TIMESTAMPTZ DEFAULT now()\n    );\n\n    -- Enable RLS\n    ALTER TABLE supplement_forms ENABLE ROW LEVEL SECURITY;\n\n    -- Add RLS policies\n    CREATE POLICY \"Anyone can view supplement forms\"\n      ON supplement_forms FOR SELECT\n      USING (true);\n\n    -- Insert form types\n    INSERT INTO supplement_forms (form_type, image_url, used_for) VALUES\n      ('softgel', 'https://leznzqfezoofngumpiqf.supabase.co/storage/v1/object/sign/supplements/gel%20capsule%20ChatGPT%20Image%20May%204,%202025,%2006_50_42%20AM.png?token=7LqcdP_VcICkC1b-0Y4uFq9iapjjnU32JUEitEp3OTY', 'Omega-3, Vitamin D3, CoQ10, Krill Oil'),\n      ('capsule_solid', 'https://leznzqfezoofngumpiqf.supabase.co/storage/v1/object/sign/supplements/hard%20capsule.png?token=zstccXQIPhIofjVDRe1DlNtc1sw3VCLyjz4vxjIJkV8', 'Zinc, Magnesium, Vitamin B Complex'),\n      ('capsule_powder', 'https://leznzqfezoofngumpiqf.supabase.co/storage/v1/object/sign/supplements/powder%20capsule.png?token=XnuWlyUiL0oHpK4rr0Ej79FjlAGLwAoyoLGdNNSHtIo', 'Rhodiola, Ashwagandha, Tongkat Ali, Berberine'),\n      ('powder_large', 'https://leznzqfezoofngumpiqf.supabase.co/storage/v1/object/sign/supplements/protein%20generic%20gpt%20transoarent%20bg.png?token=D9gHlznz7L95OpBe14-v4Hm1Dr0nE71eaN94pd2jfKU', 'Whey Protein, Casein, Meal Replacement'),\n      ('powder_fine', 'https://leznzqfezoofngumpiqf.supabase.co/storage/v1/object/sign/supplements/creatine%20and%20other.png?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1cmwiOiJzdXBwbGVtZW50cy9jcmVhdGluZSBhbmQgb3RoZXIucG5nIiwiaWF0IjoxNzE0NzY4MzIzLCJleHAiOjE3NzgwNDgzMjN9.8JwY9hZJdCNHeWOGRzUBo5tGKBdVKT5eJ5lYpyLLTkU', 'Creatine, Beta-Alanine, L-Glutamine'),\n      ('liquid_bottle', 'https://leznzqfezoofngumpiqf.supabase.co/storage/v1/object/sign/supplements/drops%20bottle.png?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1cmwiOiJzdXBwbGVtZW50cy9kcm9wcyBib3R0bGUucG5nIiwiaWF0IjoxNzE0NzY4MzIzLCJleHAiOjE3NzgwNDgzMjN9.8JwY9hZJdCNHeWOGRzUBo5tGKBdVKT5eJ5lYpyLLTkU', 'CBD, Vitamin D3 Drops, Melatonin Drops'),\n      ('gummy', 'https://leznzqfezoofngumpiqf.supabase.co/storage/v1/object/sign/supplements/gummies.png?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1cmwiOiJzdXBwbGVtZW50cy9ndW1taWVzLnBuZyIsImlhdCI6MTcxNDc2ODMyMywiZXhwIjoxNzc4MDQ4MzIzfQ.8JwY9hZJdCNHeWOGRzUBo5tGKBdVKT5eJ5lYpyLLTkU', 'Multivitamin Gummies, Biotin, Melatonin, Kids Vitamins'),\n      ('stick_pack', 'https://leznzqfezoofngumpiqf.supabase.co/storage/v1/object/sign/supplements/stick%20packs.png?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1cmwiOiJzdXBwbGVtZW50cy9zdGljayBwYWNrcy5wbmciLCJpYXQiOjE3MTQ3NjgzMjMsImV4cCI6MTc3ODA0ODMyM30.8JwY9hZJdCNHeWOGRzUBo5tGKBdVKT5eJ5lYpyLLTkU', 'Electrolytes, Greens Powder, Collagen Peptides, Pre-Workout'),\n      ('effervescent', 'https://leznzqfezoofngumpiqf.supabase.co/storage/v1/object/sign/supplements/effervesent.png?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1cmwiOiJzdXBwbGVtZW50cy9lZmZlcnZlc2VudC5wbmciLCJpYXQiOjE3MTQ3NjgzMjMsImV4cCI6MTc3ODA0ODMyM30.8JwY9hZJdCNHeWOGRzUBo5tGKBdVKT5eJ5lYpyLLTkU', 'Vitamin C, Magnesium Efferv., Hydration Tablets');\n  END IF;\nEND $$;\n\n-- Add form columns to supplements table if they don't exist\nDO $$\nBEGIN\n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'supplements' AND column_name = 'form_type') THEN\n    ALTER TABLE supplements ADD COLUMN form_type TEXT REFERENCES supplement_forms(form_type);\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'supplements' AND column_name = 'form_image_url') THEN\n    ALTER TABLE supplements ADD COLUMN form_image_url TEXT;\n  END IF;\nEND $$;\n\n-- Assign default form types based on supplement names and descriptions\nUPDATE supplements SET form_type = \n  CASE \n    WHEN LOWER(name) LIKE '%oil%' OR LOWER(name) LIKE '%vitamin d%' OR LOWER(name) LIKE '%coq10%' THEN 'softgel'\n    WHEN LOWER(name) LIKE '%powder%' OR LOWER(name) LIKE '%creatine%' OR LOWER(name) LIKE '%protein%' THEN 'powder_large'\n    WHEN LOWER(name) LIKE '%gummy%' OR LOWER(name) LIKE '%gummies%' THEN 'gummy'\n    WHEN LOWER(name) LIKE '%liquid%' OR LOWER(name) LIKE '%drops%' THEN 'liquid_bottle'\n    WHEN LOWER(name) LIKE '%pack%' OR LOWER(name) LIKE '%sachet%' THEN 'stick_pack'\n    WHEN LOWER(name) LIKE '%effervescent%' OR LOWER(name) LIKE '%tablet%' THEN 'effervescent'\n    ELSE 'capsule_powder'\n  END\nWHERE form_type IS NULL;\n\n-- Update form_image_url based on form_type\nUPDATE supplements SET form_image_url = (\n  SELECT image_url FROM supplement_forms WHERE supplement_forms.form_type = supplements.form_type\n)\nWHERE form_type IS NOT NULL AND form_image_url IS NULL;\n\n-- Create or replace trigger function\nCREATE OR REPLACE FUNCTION update_form_image_url()\nRETURNS TRIGGER AS $$\nBEGIN\n  IF NEW.form_type IS NOT NULL THEN\n    SELECT image_url INTO NEW.form_image_url \n    FROM supplement_forms \n    WHERE form_type = NEW.form_type;\n  END IF;\n  RETURN NEW;\nEND;\n$$ LANGUAGE plpgsql;\n\n-- Drop existing trigger if it exists\nDROP TRIGGER IF EXISTS update_supplement_form_image ON supplements;\n\n-- Create trigger\nCREATE TRIGGER update_supplement_form_image\nBEFORE INSERT OR UPDATE OF form_type ON supplements\nFOR EACH ROW\nEXECUTE FUNCTION update_form_image_url();",
      "tokens": 0,
      "firstFile": {
        "name": "20250504043319_orange_river.sql",
        "start": 14,
        "end": 100,
        "startLoc": {
          "line": 14,
          "column": 1,
          "position": 3
        },
        "endLoc": {
          "line": 100,
          "column": 2,
          "position": 872
        }
      },
      "secondFile": {
        "name": "20250504053757_mellow_pebble.sql",
        "start": 1,
        "end": 82,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 82,
          "column": 2,
          "position": 841
        }
      }
    },
    {
      "format": "sql",
      "lines": 87,
      "fragment": "-- Check if supplement_forms table exists before creating\nDO $$\nBEGIN\n  IF NOT EXISTS (SELECT 1 FROM pg_tables WHERE tablename = 'supplement_forms') THEN\n    -- Create supplement_forms table\n    CREATE TABLE supplement_forms (\n      form_type TEXT PRIMARY KEY,\n      image_url TEXT NOT NULL,\n      used_for TEXT NOT NULL,\n      created_at TIMESTAMPTZ DEFAULT now(),\n      updated_at TIMESTAMPTZ DEFAULT now()\n    );\n\n    -- Enable RLS\n    ALTER TABLE supplement_forms ENABLE ROW LEVEL SECURITY;\n\n    -- Add RLS policies\n    CREATE POLICY \"Anyone can view supplement forms\"\n      ON supplement_forms FOR SELECT\n      USING (true);\n\n    -- Insert form types\n    INSERT INTO supplement_forms (form_type, image_url, used_for) VALUES\n      ('softgel', 'https://leznzqfezoofngumpiqf.supabase.co/storage/v1/object/sign/supplements/gel%20capsule%20ChatGPT%20Image%20May%204,%202025,%2006_50_42%20AM.png?token=7LqcdP_VcICkC1b-0Y4uFq9iapjjnU32JUEitEp3OTY', 'Omega-3, Vitamin D3, CoQ10, Krill Oil'),\n      ('capsule_solid', 'https://leznzqfezoofngumpiqf.supabase.co/storage/v1/object/sign/supplements/hard%20capsule.png?token=zstccXQIPhIofjVDRe1DlNtc1sw3VCLyjz4vxjIJkV8', 'Zinc, Magnesium, Vitamin B Complex'),\n      ('capsule_powder', 'https://leznzqfezoofngumpiqf.supabase.co/storage/v1/object/sign/supplements/powder%20capsule.png?token=XnuWlyUiL0oHpK4rr0Ej79FjlAGLwAoyoLGdNNSHtIo', 'Rhodiola, Ashwagandha, Tongkat Ali, Berberine'),\n      ('powder_large', 'https://leznzqfezoofngumpiqf.supabase.co/storage/v1/object/sign/supplements/protein%20generic%20gpt%20transoarent%20bg.png?token=D9gHlznz7L95OpBe14-v4Hm1Dr0nE71eaN94pd2jfKU', 'Whey Protein, Casein, Meal Replacement'),\n      ('powder_fine', 'https://leznzqfezoofngumpiqf.supabase.co/storage/v1/object/sign/supplements/creatine%20and%20other.png?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1cmwiOiJzdXBwbGVtZW50cy9jcmVhdGluZSBhbmQgb3RoZXIucG5nIiwiaWF0IjoxNzE0NzY4MzIzLCJleHAiOjE3NzgwNDgzMjN9.8JwY9hZJdCNHeWOGRzUBo5tGKBdVKT5eJ5lYpyLLTkU', 'Creatine, Beta-Alanine, L-Glutamine'),\n      ('liquid_bottle', 'https://leznzqfezoofngumpiqf.supabase.co/storage/v1/object/sign/supplements/drops%20bottle.png?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1cmwiOiJzdXBwbGVtZW50cy9kcm9wcyBib3R0bGUucG5nIiwiaWF0IjoxNzE0NzY4MzIzLCJleHAiOjE3NzgwNDgzMjN9.8JwY9hZJdCNHeWOGRzUBo5tGKBdVKT5eJ5lYpyLLTkU', 'CBD, Vitamin D3 Drops, Melatonin Drops'),\n      ('gummy', 'https://leznzqfezoofngumpiqf.supabase.co/storage/v1/object/sign/supplements/gummies.png?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1cmwiOiJzdXBwbGVtZW50cy9ndW1taWVzLnBuZyIsImlhdCI6MTcxNDc2ODMyMywiZXhwIjoxNzc4MDQ4MzIzfQ.8JwY9hZJdCNHeWOGRzUBo5tGKBdVKT5eJ5lYpyLLTkU', 'Multivitamin Gummies, Biotin, Melatonin, Kids Vitamins'),\n      ('stick_pack', 'https://leznzqfezoofngumpiqf.supabase.co/storage/v1/object/sign/supplements/stick%20packs.png?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1cmwiOiJzdXBwbGVtZW50cy9zdGljayBwYWNrcy5wbmciLCJpYXQiOjE3MTQ3NjgzMjMsImV4cCI6MTc3ODA0ODMyM30.8JwY9hZJdCNHeWOGRzUBo5tGKBdVKT5eJ5lYpyLLTkU', 'Electrolytes, Greens Powder, Collagen Peptides, Pre-Workout'),\n      ('effervescent', 'https://leznzqfezoofngumpiqf.supabase.co/storage/v1/object/sign/supplements/effervesent.png?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1cmwiOiJzdXBwbGVtZW50cy9lZmZlcnZlc2VudC5wbmciLCJpYXQiOjE3MTQ3NjgzMjMsImV4cCI6MTc3ODA0ODMyM30.8JwY9hZJdCNHeWOGRzUBo5tGKBdVKT5eJ5lYpyLLTkU', 'Vitamin C, Magnesium Efferv., Hydration Tablets');\n  END IF;\nEND $$;\n\n-- Add form columns to supplements table if they don't exist\nDO $$\nBEGIN\n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'supplements' AND column_name = 'form_type') THEN\n    ALTER TABLE supplements ADD COLUMN form_type TEXT REFERENCES supplement_forms(form_type);\n  END IF;\n  \n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'supplements' AND column_name = 'form_image_url') THEN\n    ALTER TABLE supplements ADD COLUMN form_image_url TEXT;\n  END IF;\nEND $$;\n\n-- Assign default form types based on supplement names and descriptions\nUPDATE supplements SET form_type = \n  CASE \n    WHEN LOWER(name) LIKE '%oil%' OR LOWER(name) LIKE '%vitamin d%' OR LOWER(name) LIKE '%coq10%' THEN 'softgel'\n    WHEN LOWER(name) LIKE '%powder%' OR LOWER(name) LIKE '%creatine%' OR LOWER(name) LIKE '%protein%' THEN 'powder_large'\n    WHEN LOWER(name) LIKE '%gummy%' OR LOWER(name) LIKE '%gummies%' THEN 'gummy'\n    WHEN LOWER(name) LIKE '%liquid%' OR LOWER(name) LIKE '%drops%' THEN 'liquid_bottle'\n    WHEN LOWER(name) LIKE '%pack%' OR LOWER(name) LIKE '%sachet%' THEN 'stick_pack'\n    WHEN LOWER(name) LIKE '%effervescent%' OR LOWER(name) LIKE '%tablet%' THEN 'effervescent'\n    ELSE 'capsule_powder'\n  END\nWHERE form_type IS NULL;\n\n-- Update form_image_url based on form_type\nUPDATE supplements SET form_image_url = (\n  SELECT image_url FROM supplement_forms WHERE supplement_forms.form_type = supplements.form_type\n)\nWHERE form_type IS NOT NULL AND form_image_url IS NULL;\n\n-- Create or replace trigger function\nCREATE OR REPLACE FUNCTION update_form_image_url()\nRETURNS TRIGGER AS $$\nBEGIN\n  IF NEW.form_type IS NOT NULL THEN\n    SELECT image_url INTO NEW.form_image_url \n    FROM supplement_forms \n    WHERE form_type = NEW.form_type;\n  END IF;\n  RETURN NEW;\nEND;\n$$ LANGUAGE plpgsql;\n\n-- Drop existing trigger if it exists\nDROP TRIGGER IF EXISTS update_supplement_form_image ON supplements;\n\n-- Create trigger\nCREATE TRIGGER update_supplement_form_image\nBEFORE INSERT OR UPDATE OF form_type ON supplements\nFOR EACH ROW\nEXECUTE FUNCTION update_form_image_url();",
      "tokens": 0,
      "firstFile": {
        "name": "20250504042549_cool_paper.sql",
        "start": 21,
        "end": 107,
        "startLoc": {
          "line": 21,
          "column": 1,
          "position": 3
        },
        "endLoc": {
          "line": 107,
          "column": 2,
          "position": 872
        }
      },
      "secondFile": {
        "name": "20250504053757_mellow_pebble.sql",
        "start": 1,
        "end": 82,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 82,
          "column": 2,
          "position": 841
        }
      }
    },
    {
      "format": "sql",
      "lines": 14,
      "fragment": ";\n\n-- Enable RLS\nALTER TABLE supplement_forms ENABLE ROW LEVEL SECURITY;\n\n-- Add RLS policies\nCREATE POLICY \"Anyone can view supplement forms\"\n  ON supplement_forms FOR SELECT\n  USING (true);\n\n-- Insert form types\nINSERT INTO supplement_forms (form_type, image_url, used_for) VALUES\n  ('softgel', 'https://leznzqfezoofngumpiqf.supabase.co/storage/v1/object/sign/supplements/gel%20capsule%20ChatGPT%20Image%20May%204,%202025,%2006_50_42%20AM.png?token=7LqcdP_VcICkC1b-0Y4uFq9iapjjnU32JUEitEp3OTY', 'Omega-3, Vitamin D3, CoQ10, Krill Oil'),\n  ('",
      "tokens": 0,
      "firstFile": {
        "name": "20250504032059_wispy_bread.sql",
        "start": 31,
        "end": 44,
        "startLoc": {
          "line": 31,
          "column": 5,
          "position": 120
        },
        "endLoc": {
          "line": 44,
          "column": 5,
          "position": 211
        }
      },
      "secondFile": {
        "name": "20250504045606_heavy_villa.sql",
        "start": 36,
        "end": 49,
        "startLoc": {
          "line": 36,
          "column": 2,
          "position": 105
        },
        "endLoc": {
          "line": 49,
          "column": 9,
          "position": 202
        }
      }
    },
    {
      "format": "sql",
      "lines": 28,
      "fragment": "INSERT INTO public.profiles (\n  id,\n  email,\n  first_name,\n  last_name,\n  is_admin,\n  onboarding_completed,\n  created_at,\n  updated_at\n)\nSELECT \n  u.id,\n  u.email,\n  'Ahmed',\n  'Sharara',\n  true,\n  true,\n  now(),\n  now()\nFROM auth.users u\nWHERE u.email = 'ahmed.m.sharara@gmail.com'\nON CONFLICT (id) DO UPDATE\nSET \n  first_name = 'Ahmed',\n  last_name = 'Sharara',\n  is_admin = true,\n  onboarding_completed = true,\n  updated_at = now();",
      "tokens": 0,
      "firstFile": {
        "name": "20250502070946_icy_dune.sql",
        "start": 48,
        "end": 75,
        "startLoc": {
          "line": 48,
          "column": 1,
          "position": 173
        },
        "endLoc": {
          "line": 75,
          "column": 2,
          "position": 331
        }
      },
      "secondFile": {
        "name": "20250502071348_shrill_sun.sql",
        "start": 53,
        "end": 80,
        "startLoc": {
          "line": 53,
          "column": 1,
          "position": 287
        },
        "endLoc": {
          "line": 80,
          "column": 2,
          "position": 445
        }
      }
    },
    {
      "format": "sql",
      "lines": 63,
      "fragment": "('Performance','Performance Stack (Hydrolyzed variant)',406.90,'[\n  {\"name\":\"Hydrolyzed Whey Protein Isolate\",\"dosage\":\"907 g\",\"price\":260.00},\n  {\"name\":\"Micronized Creatine Monohydrate\",\"dosage\":\"300 g\",\"price\":60.00},\n  {\"name\":\"L-Glutamine Powder\",\"dosage\":\"300 g\",\"price\":86.90}\n]'),\n('Performance','Performance Stack (Isolate variant)',326.90,'[\n  {\"name\":\"Whey Protein Isolate\",\"dosage\":\"907 g\",\"price\":180.00},\n  {\"name\":\"Micronized Creatine Monohydrate\",\"dosage\":\"300 g\",\"price\":60.00},\n  {\"name\":\"L-Glutamine Powder\",\"dosage\":\"300 g\",\"price\":86.90}\n]'),\n('Sleep / Recovery','Recovery Stack',222.00,'[\n  {\"name\":\"Scivation XTEND BCAA Powder\",\"dosage\":\"30 servings\",\"price\":77.94},\n  {\"name\":\"Magnesium Citrate\",\"dosage\":\"120 caps\",\"price\":57.10},\n  {\"name\":\"MuscleTech Platinum L-Glutamine\",\"dosage\":\"300 g\",\"price\":86.90}\n]'),\n('Sleep / Recovery','Sleep & Relaxation Stack',148.00,'[\n  {\"name\":\"Natrol Melatonin\",\"dosage\":\"5 mg, 60 tabs\",\"price\":49.00},\n  {\"name\":\"NOW Foods GABA\",\"dosage\":\"500 mg, 120 caps\",\"price\":58.00},\n  {\"name\":\"Calmful Magnesium Powder\",\"dosage\":\"200 g\",\"price\":41.00}\n]'),\n('Longevity','Longevity Stack',285.00,'[\n  {\"name\":\"Tru Niagen® Nicotinamide Riboside\",\"dosage\":\"300 mg, 30 caps\",\"price\":180.00},\n  {\"name\":\"Life Extension Resveratrol\",\"dosage\":\"200 mg, 60 caps\",\"price\":75.00},\n  {\"name\":\"Thorne Research Vitamin B6\",\"dosage\":\"10 mg, 60 caps\",\"price\":30.00}\n]'),\n('Metabolic','Core Wellness Stack',171.23,'[\n  {\"name\":\"Centrum Men''s Multivitamin\",\"dosage\":\"60 tabs\",\"price\":97.23},\n  {\"name\":\"NBL Natural Fish Oil Super Omega-3\",\"dosage\":\"100 softgels\",\"price\":39.00},\n  {\"name\":\"Now Foods Vitamin D-3\",\"dosage\":\"2000 IU, 120 softgels\",\"price\":35.00}\n]'),\n('Metabolic','Energy & Metabolism Stack',274.00,'[\n  {\"name\":\"Jarrow B-Right B-Complex\",\"dosage\":\"60 caps\",\"price\":82.00},\n  {\"name\":\"NOW Foods CoQ10\",\"dosage\":\"200 mg, 60 softgels\",\"price\":55.00},\n  {\"name\":\"Optimum Nutrition L-Carnitine\",\"dosage\":\"500 mg, 60 caps\",\"price\":62.00},\n  {\"name\":\"Apple Cider Vinegar Gummies\",\"dosage\":\"60 gummies\",\"price\":75.00}\n]'),\n('Metabolic','Glucose Control Stack',385.00,'[\n  {\"name\":\"Berberine HCl\",\"dosage\":\"500 mg, 60 caps\",\"price\":110.00},\n  {\"name\":\"Chromium Picolinate\",\"dosage\":\"200 mcg, 120 caps\",\"price\":65.00},\n  {\"name\":\"Alpha-Lipoic Acid\",\"dosage\":\"600 mg, 60 caps\",\"price\":120.00},\n  {\"name\":\"Cinnamon Bark Extract\",\"dosage\":\"500 mg, 120 caps\",\"price\":55.00},\n  {\"name\":\"Myo-Inositol\",\"dosage\":\"500 mg, 120 caps\",\"price\":80.00}\n]'),\n('Fertility','Male Fertility Stack',242.00,'[\n  {\"name\":\"Thorne Zinc Picolinate\",\"dosage\":\"30 mg, 180 caps\",\"price\":95.00},\n  {\"name\":\"Life Extension Male Multi\",\"dosage\":\"60 caps\",\"price\":92.00},\n  {\"name\":\"Jarrow L-Carnitine\",\"dosage\":\"500 mg, 60 caps\",\"price\":55.00}\n]'),\n('Fertility','Female Fertility Stack',228.00,'[\n  {\"name\":\"mykind Organics Prenatal Multi\",\"dosage\":\"120 tabs\",\"price\":125.00},\n  {\"name\":\"Pure Encapsulations Myo-Inositol\",\"dosage\":\"500 mg, 120 caps\",\"price\":63.00},\n  {\"name\":\"NOW Foods Folate\",\"dosage\":\"800 mcg, 100 caps\",\"price\":40.00}\n]'),\n('Gut Health','Gut Health Stack',178.00,'[\n  {\"name\":\"Garden of Life Probiotics\",\"dosage\":\"30 caps\",\"price\":110.00},\n  {\"name\":\"NOW Foods Inulin Prebiotic Fiber\",\"dosage\":\"226 g\",\"price\":38.00},\n  {\"name\":\"Enzymedica Digest Gold Enzymes\",\"dosage\":\"60 caps\",\"price\":30.00}\n]'),\n('Gut Health','Gut Comfort Stack (Most Comfort)',446.90,'[\n  {\"name\":\"Hydrolyzed Whey Isolate\",\"dosage\":\"907 g\",\"price\":260.00},\n  {\"name\":\"L-Glutamine\",\"dosage\":\"300 g\",\"price\":86.90},\n  {\"name\":\"Collagen Peptides\",\"dosage\":\"300 g\",\"price\":100.00}\n]');",
      "tokens": 0,
      "firstFile": {
        "name": "20250422053012_noisy_summit.sql",
        "start": 36,
        "end": 98,
        "startLoc": {
          "line": 36,
          "column": 1,
          "position": 145
        },
        "endLoc": {
          "line": 98,
          "column": 2,
          "position": 275
        }
      },
      "secondFile": {
        "name": "20250503090706_dawn_jungle.sql",
        "start": 20,
        "end": 82,
        "startLoc": {
          "line": 20,
          "column": 1,
          "position": 26
        },
        "endLoc": {
          "line": 82,
          "column": 2,
          "position": 156
        }
      }
    }
  ]
}